<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    
    <title>The Blue Book</title>
    <description>My personal digital garden</description>
    <link>https://lyz-code.github.io/blue-book</link>
    <atom:link href="https://lyz-code.github.io/blue-book/yearly.xml" rel="self" type="application/rss+xml"/>

    
    <managingEditor>Lyz</managingEditor>

    
    <pubDate>2024-11-27 15:36:58+00:00</pubDate>
    <ttl>525600</ttl>

    
    <generator>mkdocs-newsletter - v1.1.0</generator>

    
    
    <image><url>https://lyz-code.github.io/blue-book/img/logo.bmp</url><title>The Blue Book</title>
      <link>https://lyz-code.github.io/blue-book</link>
    </image>
    

    
    
    <item><title>2023</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt;  &lt;h2 id=&#34;activism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/anticolonialism/&#34;&gt;Activism&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add song for Gaza.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://yewtu.be/watch?v=dlfhoU66s4Y&#34;&gt;We Will Not Go Down (Song for Gaza Palestine) - Michael Heart&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;collaborating-tools&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/collaborating_tools/&#34;&gt;Collaborating tools&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce collaborating tools.&lt;/p&gt; &lt;p&gt;Collaborating document creation:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://pad.riseup.net&#34;&gt;https://pad.riseup.net&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://rustpad.io&#34;&gt;https://rustpad.io&lt;/a&gt; . &lt;a href=&#34;https://github.com/ekzhang/rustpad&#34;&gt;Can be self hosted&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Collaborating through terminals:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://sshx.io/&#34;&gt;sshx&lt;/a&gt; looks promising although I think it uses their servers to do the connection, which is troublesome.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;Life Management&lt;/h2&gt; &lt;h3 id=&#34;life-management_1&#34;&gt;Life Management&lt;/h3&gt; &lt;h4 id=&#34;life-planning&#34;&gt;&lt;a href=&#34;life_planning.md&#34;&gt;Life planning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;life_planning.md#month-plan&#34;&gt;Introduce the month planning process.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The objectives of the month plan are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Define the month objectives according to the trimester plan and the insights gathered in the past month review.&lt;/li&gt; &lt;li&gt;Make your backlog and todo list match the month objectives&lt;/li&gt; &lt;li&gt;Define the philosophical topics to address&lt;/li&gt; &lt;li&gt;Define the topics to learn&lt;/li&gt; &lt;li&gt;Define the are of habits to incorporate?&lt;/li&gt; &lt;li&gt;Define the checks you want to do at the end of the month.&lt;/li&gt; &lt;li&gt;Plan when is it going to be the next review.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It&#39;s interesting to do the plannings on meaningful days such as the first one of the month. Usually we don&#39;t have enough flexibility in our life to do it exactly that day, so schedule it the closest you can to that date. It&#39;s a good idea to do both the review and the planning on the same day.&lt;/p&gt; &lt;p&gt;We&#39;ll divide the planning process in these phases:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Prepare&lt;/li&gt; &lt;li&gt;Clarify your state&lt;/li&gt; &lt;li&gt;Decide the month objectives&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Prepare:&lt;/p&gt; &lt;p&gt;It&#39;s important that you prepare your environment for the planning. You need to be present and fully focused on the process itself. To do so you can:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Make sure you don&#39;t get interrupted:&lt;ul&gt; &lt;li&gt;Check your task manager tools to make sure that you don&#39;t have anything urgent to address in the next hour.&lt;/li&gt; &lt;li&gt;Disable all notifications&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Set your analysis environment:&lt;ul&gt; &lt;li&gt;Put on the music that helps you get &lt;em&gt;in the zone&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Get all the things you may need for the review:&lt;ul&gt; &lt;li&gt;The checklist that defines the process of your planning (this document in my case).&lt;/li&gt; &lt;li&gt;Somewhere to write down the insights.&lt;/li&gt; &lt;li&gt;Your task manager system&lt;/li&gt; &lt;li&gt;Your habit manager system&lt;/li&gt; &lt;li&gt;Your &lt;em&gt;Objective list&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Your &lt;em&gt;Thinking list&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Your &lt;em&gt;Reading list&lt;/em&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Remove from your environment everything else that may distract you&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Clarify your state:&lt;/p&gt; &lt;p&gt;To be able to make a good decision on your month&#39;s path you need to sort out which is your current state. To do so:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Clean your inbox: Refile each item until it&#39;s empty&lt;/li&gt; &lt;li&gt;Clean your todo: Review each todo element by deciding if they should still be in the todo. If they do and they belong to a month objective, add it. If they don&#39;t need to be in the todo, refile it.&lt;/li&gt; &lt;li&gt;Clean your someday: Review each relevant someday element (not the ones that are archive at greater levels than month) and decide if they should be refiled elsewhere and if they are part of a month objective that should be dealt with this month.&lt;/li&gt; &lt;li&gt;Adress each of the trimester objectives by creating month objectives that get you closer to the desired objective.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Decide the next steps:&lt;/p&gt; &lt;p&gt;For each of your month objectives:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Decide wheter it makes sense to address it this month. If not, archive it&lt;/li&gt; &lt;li&gt;Create a clear plan of action for this month on that objective&lt;/li&gt; &lt;li&gt;Tweak your &lt;em&gt;things to think about list&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Tweak your &lt;em&gt;reading list&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Tweak your &lt;em&gt;habit manager system&lt;/em&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;task-management&#34;&gt;Task Management&lt;/h3&gt; &lt;h4 id=&#34;org-mode&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/&#34;&gt;Org Mode&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Nvim Org Mode.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nvim-orgmode/orgmode#agenda&#34;&gt;&lt;code&gt;nvim-orgmode&lt;/code&gt;&lt;/a&gt; is a Orgmode clone written in Lua for Neovim. Org-mode is a flexible note-taking system that was originally created for Emacs. It has gained wide-spread acclaim and was eventually ported to Neovim.&lt;/p&gt; &lt;p&gt;The article includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#key-bindings&#34;&gt;Key bindings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#org-file&#34;&gt;Org File&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#headings&#34;&gt;Headings&lt;/a&gt;&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#toogle-line-to-headline&#34;&gt;Toogle line to headline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#change-heading-level&#34;&gt;Change heading level&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#moving-headings&#34;&gt;Moving headings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#folding-headings&#34;&gt;Folding headings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#navigate-through-headings&#34;&gt;Navigate through headings&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#todo-items&#34;&gt;TODO items&lt;/a&gt;&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#todo-state-customization&#34;&gt;TODO state customization&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#priority&#34;&gt;Priority&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#dates&#34;&gt;Dates&lt;/a&gt;&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#appointments&#34;&gt;Appointments&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#recurring-tasks&#34;&gt;Recurring tasks&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#scheduled&#34;&gt;Scheduled&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#deadline&#34;&gt;Deadline&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#date-management&#34;&gt;Date management&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#tags&#34;&gt;Tags&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#lists&#34;&gt;Lists&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#checkboxes&#34;&gt;Checkboxes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#archiving&#34;&gt;Archiving&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#refiling&#34;&gt;Refiling&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#agend&#34;&gt;Agenda&lt;/a&gt;&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#moving-around-the-agenda&#34;&gt;Move around the agenda&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#act-on-the-agenda-elements&#34;&gt;Act on the agenda elements&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#agenda-views&#34;&gt;Agenda views&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#capture-all-your-stuff&#34;&gt;Capture all your stuff.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The focus of this process is to capture &lt;em&gt;everything&lt;/em&gt; that has your attention, otherwise some part of you will still not totally trust that you&#39;re working with the whole picture. While you&#39;re doing it, create a list of all the sources of inputs in your world.&lt;/p&gt; &lt;p&gt;What you&#39;re going to do is methodically go through each piece of your life and search for anything that doesn’t permanently belong where it is, the way it is, and put it into your in-tray. You’ll be gathering things that are incomplete or things that have some decision about potential action tied to them. They all go into your “inbox”, so they’ll be available for later processing.&lt;/p&gt; &lt;p&gt;Be patient, this process may take between 1 and 6 hours, and at the end you&#39;ll have a huge pile of stuff in your inbox. You might be scared and get the thought of &#34;what am I doing with my life?&#34;, but don&#39;t worry you&#39;ll get everything in order soon :).&lt;/p&gt; &lt;p&gt;The steps described in the section so far are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#define-what-is-going-to-be-your-in-tray&#34;&gt;Define what is going to be your in-tray&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#physical-gathering&#34;&gt;Physical gathering&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#digital-general-reference&#34;&gt;Digital general reference.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It is very helpful to have a visual map sorted in ways that make sense, either by indexes or data groups organized effectively, usually in an alphabetic order.&lt;/p&gt; &lt;p&gt;The biggest issue for digitally oriented people is that the ease of capturing and storing has generated a write-only syndrome: all they’re doing is capturing information—not actually accessing and using it intelligently. Some consciousness needs to be applied to keep one’s potentially huge digital library functional, versus a black hole of data easily dumped in there with a couple of keystrokes.&lt;/p&gt; &lt;p&gt;You need to consistently check how much room to give yourself so that the content remains meaningfully and easily accessible, without creating a black hole of an inordinate amount of information amorphously organized.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#physical-general-reference&#34;&gt;Physical general reference.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;One idea is to have one system/place where you order the content alphabetically, not multiple ones. People have a tendency to want to use their files as a personal management system, and therefore they attempt to organize them in groupings by projects or areas of focus. This magnifies geometrically the number of places something isn’t when you forget where you filed it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#refiling&#34;&gt;Use telescope plugin for refiling.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Refiling lets you easily move around elements of your org file, such as headings or TODOs. You can refile with &lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt; with the next snippet:&lt;/p&gt;  &lt;p&gt;When you press the refile key binding you are supposed to press &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; to see the available options, once you select the correct file, if you will be shown a autocomplete with the possible items to refile it to. Luckily there is &lt;a href=&#34;https://github.com/joaomsa/telescope-orgmode.nvim&#34;&gt;a Telescope plugin&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Install it by adding to your plugin config:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;joaomsa/telescope-orgmode.nvim&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then install it with &lt;code&gt;:PackerInstall&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You can setup the extension by doing:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;telescope&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_extension&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;orgmode&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To replace the default refile prompt:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nvim_create_autocmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;FileType&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;org&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nvim_create_augroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;orgmode_telescope_nvim&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;callback&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keymap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;r&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;telescope&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orgmode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;refile_heading&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keymap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;g&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;telescope&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;orgmode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search_headings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If the auto command doesn&#39;t override the default &lt;code&gt;orgmode&lt;/code&gt; one, bind it to another keys and never use it.&lt;/p&gt; &lt;p&gt;The plugin also allows you to use &lt;code&gt;telescope&lt;/code&gt; to search through the headings of the different files with &lt;code&gt;search_headings&lt;/code&gt;, with the configuration above you&#39;d use &lt;code&gt;&amp;lt;leader&amp;gt;g&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#todo-list&#34;&gt;Define the Todo list.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This list contains all the next actions and projects you are going to actively work on. Projects are any desired result that can be accomplished within a year that requires more than one action step. This means that some rather small things you might not normally call projects are going to be on your Projects list, as well as some big ones. If one step won’t complete something, some kind of goalpost needs to be set up to remind you that there’s something still left to do. If you don’t have a placeholder to remind you about it, it will slip back into your head. The reason for the one-year time frame is that anything you are committed to finish within that scope needs to be reviewed weekly to feel comfortable about its status. Another way to think of this is as a list of open loops, no matter what the size. This is going to be one of the lists that you&#39;ll review more often, and it needs to be manageable, if the items start to grow you may want to track the elements you want to do in the semester, or trimester.&lt;/p&gt; &lt;p&gt;Projects do not initially need to be listed in any particular order, by size, or by priority. They just need to be on a master list so you can review them regularly enough to ensure that appropriate next actions have been defined for each of them. That being said, I like to order them a little bit so that I don&#39;t need to read the whole list to choose what to do.&lt;/p&gt; &lt;p&gt;There may be reasons to sort your projects into different subcategories, based upon different areas of your focus, but initially creating a single list of all of them will make it easier to customize your system appropriately as you get more comfortable with its usage. To sort them use tags instead of hierarchical structures, they are more flexible. For example you could use tags for:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Context: Where can you do the element: &lt;code&gt;home&lt;/code&gt;, &lt;code&gt;computer&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;, ...&lt;/li&gt; &lt;li&gt;Area: Broad categories where the element falls in: &lt;code&gt;activism&lt;/code&gt;, &lt;code&gt;caring&lt;/code&gt;, &lt;code&gt;self-caring&lt;/code&gt;, &lt;code&gt;home&lt;/code&gt;, &lt;code&gt;digital services&lt;/code&gt;, ...&lt;/li&gt; &lt;li&gt;Type: I like to separate the tasks that are meant to survive (&lt;code&gt;maintenance&lt;/code&gt;) from the ones that are meant to improve things (&lt;code&gt;improvement&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;Mood, energy level, time: It&#39;s useful to have a quick way to see the tasks you can work on when you don&#39;t have that much time (&lt;code&gt;small&lt;/code&gt;), you don&#39;t have that much mental energy (&lt;code&gt;brainless&lt;/code&gt;), when you&#39;re &lt;code&gt;sad&lt;/code&gt;, ...&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For many of your projects, you will accumulate relevant information that you will want to organize by theme or topic or project name. Your Projects list will be merely an index. All of the details, plans, and supporting information that you may need as you work on your various projects should be contained in your References system.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#calendar&#34;&gt;Define the calendar.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The calendar holds reminders of actions you need to take fall into two categories: those about things that have to happen on a specific day or time, and those about things that just need to get done as soon as possible. Your calendar handles the first type of reminder.&lt;/p&gt; &lt;p&gt;These things go on your calendar:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Time-Specific actions or appointments.&lt;/li&gt; &lt;li&gt;Day-Specific actions: These are things that you need to do sometime on a certain day, but not necessarily at a specific time.&lt;/li&gt; &lt;li&gt;Day-Specific information: Information that may be useful on a certain date. This might include directions for appointments, activities that other people will be involved in then, or events of interest. It’s helpful to put short-term tickler information here, too, such as a reminder to call someone after he or she returns from vacation. This is also where you would want to park important reminders about when something might be due, or when something needs to be started, given a determined lead time.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Daily to-do lists don&#39;t belong to the calendar because:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Constant new input and shifting tactical priorities reconfigure daily work so consistently that it’s virtually impossible to nail down to-do items ahead of time. Having a working game plan as a reference point is always useful, but it must be able to be renegotiated at any moment. Trying to keep a list on the calendar, which must then be reentered on another day if items don’t get done, is demoralizing and a waste of time. The Next Actions lists will hold all of those action reminders, even the most time-sensitive ones. And they won’t have to be rewritten daily.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If there’s something on a daily to-do list that doesn’t absolutely have to get done that day, it will dilute the emphasis on the things that truly do. The calendar should be sacred territory. If you write something there, it must get done that day or not at all.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;That said, there’s absolutely nothing wrong with creating a quick, informal, short list of “if I have time, I’d really like to . . .” kinds of things, picked from your Next Actions inventory. It just should not be confused with your “have-tos,” and it should be treated lightly enough to discard or change quickly as the inevitable surprises of the day unfold.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#design-your-system&#34;&gt;Give an overview of how I&#39;m using gtd.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Before you start moving stuff around it&#39;s a good idea to get the first design of your whole system, in my case I&#39;m going to heavily rely on org-mode to track most of the stuff with a repository with the next structure:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
├── calendar
│   ├── personal.org
│   │   ├── One time events
│   │   ├── Recurring events
│   │   ├── Birthdays
│   │   └── Deathdays
│   ├── day.org
│   ├── tickler.org
│   ├── work_1.org
│   ├── work_2.org
│   ├── partner.org
│   ├── family.org
├── inbox
│   ├── computer.org
│   ├── mobile.org
│   └── tablet.org
├── reference
│   ├── blue
│   ├── reference.org
│   └── red
└── todo
    ├── personal.org
    ├── work_1.org
    ├── work_2.org
    └── someday.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The subtrees behind the &lt;code&gt;.org&lt;/code&gt; files are the heading trees.&lt;/li&gt; &lt;li&gt;All &lt;code&gt;org&lt;/code&gt; files go with their respective &lt;code&gt;org_archive&lt;/code&gt; ones, they&#39;re not shown in the above diagram to keep it simple.&lt;/li&gt; &lt;li&gt;&lt;code&gt;calendar/personal.org&lt;/code&gt; is my &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#personal-calendar&#34;&gt;personal calendar&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;calendar/day.org&lt;/code&gt; is my &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#day-planner&#34;&gt;day planner&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#personal-calendar&#34;&gt;Define how to use the Personal calendar.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;calendar/personal.org&lt;/code&gt; file holds:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#appointments&#34;&gt;Appointments&lt;/a&gt;: Meant to be used for elements of the org file that have a defined date to occur. You whether do it that date or not do it at all. Avoid using dates to organize your tasks and if you don&#39;t do it that day, reschedule it to another date, it&#39;s a waste of time, use next actions in your &lt;code&gt;todo&lt;/code&gt; instead. If you need to act on it use a &lt;code&gt;TODO&lt;/code&gt; element, otherwise a headline is enough An example would be.&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* TODO Meet with Marie
&amp;lt;2023-02-24 Fri&amp;gt;

* Internet&#39;s birthday
&amp;lt;2023-03-13 Mon&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#recurring-tasks&#34;&gt;Recurring events&lt;/a&gt;: Events that not only happen on the given date, but again and again after a certain interval of N hours (h), days (d), weeks (w), months (m), or years (y). The following shows up in the agenda every Wednesday:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* TODO Go to pilates
  &amp;lt;2007-05-16 Wed 12:30 +1w&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;#tickler-management&#34;&gt;Tickler events&lt;/a&gt;: Check the &lt;a href=&#34;#tickler-management&#34;&gt;Tickler management&lt;/a&gt; section for more details.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each section has it&#39;s own tag: &lt;code&gt;:recurring:&lt;/code&gt;, &lt;code&gt;:day:&lt;/code&gt;, &lt;code&gt;:birthday:&lt;/code&gt;, &lt;code&gt;:deathday:&lt;/code&gt;, and the whole file has the &lt;code&gt;:event:&lt;/code&gt; tag for easy filtering.&lt;/p&gt; &lt;p&gt;In rare cases you may want to use the &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#deadline&#34;&gt;&lt;code&gt;DEADLINE&lt;/code&gt;&lt;/a&gt; property if you want to be warned in the agenda some days before the date arrives or the &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#scheduled&#34;&gt;&lt;code&gt;SCHEDULED&lt;/code&gt;&lt;/a&gt; one in case you want to see in the agenda when you start working on the task. Again, don&#39;t waste time postponing these dates, if you do, you&#39;re using the system wrong.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#day-planner&#34;&gt;Define how to use the Day planner.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Some of my day events are semi-regular, meaning that the recurrence options are not powerful enough. For example, I usually go to pilates on Tuesdays, but some weeks I go at 18:00 and others at 19:00. In the past I used a script that interacts with &lt;a href=&#34;https://lyz-code.github.io/blue-book/khal/&#34;&gt;&lt;code&gt;ikhal&lt;/code&gt;&lt;/a&gt; to create the elements of the day based on some questionary. The idea is to migrate the tool to create appointments in the day under the &lt;code&gt;diary.org&lt;/code&gt; file using a &lt;code&gt;datetree&lt;/code&gt; structure:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* 2010
** 2010-12 December
*** 2010-12-20 Tuesday
**** TODO Go to pilates
    &amp;lt;2010-12-20 Tue 19:00-20:00&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;I also use this file to add any diary annotations for my &lt;a href=&#34;https://lyz-code.github.io/blue-book/life_logging/&#34;&gt;life log&lt;/a&gt;. Once &lt;a href=&#34;https://github.com/nvim-orgmode/orgmode/issues/516&#34;&gt;this issue is solved&lt;/a&gt; it will be really easy to add diary thoughts through the &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#capture&#34;&gt;capture feature&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#todo-files&#34;&gt;Define how to use the todo files.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;todo&lt;/code&gt; files are where you track the &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#todo-list&#34;&gt;todo list&lt;/a&gt;, which holds your projects and their next steps to work on. The &lt;code&gt;todo/personal.org&lt;/code&gt;, &lt;code&gt;todo/work_1.org&lt;/code&gt; and &lt;code&gt;todo/work_2.org&lt;/code&gt; files of &lt;a href=&#34;#design-your-system&#34;&gt;the above schema&lt;/a&gt; will be divided into these level 1 headings:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;* Necessary&lt;/code&gt;: These projects need to be dealt with immediately and finished as soon as possible&lt;/li&gt; &lt;li&gt;&lt;code&gt;* Desirable&lt;/code&gt;: Here is where most of your elements will be, these are the ones that you think it&#39;s important to work on but there is no hard pressure.&lt;/li&gt; &lt;li&gt;&lt;code&gt;* Optional&lt;/code&gt;: These are the projects that it would be nice to work on, but if you don&#39;t it&#39;s fine.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Projects are any the second level headings with TODO keywords. To see the list of your projects just fold all the items in the &lt;code&gt;todo.org&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;Inside each section the elements are more less ordered by what I want to work on first. But all projects are actionable, so if I&#39;m not in the mood to do the first ones, I tackle the rest. As such, I try not to spend too much time ordering them.&lt;/p&gt; &lt;p&gt;I find useful to split the tasks between my life silos, so that I don&#39;t even have a chance to think of anything of &lt;code&gt;work_1&lt;/code&gt; when I&#39;m doing my &lt;code&gt;personal&lt;/code&gt; stuff or &lt;code&gt;work_2&lt;/code&gt; stuff.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#project-structure&#34;&gt;Define how to work with projects.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Given the broad definition of what we consider a project and how they are usually cooked, the system that represents it must be equally flexible, quick to interact with and easy to evolve.&lt;/p&gt; &lt;p&gt;Every project starts with the title:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* TODO Improve task management system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Optionally you can add a description&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* TODO Improve task management system
  Using Openprojects is uncomfortable, I need to find a better system.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You may have noticed that the description doesn&#39;t follow the rules we defined for next actions, that&#39;s fine as you don&#39;t act on projects, but on their underlying actions. Nevertheless I like to start them with a verb. It may even make sense not to use TODO items but simple headings to define your projects. On one side you don&#39;t act on projects so it would make sense to use headings, on the other, it&#39;s also interesting to know the project state, which can be easily tracked with the TODO keywords. If you could tell apart headings from TODO items in the &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#agenda&#34;&gt;agenda&lt;/a&gt; views it would make sense to use them. Right now &lt;code&gt;nvim-orgmode&lt;/code&gt; let&#39;s you select in the agenda views only TODO items or TODO and headings, but you can&#39;t select only headings, so at the moment I don&#39;t see any good reason not to use TODO items for the projects.&lt;/p&gt; &lt;p&gt;To define the next actions of a project you can use checklists&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* TODO Improve task management system
  - [-] Read David Allen&#39;s GTD book
    - [x] Read chapters 6 and 7
    - [ ] Read chapters 8 and 9
  - [ ] Sum up the book in the blue book
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;As your checklists grow they may start to be uncomfortable, for example if it has:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;More than two levels of indentation: It may be hard to follow the logic of the task structure.&lt;/li&gt; &lt;li&gt;A lot of elements: You can&#39;t archive parts of checklists, so as you complete elements, they will still be shown diverting your attention from the things you can actually act upon or making you loose time scrolling to find where they are.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In these cases it makes sense to promote the first level of headings to subprojects:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* TODO Improve task management system
  * DOING Read David Allen&#39;s GTD book
    - [x] Read chapters 6 and 7
    - [ ] Read chapters 8 and 9
  * TODO up the book in the blue book
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;That way when &lt;code&gt;Read David Allen&#39;s GTD book&lt;/code&gt; is done, you can archive it and forget about it.&lt;/p&gt; &lt;p&gt;If the project starts having many subprojects, it may help to have a section &#34;Outcomes&#34; to define what do you want to achieve with the project. It can be accompanied with a &#34;Next Steps&#34; section to add any subproject or action that doesn&#39;t match the defined outcomes, and once you finish the project, you can refile them into new projects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#the-next-state&#34;&gt;The NEXT state.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&#39;s useful to have a &lt;code&gt;NEXT&lt;/code&gt; state to track the first next action you need to deal with for each project. That way when you open the file, you can go to the top of it and search for &lt;code&gt;NEXT&lt;/code&gt; and it will lead you directly to where you need to work on.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#tag-management&#34;&gt;Define how to manage tags.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;As explained in the &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#todo-list&#34;&gt;todo list&lt;/a&gt; section, you can use tags to filter your tasks. I&#39;m using the next ones:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Area: Broad categories where the element falls in: &lt;code&gt;activism&lt;/code&gt;, &lt;code&gt;caring&lt;/code&gt;, &lt;code&gt;self-caring&lt;/code&gt;, &lt;code&gt;home&lt;/code&gt;, &lt;code&gt;digital services&lt;/code&gt;, ...&lt;/li&gt; &lt;li&gt;Type: I like to separate the tasks that are meant to survive (&lt;code&gt;maintenance&lt;/code&gt;) from the ones that are meant to improve things (&lt;code&gt;improvement&lt;/code&gt;). I use these only in the big projects.&lt;/li&gt; &lt;li&gt;&lt;code&gt;:long_break:&lt;/code&gt;: I&#39;m using this tag to track the small projects that can be done in the &lt;a href=&#34;life_planning.md&#34;&gt;long pomodoro breaks&lt;/a&gt;. Depending on the kind of long break that I need I then filter for the next tags:&lt;/li&gt; &lt;li&gt;&lt;code&gt;brainless&lt;/code&gt;: If I want to keep on thinking on what I was doing, an example could be emptying the dishwasher, watering the plants, ...&lt;/li&gt; &lt;li&gt;&lt;code&gt;call&lt;/code&gt;: If I want to completely change context and want some social interaction. For example call mom.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#waiting-tasks&#34;&gt;Define how to manage waiting tasks.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Waiting actions are elements that are blocked for any reason. I use the &lt;code&gt;WAITING&lt;/code&gt; TODO keyword to track this state. Under each element you should add that reason and optionally the process you want to follow to unblock it.&lt;/p&gt; &lt;p&gt;If you need to actively track the evolution of the WAITING status, leave it on the top of your &lt;code&gt;todo&lt;/code&gt;. Otherwise set the date you want to check its status and move it to the &lt;code&gt;ticker.org&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#tickler-management&#34;&gt;Define how to use the tickler.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The tickler is a system where you postpone actions to a specific date, but not with a calendar mindset where the action &lt;strong&gt;needs&lt;/strong&gt; to be done at that date. With the tickler you schedule the action to enter your inbox that day to decide what are you going to do with it.&lt;/p&gt; &lt;p&gt;To implement this in orgmode you can add the &lt;code&gt;:tickler:&lt;/code&gt; tag to any element that is tracked in the agenda files and once a day you can look at the day&#39;s agenda and decide what to do with the action. It&#39;s important though that whatever you do with it, you have to remove it from the agenda view in order to only keep the elements that you need to do in the day. You can follow this workflow by:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Opening the agenda view &lt;code&gt;gaa&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Go to the view of the day &lt;code&gt;vd&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Go to today &lt;code&gt;.&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Search by tickler &lt;code&gt;/tickler&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It can also help to review in the weeklies all the ticklers of the week to avoid surprises.&lt;/p&gt; &lt;p&gt;If you want to make the project go away from your &lt;code&gt;todo&lt;/code&gt; or &lt;code&gt;someday&lt;/code&gt; until the tickler date, move it to the &lt;code&gt;tickler.org&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#capture-all-your-stuff&#34;&gt;Keep on defining steps to capture all your stuff.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;As you engage in the capturing step, you may run into one or more of the following problems:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;An item is too big to go in the in-tray: create a post it that represents it or add it as an entry in your digital inbox. If you can, add the date too&lt;/li&gt; &lt;li&gt;The pile is too big to fit the in-tray: Create visually distinct stacks around the in-tray, even on the floor.&lt;/li&gt; &lt;li&gt;Doubts whether to trash something: When in doubt keep it, you&#39;ll decide about it later when you process the in-tray. What you need to avoid is to get caught up in deciding what to do with the element. That&#39;s going to be the next step in the process, let&#39;s go one at a time.&lt;/li&gt; &lt;li&gt;Getting caught up in cleaning and organizing: If it doesn&#39;t take that long it&#39;s fine but remember the purpose of this process and the fact that we want to finish it as soon as possible. If you discover things you want to change, add them to the in-tray.&lt;/li&gt; &lt;li&gt;If you encounter stuff that is already on lists and organizers, treat them as everything else in the &#34;in&#34;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Now that the process it&#39;s clear let&#39;s start.&lt;/p&gt; &lt;p&gt;Start with the space where you actually do stuff, scan the place centimeter by centimeter with the mindset defined above, check your desk, drawers, floors, walls, shelves, equipment, furniture, fixtures...Then repeat the process with each room of your home.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#mental-gathering&#34;&gt;Explain how to capture all your mental stuff.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once you already have a nice pile of stuff, think of what has your attention that isn’t represented by something already in your in-tray and record each thought, each idea, each project or thing that occurs you and add it to the inbox.&lt;/p&gt; &lt;p&gt;To assist in clearing your head, you may want to review the &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#mental-gathering&#34;&gt;following the next trigger list&lt;/a&gt;, item by item, to see if you’ve forgotten anything.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Define priorities from A to D.&lt;/p&gt; &lt;p&gt;I feel more comfortable with these priorities:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;A&lt;/code&gt;: Critical&lt;/li&gt; &lt;li&gt;&lt;code&gt;B&lt;/code&gt;: High&lt;/li&gt; &lt;li&gt;&lt;code&gt;C&lt;/code&gt;: Normal&lt;/li&gt; &lt;li&gt;&lt;code&gt;D&lt;/code&gt;: Low&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This gives you room to usually work on priorities &lt;code&gt;B-D&lt;/code&gt; and if something shows up that is really really important, you can use &lt;code&gt;A&lt;/code&gt;. You can set this setting with the next snippet:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;orgmode&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;org_priority_highest&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;org_priority_default&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;org_priority_lowest&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;D&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Warn against using DEADLINE.&lt;/p&gt; &lt;p&gt;Using too many tasks with a &lt;code&gt;DEADLINE&lt;/code&gt; will clutter your agenda. Use it only for the actions that you need to have a reminder, instead try to using &lt;a href=&#34;#appointments&#34;&gt;appointment&lt;/a&gt; dates instead.&lt;/p&gt; &lt;p&gt;If you need a different warning period for a special task, you can specify it. For example setting a warning period of 5 days &lt;code&gt;DEADLINE: &amp;lt;2004-02-29 Sun -5d&amp;gt;&lt;/code&gt;. To configure the default number of days add:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;orgmode&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;org_deadline_warning_days&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#tags&#34;&gt;Improve how to use tags.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When you press the tag key binding you can type:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;tag1&lt;/code&gt;: It will add &lt;code&gt;:tag1:&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;tag1:tag2&lt;/code&gt;: It will add &lt;code&gt;:tag1:tag2:&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Press &lt;code&gt;ESC&lt;/code&gt;: It will remove all tags from the item.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Tags make use of the hierarchical structure of outline trees. If a heading has a certain tag, all subheadings inherit the tag as well. For example, in the list&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* Meeting with the French group      :work:
** Summary by Frank                  :boss:notes:
*** TODO Prepare slides for him      :action:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The final heading has the tags &lt;code&gt;work&lt;/code&gt;, &lt;code&gt;boss&lt;/code&gt;, &lt;code&gt;notes&lt;/code&gt;, and &lt;code&gt;action&lt;/code&gt; even though the final heading is not explicitly marked with those tags. You can also set tags that all entries in a file should inherit just as if these tags were defined in a hypothetical level zero that surrounds the entire file. Using a line like the next one:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; #+FILETAGS: :Peter:Boss:Secret:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#links&#34;&gt;How to use links.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;One final aspect of the org file syntax are links. Links are of the form &lt;code&gt;[[link][description]]&lt;/code&gt;, where link can be an:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#internal-document-links&#34;&gt;Internal reference&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#external-links&#34;&gt;External reference&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A link that does not look like a URL refers to the current document. You can follow it with &lt;code&gt;gx&lt;/code&gt; when point is on the link (Default &lt;code&gt;&amp;lt;leader&amp;gt;oo&lt;/code&gt;) if you use the next configuration.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;org&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;org_open_at_point&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;gx&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#internal-document-links&#34;&gt;Internal document links.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Org provides several refinements to internal navigation within a document. Most notably:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;[[*Some section]]&lt;/code&gt;: points to a headline with the name &lt;code&gt;Some section&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;[[#my-custom-id]]&lt;/code&gt;: targets the entry with the &lt;code&gt;CUSTOM_ID&lt;/code&gt; property set to &lt;code&gt;my-custom-id&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When the link does not belong to any of the cases above, Org looks for a dedicated target: the same string in double angular brackets, like &lt;code&gt;&amp;lt;&amp;lt;My Target&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If no dedicated target exists, the link tries to match the exact name of an element within the buffer. Naming is done, unsurprisingly, with the &lt;code&gt;NAME&lt;/code&gt; keyword, which has to be put in the line before the element it refers to, as in the following example&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; #+NAME: My Target
| a  | table      |
|----+------------|
| of | four cells |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Ultimately, if none of the above succeeds, Org searches for a headline that is exactly the link text but may also include a &lt;code&gt;TODO&lt;/code&gt; keyword and tags, or initiates a plain text search.&lt;/p&gt; &lt;p&gt;Note that you must make sure custom IDs, dedicated targets, and names are unique throughout the document. Org provides a linter to assist you in the process, if needed, but I have not searched yet one for nvim.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#properties&#34;&gt;How to use properties.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Properties are key-value pairs associated with an entry. They live in a special drawer with the name &lt;code&gt;PROPERTIES&lt;/code&gt;. Each property is specified on a single line, with the key (surrounded by colons) first, and the value after it:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* CD collection
** Classic
*** Goldberg Variations
    :PROPERTIES:
    :Title:     Goldberg Variations
    :Composer:  J.S. Bach
    :Publisher: Deutsche Grammophon
    :NDisks:    1
    :END:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You may define the allowed values for a particular property &lt;code&gt;Xyz&lt;/code&gt; by setting a property &lt;code&gt;Xyz_ALL&lt;/code&gt;. This special property is inherited, so if you set it in a level 1 entry, it applies to the entire tree. When allowed values are defined, setting the corresponding property becomes easier and is less prone to typing errors. For the example with the CD collection, we can pre-define publishers and the number of disks in a box like this:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;* CD collection
  :PROPERTIES:
  :NDisks_ALL:  1 2 3 4
  :Publisher_ALL: &#34;Deutsche Grammophon&#34; Philips EMI
  :END:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to set properties that can be inherited by any entry in a file, use a line like:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; #+PROPERTY: NDisks_ALL 1 2 3 4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This can be interesting for example if you want to track when was a header created:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;*** Title of header
   :PROPERTIES:
   :CREATED: &amp;lt;2023-03-03 Fri 12:11&amp;gt;
   :END:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#agenda-searches&#34;&gt;How to do Agenda searches.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When using the search agenda view you can:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Search by TODO states with &lt;code&gt;/WAITING&lt;/code&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Search by tags &lt;code&gt;+home&lt;/code&gt;. The syntax for such searches follows a simple boolean logic:&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;|&lt;/code&gt;: or&lt;/p&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;: and&lt;/li&gt; &lt;li&gt;&lt;code&gt;+&lt;/code&gt;: include matches&lt;/li&gt; &lt;li&gt;&lt;code&gt;-&lt;/code&gt;: exclude matches&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Here are a few examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;+computer&amp;amp;+urgent&lt;/code&gt;: Returns all items tagged both &lt;code&gt;computer&lt;/code&gt; and &lt;code&gt;urgent&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;+computer|+urgent&lt;/code&gt;: Returns all items tagged either &lt;code&gt;computer&lt;/code&gt; or &lt;code&gt;urgent&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;+computer&amp;amp;-urgent&lt;/code&gt;: Returns all items tagged &lt;code&gt;computer&lt;/code&gt; and not &lt;code&gt;urgent&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;As you may have noticed, the syntax above can be a little verbose, so org-mode offers convenient ways of shortening it. First, &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt; imply &lt;code&gt;and&lt;/code&gt; if no boolean operator is stated, so example three above could be rewritten simply as:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;+computer-urgent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Second, inclusion of matches is implied if no &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; is present, so example three could be further shortened to:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;computer-urgent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Example number two, meanwhile, could be shortened to:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;computer|urgent
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;There is no way (as yet) to express search grouping with parentheses. The &lt;code&gt;and&lt;/code&gt; operators (&lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, and &lt;code&gt;-&lt;/code&gt;) always bind terms together more strongly than &lt;code&gt;or&lt;/code&gt; (&lt;code&gt;|&lt;/code&gt;). For instance, the following search&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;computer|work+email
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Results in all headlines tagged either with &lt;code&gt;computer&lt;/code&gt; or both &lt;code&gt;work&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt;. An expression such as &lt;code&gt;(computer|work)&amp;amp;email&lt;/code&gt; is not supported at the moment. You can construct a regular expression though:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;+{computer\|work}+email
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://orgmode.org/worg/org-tutorials/advanced-searching.html#property-searches&#34;&gt;Search by properties&lt;/a&gt;: You can search by properties with the &lt;code&gt;PROPERTY=&#34;value&#34;&lt;/code&gt; syntax. Properties with numeric values can be queried with inequalities &lt;code&gt;PAGES&amp;gt;100&lt;/code&gt;. To search by partial searches use a regular expression, for example if the entry had &lt;code&gt;:BIB_TITLE: Mysteries of the Amazon&lt;/code&gt; you could use &lt;code&gt;BIB_TITLE={Amazon}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#capture&#34;&gt;How to use Capture in orgmode.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Capture lets you quickly store notes with little interruption of your work flow. It works the next way:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Open the interface with &lt;code&gt;;c&lt;/code&gt; (Default &lt;code&gt;&amp;lt;leader&amp;gt;oc&lt;/code&gt;) that asks you what kind of element you want to capture.&lt;/li&gt; &lt;li&gt;Select the template you want to use. By default you only have the &lt;code&gt;Task&lt;/code&gt; template, that introduces a task into the same file where you&#39;re at, select it by pressing &lt;code&gt;t&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Fill up the template.&lt;/li&gt; &lt;li&gt;Choose what to do with the captured content:&lt;/li&gt; &lt;li&gt;Save it to the configured file by pressing &lt;code&gt;;w&lt;/code&gt; (Default &lt;code&gt;&amp;lt;control&amp;gt;c&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;Refile it to a file by pressing &lt;code&gt;;r&lt;/code&gt; (Default &lt;code&gt;&amp;lt;leader&amp;gt;or&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;Abort the capture &lt;code&gt;;q&lt;/code&gt; (Default &lt;code&gt;&amp;lt;leader&amp;gt;ok&lt;/code&gt;).&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;mappings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;org_capture&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;;c&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;capture&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;org_capture_finalize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;;w&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;org_capture_refile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;;r&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;org_capture_kill&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;;q&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#configure-the-capture-templates&#34;&gt;Configure the capture templates.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Capture lets you define different templates for the different inputs. Each template has the next elements:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Keybinding: Keys to press to activate the template&lt;/li&gt; &lt;li&gt;Description: What to show in the capture menu to describe the template&lt;/li&gt; &lt;li&gt;Template: The actual template of the capture, look below to see how to create them.&lt;/li&gt; &lt;li&gt;Target: The place where the captured element will be inserted to. For example &lt;code&gt;~/org/todo.org&lt;/code&gt;. If you don&#39;t define it it will go to the file configured in &lt;code&gt;org_default_notes_file&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Headline: An &lt;a href=&#34;https://github.com/nvim-orgmode/orgmode/issues/196&#34;&gt;optional headline&lt;/a&gt; of the Target file to insert the element.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;org_capture_templates&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;Task&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;* TODO %?&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;  %u&#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;For the template you can use the next variables:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;%?:&lt;/code&gt;Default cursor position when template is opened&lt;/li&gt; &lt;li&gt;&lt;code&gt;%t&lt;/code&gt;: Prints current date (Example: &lt;code&gt;&amp;lt;2021-06-10 Thu&amp;gt;&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;&lt;code&gt;%T&lt;/code&gt;: Prints current date and time (Example: &lt;code&gt;&amp;lt;2021-06-10 Thu 12:30&amp;gt;&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;&lt;code&gt;%u&lt;/code&gt;: Prints current date in inactive format (Example: &lt;code&gt;[2021-06-10 Thu]&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;&lt;code&gt;%U&lt;/code&gt;: Prints current date and time in inactive format (Example: &lt;code&gt;[2021-06-10 Thu 12:30]&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;&lt;code&gt;%&amp;lt;FORMAT&amp;gt;&lt;/code&gt;: Insert current date/time formatted according to lua date format (Example: &lt;code&gt;%&amp;lt;%Y-%m-%d %A&amp;gt;&lt;/code&gt; produces &lt;code&gt;2021-07-02 Friday&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;&lt;code&gt;%x&lt;/code&gt;: Insert content of the clipboard via the &#34;+&#34; register (see &lt;code&gt;:help clipboard&lt;/code&gt;)&lt;/li&gt; &lt;li&gt;&lt;code&gt;%^{PROMPT|DEFAULT|COMPLETION...}&lt;/code&gt;: Prompt for input, if completion is provided an &lt;code&gt;:h inputlist&lt;/code&gt; will be used&lt;/li&gt; &lt;li&gt;&lt;code&gt;%(EXP)&lt;/code&gt;: Runs the given lua code and inserts the result. NOTE: this will internally pass the content to the lua &lt;code&gt;load()&lt;/code&gt; function. So the body inside &lt;code&gt;%()&lt;/code&gt; should be the body of a function that returns a string.&lt;/li&gt; &lt;li&gt;&lt;code&gt;%f&lt;/code&gt;: Prints the file of the buffer capture was called from.&lt;/li&gt; &lt;li&gt;&lt;code&gt;%F&lt;/code&gt;: Like &lt;code&gt;%f&lt;/code&gt; but inserts the full path.&lt;/li&gt; &lt;li&gt;&lt;code&gt;%n&lt;/code&gt;: Inserts the current &lt;code&gt;$USER&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;%a&lt;/code&gt;: File and line number from where capture was initiated (Example: &lt;code&gt;[[file:/home/user/projects/myfile.txt +2]]&lt;/code&gt;)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;Todo&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;* TODO %?&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; %u&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;~/org/todo.org&#39;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
 &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;Journal&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;*** %&amp;lt;%Y-%m-%d %A&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;**** %U&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;%?&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;~/sync/org/journal.org&#39;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;-- Nested key example:&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&#39;Event&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;er&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;recurring&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;** %?&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; %T&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;~/org/calendar.org&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;headline&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;recurring&#39;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;eo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;one-time&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;** %?&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; %T&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;~/org/calendar.org&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;headline&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;one-time&#39;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;-- Example using a lua function&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Repo URL&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;* [[%x][%(return string.match(&#39;%x&#39;, &#39;([^/]+)$&#39;))]]%?&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;~/org/repos.org&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#synchronize-with-external-calendars&#34;&gt;Synchronize with external calendars.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You may want to synchronize your calendar entries with external ones shared with other people, such as nextcloud calendar or google.&lt;/p&gt; &lt;p&gt;The orgmode docs have a tutorial to &lt;a href=&#34;https://orgmode.org/worg/org-tutorials/org-google-sync.html&#34;&gt;sync with google&lt;/a&gt; and suggests some orgmode packages that do that, sadly it won&#39;t work with &lt;code&gt;nvim-orgmode&lt;/code&gt;. We&#39;ll need to go the &#34;ugly way&#34; by:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Downloading external calendar events to ics with &lt;a href=&#34;https://lyz-code.github.io/blue-book/vdirsyncer/&#34;&gt;&lt;code&gt;vdirsyncer&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;#importing-the-ics-to-orgmode&#34;&gt;Importing the ics to orgmode&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Editing the events in orgmode&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;#exporting-from-orgmode-to-ics&#34;&gt;Exporting from orgmode to ics&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Uploading then changes to the external calendar events with &lt;a href=&#34;https://lyz-code.github.io/blue-book/vdirsyncer/&#34;&gt;&lt;code&gt;vdirsyncer&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#comparison-with-markdown&#34;&gt;Comparison with Markdown.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;What I like of Org mode over Markdown:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The whole interface to interact with the elements of the document through key bindings:&lt;/li&gt; &lt;li&gt;Move elements around.&lt;/li&gt; &lt;li&gt;Create elements&lt;/li&gt; &lt;li&gt;The TODO system is awesome&lt;/li&gt; &lt;li&gt;The Agenda system&lt;/li&gt; &lt;li&gt;How it handles checkboxes &amp;lt;3&lt;/li&gt; &lt;li&gt;Easy navigation between references in the document&lt;/li&gt; &lt;li&gt;Archiving feature&lt;/li&gt; &lt;li&gt;Refiling feature&lt;/li&gt; &lt;li&gt;&lt;code&gt;#&lt;/code&gt; is used for comments.&lt;/li&gt; &lt;li&gt;Create internal document links is easier, you can just copy and paste the heading similar to &lt;code&gt;[[*This is the heading]]&lt;/code&gt; on markdown you need to edit it to &lt;code&gt;[](#this-is-the-heading)&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;What I like of markdown over Org mode:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The syntax of the headings &lt;code&gt;## Title&lt;/code&gt; better than &lt;code&gt;** Title&lt;/code&gt;. Although it makes sense to have &lt;code&gt;#&lt;/code&gt; for comments.&lt;/li&gt; &lt;li&gt;The syntax of the links: &lt;code&gt;[reference](link)&lt;/code&gt; is prettier to read and write than &lt;code&gt;[[link][reference]]&lt;/code&gt;, although this can be improved if only the reference is shown by your editor (nvim-orgmode doesn&#39;t do his yet)&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Note the importance of isolated containers.&lt;/p&gt; &lt;p&gt;It&#39;s critical that all of these containers be kept distinct from one another. They each represent a discrete type of agreement we make with ourselves, to be reminded of at a specific time and in a specific way, and if they lose their edges and begin to blend, much of the value of organizing will be lost. That&#39;s why capturing and clarifying what your relationship to them is primary to getting organized.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#inbox-management&#34;&gt;Inbox management.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Inbox is the container where you &lt;a href=&#34;#capture&#34;&gt;capture your stuff&lt;/a&gt;. I&#39;ve found myself capturing stuff in each of my devices: computer, mobile phone and tablet. Each of them has their own org file under the &lt;code&gt;inbox&lt;/code&gt; directory. Each of these files has the &lt;code&gt;#+FILETAGS: :inbox:&lt;/code&gt; heading so that all elements share the tag.&lt;/p&gt; &lt;p&gt;Part of the daily planning is to check the computer and mobile inboxes to see if there is anything that needs to be processed on the day. I don&#39;t check the tablet inbox as there&#39;s usually no urgent stuff there. The rest of the elements will be processed on the weekly review leaving all the inbox files empty.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#computer-inbox-management&#34;&gt;Computer inbox management.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/&#34;&gt;&lt;code&gt;nvim-orgmode&lt;/code&gt;&lt;/a&gt; has an awesome feature called &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#capture&#34;&gt;capture&lt;/a&gt; which lets you capture thoughts with a keystroke. This is awesome as no matter what are you doing inside &lt;code&gt;neovim&lt;/code&gt; you can quickly record your thought, action or idea and keep on doing whatever you were doing. It&#39;s a very efficient way to record your &lt;em&gt;stuff&lt;/em&gt; at the same time as you keep your focus.&lt;/p&gt; &lt;p&gt;You can use the next capture template:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class=&#34;n&#34;&gt;org_capture_templates&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;description&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Inbox&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;template&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;* TODO %?&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; %U&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;~/org/inbox/computer.org&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#mobile-and-tablet-inbox-management&#34;&gt;Mobile and tablet inbox management.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To capture the content on the go you can use the &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgzly/&#34;&gt;orgzly&lt;/a&gt; and then sync them with your computer through &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/syncthing/&#34;&gt;syncthing&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#calendar-management&#34;&gt;Calendar management.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You need to trust your calendar as sacred territory, reflecting the exact hard edges of your day&#39;s commitments, which should be noticeable at a glance while you&#39;re on the run.&lt;/p&gt; &lt;p&gt;So for each element you encounter in the calendar ask yourself, does this element &lt;strong&gt;need&lt;/strong&gt; to be done on this hard date? If the answer is no, then the calendar is not the correct place for the element to be.&lt;/p&gt; &lt;p&gt;Using dates to order your tasks it&#39;s a waste of time, because there will always be a thousand of reasons why you can&#39;t do all the things you allocate to that day. As these not done issues start piling up, you&#39;ll start to get stressed with a lot of things that you were not able to do on the dates you deceived yourself you were supposed to do at and then you need to spend time defining a new date. Use next actions in your &lt;code&gt;todo&lt;/code&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#priority-management&#34;&gt;Priority management.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You shouldn’t bother to create some external structuring of the priorities on your lists that you’ll then have to rearrange or rewrite as things change. Attempting to impose such scaffolding has been a big source of frustration in many people’s organizing. You’ll be prioritizing more intuitively as you see the whole list against quite a number of shifting variables. The list is just a way for you to keep track of the total inventory of active things to which you have made a commitment, and to have that inventory available for review.&lt;/p&gt; &lt;p&gt;Therefore I&#39;m going to try not to use orgmode&#39;s priorities for the tasks.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#soft-recurrent-tasks&#34;&gt;Soft recurrent tasks.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are some tasks that have a soft recurrence meaning that once you do them you don&#39;t want them to show up in your list of actions until a specific time has passed. You could use a recurrent &lt;code&gt;DEADLINE&lt;/code&gt; or &lt;code&gt;SCHEDULED&lt;/code&gt; but as we&#39;ve seen earlier that will clutter your calendar pretty soon. Try following the next workflow with these tasks:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add the &lt;code&gt;:soft_recurrence:&lt;/code&gt; tag to keep them tracked.&lt;/li&gt; &lt;li&gt;Add them to the tickler file with a recurrent appointment date &lt;code&gt;&amp;lt;2023-03-13 Mon ++1w&amp;gt;&lt;/code&gt; and the &lt;code&gt;:tickler:&lt;/code&gt; tag so that it doesn&#39;t show up in the agenda view even if you move it to another file.&lt;/li&gt; &lt;li&gt;When the appointed day comes you&#39;ll review the tickler elements as part of your day&#39;s routine. If you think it&#39;s time to do it, refile it to the &lt;code&gt;todo.org&lt;/code&gt; file, if not, adjust the recurrence period and set the next date. Even though this workflow is reproducing the &#34;kick the can forward&#34; that we want to avoid, the idea is that once you get the period right you&#39;ll never have to do it again. If you see that after some iterations the period keeps on changing, maybe this workflow is not working for that kind of task and you may need to think of a better system &lt;code&gt;¯\(°_o)/¯&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Once you complete the item, the new one will be spawned, once it has refile it to the tickler file again.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We use appointments instead of &lt;code&gt;DEADLINE&lt;/code&gt; or &lt;code&gt;SCHEDULED&lt;/code&gt; so that they don&#39;t clutter the tickler view if you don&#39;t do them on the appointment date.&lt;/p&gt; &lt;p&gt;Another option is not to archive the DONE tasks and in the weekly reset them to TODO the ones that you want to do the next week.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#create-an-issue-in-the-orgmode-repository&#34;&gt;Create an issue in the orgmode repository.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Refile from the capture window.&lt;/p&gt; &lt;p&gt;If you refile from the capture window, &lt;a href=&#34;https://github.com/joaomsa/telescope-orgmode.nvim/issues/4&#34;&gt;until this issue is solved&lt;/a&gt;, your task will be refiled but the capture window won&#39;t be closed.&lt;/p&gt; &lt;p&gt;Be careful that it only refiles the first task there is, so you need to close the capture before refiling the next&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#code-blocks&#34;&gt;Code blocks syntax.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Org offers two ways to structure source code in Org documents: in a source code block, and directly inline. Both specifications are shown below.&lt;/p&gt; &lt;p&gt;A source code block conforms to this structure:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &amp;lt;body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You need to use snippets for this to be usable.&lt;/p&gt; &lt;p&gt;An inline code block conforms to this structure:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;src_&amp;lt;language&amp;gt;{&amp;lt;body&amp;gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;or&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;src_&amp;lt;language&amp;gt;[&amp;lt;header arguments&amp;gt;]{&amp;lt;body&amp;gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;#+NAME: &amp;lt;name&amp;gt;&lt;/code&gt;: (Optional) Names the source block so it can be called, like a function, from other source blocks or inline code to evaluate or to capture the results. Code from other blocks, other files.&lt;/li&gt; &lt;li&gt;&lt;code&gt;#+BEGIN_SRC’ … ‘#+END_SRC&lt;/code&gt;: (Mandatory) They mark the start and end of a block that Org requires.&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;language&amp;gt;&lt;/code&gt;: (Mandatory) It is the identifier of the source code language in the block. See &lt;a href=&#34;https://orgmode.org/worg/org-contrib/babel/languages/index.html&#34;&gt;Languages&lt;/a&gt; for identifiers of supported languages.&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;switches&amp;gt;&lt;/code&gt;: (Optional) Switches provide finer control of the code execution, export, and format.&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;header arguments&amp;gt;&lt;/code&gt;: (Optional) Heading arguments control many aspects of evaluation, export and tangling of code blocks. Using Org’s properties feature, header arguments can be selectively applied to the entire buffer or specific subtrees of the Org document.&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;: Source code in the dialect of the specified language identifier.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#narrow/widen-to-subtree&#34;&gt;Narrow/Widen to subtree.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&#39;s &lt;a href=&#34;https://github.com/nvim-orgmode/orgmode/issues/200&#34;&gt;not yet supported&lt;/a&gt; to focus or zoom on one task.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#interesting-things-to-investigate&#34;&gt;Interesting things to investigate.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/org-bullets.nvim&#34;&gt;org-bullets.nvim&lt;/a&gt;: Show org mode bullets as UTF-8 characters.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/headlines.nvim&#34;&gt;headlines.nvim&lt;/a&gt;: Add few highlight options for code blocks and headlines.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/michaelb/sniprun&#34;&gt;Sniprun&lt;/a&gt;: A neovim plugin to run lines/blocs of code (independently of the rest of the file), supporting multiples languages.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/kenkeiras/org-rw&#34;&gt;Python library: Org-rw&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/topics/orgmode-nvim&#34;&gt;List of plugins&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#the-orgmode-repository-file-organization&#34;&gt;The orgmode repository file organization.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;How to structure the different orgmode files is something that has always confused me, each one does it&#39;s own way, and there are no good posts on why one structure is better than other, people just state what they do.&lt;/p&gt; &lt;p&gt;I&#39;ve started with a typical &lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/&#34;&gt;gtd&lt;/a&gt; structure with a directory for the &lt;code&gt;todo&lt;/code&gt; another for the &lt;code&gt;calendar&lt;/code&gt; then another for the &lt;code&gt;references&lt;/code&gt;. In the &lt;code&gt;todo&lt;/code&gt; I had a file for personal stuff, another for each of my work clients, and the &lt;code&gt;someday.org&lt;/code&gt;. Soon making the internal links was cumbersome so I decided to merge the personal &lt;code&gt;todo.org&lt;/code&gt; and the &lt;code&gt;someday.org&lt;/code&gt; into the same file and use folds to hide uninteresting parts of the file. The reality is that I feel that orgmode is less responsive and that I often feel lost in the file.&lt;/p&gt; &lt;p&gt;I&#39;m now more into the idea of having files per project in a flat structure and use an index.org file to give it some sense in the same way I do with the mkdocs repositories. Then I&#39;d use internal links in the todo.org file to organize the priorities of what to do next.&lt;/p&gt; &lt;p&gt;Benefits:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;As we&#39;re using a flat structure at file level, the links between the files are less cumbersome &lt;code&gt;file:./project.org::*heading&lt;/code&gt;. We only need to have unique easy to remember names for the files, instead of having to think on which directory was the file I want to make the link to. The all in one file structure makes links even easier, just &lt;code&gt;*heading&lt;/code&gt;, but the disadvantages make it not worth it.&lt;/li&gt; &lt;li&gt;You have the liberty to have a generic link like &lt;code&gt;Work on project&lt;/code&gt; or if you want to fine grain it, link the specific task of the project&lt;/li&gt; &lt;li&gt;The todo file will get smaller.&lt;/li&gt; &lt;li&gt;It has been the natural evolution of other knowledge repositories such as blue&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Filenames must be unique. It hasn&#39;t been a problem in blue.&lt;/li&gt; &lt;li&gt;Blue won&#39;t be flattened into Vida as it&#39;s it&#39;s own knowledge repository&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#synchronizations&#34;&gt;Syncronize orgmode repositories.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I use orgmode both at the laptop and the mobile, I want to syncronize some files between both with the next requisites:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The files should be available on the devices when I&#39;m not at home&lt;/li&gt; &lt;li&gt;The synchronization will be done only on the local network&lt;/li&gt; &lt;li&gt;The synchronization mechanism will only be able to see the files that need to be synched.&lt;/li&gt; &lt;li&gt;Different files can be synced to different devices. If I have three devices (laptop, mobile, tablet) I want to sync all mobile files to the laptop but just some to the tablet).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Right now I&#39;m already using &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/syncthing/&#34;&gt;syncthing&lt;/a&gt; to sync files between the mobile and my server, so it&#39;s tempting to use it also to solve this issue. So the first approach is to spawn a syncthing docker at the laptop that connects with the server to sync the files whenever I&#39;m at home.&lt;/p&gt; &lt;p&gt;I&#39;ve investigated the next options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#mount-the-whole-orgmode-repository-with-syncthing&#34;&gt;Mount the whole orgmode repository with syncthing&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#mount-a-specific-directory-to-sync&#34;&gt;Mount a specific directory to sync&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/#use-the-org-orgzly-script&#34;&gt;Use the org-orgzly script&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;openproject&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/openproject/&#34;&gt;OpenProject&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Suggest not to use openproject.&lt;/p&gt; &lt;p&gt;I&#39;ve decided to use &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/&#34;&gt;orgmode&lt;/a&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;knowledge-management&#34;&gt;Knowledge Management&lt;/h3&gt; &lt;h4 id=&#34;spaced-repetition&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/spaced_repetition/&#34;&gt;Spaced Repetition&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce spaced repetition references.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://collegeinfogeek.com/spaced-repetition-memory-technique/&#34;&gt;https://collegeinfogeek.com/spaced-repetition-memory-technique/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uvF1XuseZFE&#34;&gt;The leitner box&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;anki&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/anki/&#34;&gt;Anki&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to install the latest version.&lt;/p&gt; &lt;p&gt;Install the dependencies:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zstd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Download &lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;the latest release package&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Open a terminal and run the following commands, replacing the filename as appropriate:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;xaf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Downloads/anki-2.1.XX-linux-qt6.tar.zst
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;anki-2.1.XX-linux-qt6
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;./install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/anki/#how-long-to-do-study-sessions&#34;&gt;How long to do study sessions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I have two study modes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;When I&#39;m up to date with my cards, I study them until I finish, but usually less than 15 minutes.&lt;/li&gt; &lt;li&gt;If I have been lazy and haven&#39;t checked them in a while (like now) I assume I&#39;m not going to see them all and define a limited amount of time to review them, say 10 to 20 minutes depending on the time/energy I have at the moment.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The relief thought you can have is that as long as you keep a steady pace of 10/20 mins each day, inevitably you&#39;ll eventually finish your pending cards as you&#39;re more effective reviewing cards than entering new ones&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#39;../../anki/#what-to-do-with-&#34;hard&#34;-cards&#39;&gt;What to do with &#34;hard&#34; cards.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;re afraid to be stuck in a loop of reviewing &#34;hard&#34; cards, don&#39;t be. In reality after you&#39;ve seen that &#34;hard&#34; card three times in a row you won&#39;t mark it as hard again, because you will remember. If you don&#39;t maybe there are two reasons:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The card has too much information that should be subdivided in smaller cards.&lt;/li&gt; &lt;li&gt;You&#39;re not doing a good process of memorizing the contents once they show up.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/anki/#what-to-do-with-unneeded-cards&#34;&gt;What to do with unneeded cards.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You have three options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Suspend: It stops it from showing up permanently until you reactivate it through the browser.&lt;/li&gt; &lt;li&gt;Bury: Just delays it until the next day.&lt;/li&gt; &lt;li&gt;Delete: It deletes it forever.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Unless you&#39;re certain that you are not longer going to need it, suspend it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/anki/#configure-self-hosted-synchronization&#34;&gt;Configure self hosted synchronization.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Explain how to install &lt;code&gt;anki-sync-server&lt;/code&gt; and how to configure Ankidroid and Anki. In the end I dropped this path and used Ankidroid alone with syncthing as I didn&#39;t need to interact with the decks from the computer. Also the ecosystem of synchronization in Anki at 2023-11-10 is confusing as there are many servers available, not all are compatible with the clients and Anki itself has released it&#39;s own so some of the community ones will eventually die.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;computer-configuration-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/configuration_management/&#34;&gt;Computer configuration management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce configuration management.&lt;/p&gt; &lt;p&gt;Configuring your devices is boring, disgusting and complex. Specially when your device dies and you need to reinstall. You usually don&#39;t have the time or energy to deal with it, you just want it to work.&lt;/p&gt; &lt;p&gt;To have a system that allows you to recover from a disaster it&#39;s expensive in both time and knowledge, and many people have different solutions.&lt;/p&gt; &lt;p&gt;This article shows the latest step of how I&#39;m doing it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;game-theory&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/game_theory/&#34;&gt;Game Theory&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add the evolution of trust game theory game.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://ncase.me/trust/&#34;&gt;Evolution of trust&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Game theory shows us the three things we need for the evolution of trust:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Repeat interactions: Trust keeps a relationship going, but you need the knowledge of possible future repeat interactions before trust can evolve&lt;/li&gt; &lt;li&gt;Possible win-wins: You must be playing a non-zero-sum game, a game where it&#39;s at least possible that both players can be better off -- a win-win.&lt;/li&gt; &lt;li&gt;Low miscommunication: If the level of miscommunication is too high, trust breaks down. But when there&#39;s a little bit of miscommunication, it pays to be more forgiving&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;languages&#34;&gt;Languages&lt;/h3&gt; &lt;h4 id=&#34;bash-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Bash snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python/#move-a-file&#34;&gt;Move a file.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use one of the following&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;shutil&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;path/to/current/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;path/to/new/destination/for/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;path/to/current/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;path/to/new/destination/for/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;shutil&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;move&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;path/to/current/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;path/to/new/destination/for/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#get-the-root-path-of-a-git-repository&#34;&gt;Get the root path of a git repository.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rev-parse&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--show-toplevel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#get-epoch-gmt-time&#34;&gt;Get epoch gmt time.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;date&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-u&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;+%s&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#check-the-length-of-an-array-with-jq&#34;&gt;Check the length of an array with jq.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;echo &#39;[{&#34;username&#34;:&#34;user1&#34;},{&#34;username&#34;:&#34;user2&#34;}]&#39; | jq &#39;. | length&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#exit-the-script-if-there-is-an-error&#34;&gt;Exit the script if there is an error.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-eu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#prompt-the-user-for-data&#34;&gt;Prompt the user for data.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Ask whatever&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;choice
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#how-to-deal-with-hostcontextswitching-alertmanager-alert&#34;&gt;How to deal with HostContextSwitching alertmanager alert.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A context switch is described as the kernel suspending execution of one process on the CPU and resuming execution of some other process that had previously been suspended. A context switch is required for every interrupt and every task that the scheduler picks.&lt;/p&gt; &lt;p&gt;Context switching can be due to multitasking, Interrupt handling , user &amp;amp; kernel mode switching. The interrupt rate will naturally go high, if there is higher network traffic, or higher disk traffic. Also it is dependent on the application which every now and then invoking system calls.&lt;/p&gt; &lt;p&gt;If the cores/CPU&#39;s are not sufficient to handle load of threads created by application will also result in context switching.&lt;/p&gt; &lt;p&gt;It is not a cause of concern until performance breaks down. This is expected that CPU will do context switching. One shouldn&#39;t verify these data at first place since there are many statistical data which should be analyzed prior to looking into kernel activities. Verify the CPU, memory and network usage during this time.&lt;/p&gt; &lt;p&gt;You can see which process is causing issue with the next command:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:24&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;UID&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;PID&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;cswch/s&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;nvcswch/s&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;Command
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;162656&lt;/span&gt;.7&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16656&lt;/span&gt;.7&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;systemd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;165451&lt;/span&gt;.04&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15451&lt;/span&gt;.04&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;ksoftirqd/0
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;158628&lt;/span&gt;.87&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15828&lt;/span&gt;.87&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;rcu_sched
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;156147&lt;/span&gt;.47&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15647&lt;/span&gt;.47&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;migration/0
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;150135&lt;/span&gt;.71&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15035&lt;/span&gt;.71&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;ksoftirqd/1
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;129769&lt;/span&gt;.61&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12979&lt;/span&gt;.61&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;ksoftirqd/2
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2238&lt;/span&gt;.38&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;238&lt;/span&gt;.38&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;ksoftirqd/3
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1753&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;753&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;khugepaged
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1659&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;165&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;usb-storage
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1956&lt;/span&gt;.12&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;156&lt;/span&gt;.12&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;i915/signal:0
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;465&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29550&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29550&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;kworker/3:1H-xfs-log/dm-3
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;490&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;164700&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;14700&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;kworker/0:1H-kblockd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;506&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;163741&lt;/span&gt;.24&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16741&lt;/span&gt;.24&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;kworker/1:1H-xfs-log/dm-3
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;594&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;154742&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;154742&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;dmcrypt_write/2
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;629&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;162021&lt;/span&gt;.65&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16021&lt;/span&gt;.65&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;kworker/2:1H-kblockd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;715&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;147852&lt;/span&gt;.48&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;14852&lt;/span&gt;.48&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;xfsaild/dm-1
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;886&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;150706&lt;/span&gt;.86&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15706&lt;/span&gt;.86&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;irq/131-iwlwifi
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;966&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;135597&lt;/span&gt;.92&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;13597&lt;/span&gt;.92&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;xfsaild/dm-3
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;81&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1037&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2325&lt;/span&gt;.25&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;225&lt;/span&gt;.25&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;dbus-daemon
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;998&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1052&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;118755&lt;/span&gt;.1&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;11755&lt;/span&gt;.1&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;polkitd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;70&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1056&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;158248&lt;/span&gt;.51&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15848&lt;/span&gt;.51&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;avahi-daemon
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1061&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;133512&lt;/span&gt;.12&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;455&lt;/span&gt;.12&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;rngd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1110&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;156230&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16230&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;cupsd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1192&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;152298&lt;/span&gt;.02&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1598&lt;/span&gt;.02&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;sssd_nss
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1247&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;166132&lt;/span&gt;.99&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16632&lt;/span&gt;.99&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;systemd-logind
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1265&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;165311&lt;/span&gt;.34&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16511&lt;/span&gt;.34&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;cups-browsed
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1408&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10556&lt;/span&gt;.57&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1556&lt;/span&gt;.57&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;wpa_supplicant
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1687&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3835&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3835&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;splunkd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1773&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3728&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3728&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;Xorg
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1996&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3266&lt;/span&gt;.67&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;266&lt;/span&gt;.67&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;gsd-color
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3166&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32036&lt;/span&gt;.36&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3036&lt;/span&gt;.36&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;sssd_kcm
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;119349&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3194&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;151763&lt;/span&gt;.64&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;11763&lt;/span&gt;.64&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;dbus-daemon
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;119349&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3199&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;158306&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;18306&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;Xorg
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:27&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;119349&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3242&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;.28&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;.8&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;gnome-shell

pidstat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-wt&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/tmp/pidstat-t.out

Linux&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;.18.0-80.11.2.el8_0.x86_64&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;hostname&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;09&lt;/span&gt;/08/2020&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;_x86_64_&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CPU&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:15&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;UID&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;TGID&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;TID&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;cswch/s&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;nvcswch/s&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;Command
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;152656&lt;/span&gt;.7&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16656&lt;/span&gt;.7&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;systemd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;152656&lt;/span&gt;.7&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16656&lt;/span&gt;.7&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__systemd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;165451&lt;/span&gt;.04&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15451&lt;/span&gt;.04&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;ksoftirqd/0
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;165451&lt;/span&gt;.04&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15451&lt;/span&gt;.04&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ksoftirqd/0
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;158628&lt;/span&gt;.87&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15828&lt;/span&gt;.87&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;rcu_sched
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;158628&lt;/span&gt;.87&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15828&lt;/span&gt;.87&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__rcu_sched
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;129769&lt;/span&gt;.61&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12979&lt;/span&gt;.61&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;ksoftirqd/2
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;129769&lt;/span&gt;.61&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12979&lt;/span&gt;.33&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ksoftirqd/2
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32424&lt;/span&gt;.5&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2445&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ksoftirqd/3
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;29&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32424&lt;/span&gt;.5&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2445&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__ksoftirqd/3
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;334&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;khugepaged
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;43&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;334&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__khugepaged
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;11465&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;566&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;usb-storage
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;443&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6433&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;93&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__usb-storage
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;.41&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;i915/signal:0
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;456&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;.41&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__i915/signal:0
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;715&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;.34&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;xfsaild/dm-1
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;715&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;.34&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__xfsaild/dm-1
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;886&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;.28&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;irq/131-iwlwifi
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;886&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;23&lt;/span&gt;.28&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__irq/131-iwlwifi
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;966&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;.67&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;xfsaild/dm-3
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;966&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;19&lt;/span&gt;.67&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__xfsaild/dm-3
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;81&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1037&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;.89&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.33&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;dbus-daemon
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;81&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1037&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;.89&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.33&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__dbus-daemon
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1038&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;11567&lt;/span&gt;.31&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4436&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;NetworkManager
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1038&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.31&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__NetworkManager
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1088&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.33&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__gmain
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1094&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1340&lt;/span&gt;.66&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__gdbus
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;998&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1052&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;118755&lt;/span&gt;.1&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;11755&lt;/span&gt;.1&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;polkitd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;998&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1052&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;32420&lt;/span&gt;.66&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25545&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__polkitd
&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;:15:19&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;AM&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;998&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1132&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.66&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.00&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;__gdbus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then with help of PID which is causing issue, one can get all system calls details: Raw&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Let this command run for a few minutes while the load/context switch rates are high. It is safe to run this on a production system so you could run it on a good system as well to provide a comparative baseline. Through strace, one can debug &amp;amp; troubleshoot the issue, by looking at system calls the process has made.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#redirect-stderr-of-all-subsequent-commands-of-a-script-to-a-file&#34;&gt;Redirect stderr of all subsequent commands of a script to a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;somecommand
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;somecommand2
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;somecommand3
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DEBUGLOG&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#loop-through-a-list-of-files-found-by-find&#34;&gt;Loop through a list of files found by find.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For simple loops use the &lt;code&gt;find -exec&lt;/code&gt; syntax:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;*.txt&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-exec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;process&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;For more complex loops use a &lt;code&gt;while read&lt;/code&gt; construct:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;*.txt&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-print0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;$&#39;\0&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;file
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;…code&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;using&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The loop will execute while the &lt;code&gt;find&lt;/code&gt; command is executing. Plus, this command will work even if a file name is returned with whitespace in it. And, you won&#39;t overflow your command line buffer.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;-print0&lt;/code&gt; will use the NULL as a file separator instead of a newline and the &lt;code&gt;-d $&#39;\0&#39;&lt;/code&gt; will use NULL as the separator while reading.&lt;/p&gt; &lt;p&gt;How not to do it:&lt;/p&gt; &lt;p&gt;If you try to run the next snippet:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;file&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;*.txt&#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;…code&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;using&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You&#39;ll get the next &lt;a href=&#34;https://lyz-code.github.io/blue-book/shellcheck/&#34;&gt;&lt;code&gt;shellcheck&lt;/code&gt;&lt;/a&gt; warning:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SC2044: For loops over find output are fragile. Use find -exec or a while read loop.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You should not do this because:&lt;/p&gt; &lt;p&gt;Three reasons:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;For the for loop to even start, the find must run to completion.&lt;/li&gt; &lt;li&gt;If a file name has any whitespace (including space, tab or newline) in it, it will be treated as two separate names.&lt;/li&gt; &lt;li&gt;Although now unlikely, you can overrun your command line buffer. Imagine if your command line buffer holds 32KB, and your for loop returns 40KB of text. That last 8KB will be dropped right off your for loop and you&#39;ll never know it.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytelegrambotapi&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pdm/&#34;&gt;pytelegrambotapi&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pdm/#custom-file-generation&#34;&gt;Custom file generation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;During the build, you may want to generate other files or download resources from the internet. You can achieve this by the setup-script build configuration:&lt;/p&gt; &lt;p&gt;&lt;code&gt;``toml&lt;/code&gt; [tool.pdm.build] setup-script = &#34;build.py&#34; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;In the `build.py` script, pdm-pep517 looks for a build function and calls it with two arguments:

* `src`: the path to the source directory
* `dst`: the path to the distribution directory

Example:

```python
def build(src, dst):
    target_file = os.path.join(dst, &#34;mypackage/myfile.txt&#34;)
    os.makedirs(os.path.dirname(target_file), exist_ok=True)
    download_file_to(dst)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt; &lt;p&gt;The generated file will be copied to the resulted wheel with the same hierarchy, you need to create the parent directories if necessary.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pdm/#custom-file-generation&#34;&gt;Custom file generation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Warning: this method only works if you install the package with &lt;code&gt;pdm&lt;/code&gt; if you use &lt;code&gt;pip&lt;/code&gt; or any other package manager the &lt;code&gt;build.py&lt;/code&gt; script won&#39;t be called. Thus a more generic approach is to run the initialization steps in a &lt;code&gt;your_command init&lt;/code&gt; step or run the checks on each command.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#concurrency&#34;&gt;Basic concepts of concurrency.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Concurrency is best explained by an example stolen from &lt;a href=&#34;https://youtu.be/iG6fr81xHKA?t=4m29s&#34;&gt;Miguel Grinberg&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Chess master Judit Polgár hosts a chess exhibition in which she plays multiple amateur players. She has two ways of conducting the exhibition: synchronously and asynchronously.&lt;/p&gt; &lt;p&gt;Assumptions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;24 opponents&lt;/li&gt; &lt;li&gt;Judit makes each chess move in 5 seconds&lt;/li&gt; &lt;li&gt;Opponents each take 55 seconds to make a move&lt;/li&gt; &lt;li&gt;Games average 30 pair-moves (60 moves total)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Synchronous version: Judit plays one game at a time, never two at the same time, until the game is complete. Each game takes (55 + 5) * 30 == 1800 seconds, or 30 minutes. The entire exhibition takes 24 * 30 == 720 minutes, or 12 hours.&lt;/p&gt; &lt;p&gt;Asynchronous version: Judit moves from table to table, making one move at each table. She leaves the table and lets the opponent make their next move during the wait time. One move on all 24 games takes Judit 24 * 5 == 120 seconds, or 2 minutes. The entire exhibition is now cut down to 120 * 30 == 3600 seconds, or just 1 hour.&lt;/p&gt; &lt;p&gt;Async IO takes long waiting periods in which functions would otherwise be blocking and allows other functions to run during that downtime. (A function that blocks effectively forbids others from running from the time that it starts until the time that it returns.)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Basic concepts.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#asyncIO-is-not-easy&#34;&gt;AsyncIO is not easy&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#the-async-await-syntax-and-Native-coroutines&#34;&gt;The async/await Syntax and Native Coroutines&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#the-rules-of-async-io&#34;&gt;The Rules of Async IO&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#async-io-design-patterns&#34;&gt;Async IO Design Patterns&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#chaining-coroutines&#34;&gt;Chaining Coroutines&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#using-a-queue&#34;&gt;Using a Queue&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#async-for-and-list-comprehensions&#34;&gt;&lt;code&gt;async for&lt;/code&gt; and list comprehensions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#creating-and-gathering-tasks&#34;&gt;Creating and gathering tasks&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#when-and-why-is-async-io-the-right-choice&#34;&gt;When and Why Is Async IO the Right Choice?&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#async-io-it-is-but-which-one&#34;&gt;Async IO It Is, but Which One?&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#testing&#34;&gt;Testing&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce pytelegrambotapi.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eternnoir/pyTelegramBotAPI&#34;&gt;pyTelegramBotAPI&lt;/a&gt; is an synchronous and asynchronous implementation of the &lt;a href=&#34;https://core.telegram.org/bots/api&#34;&gt;Telegram Bot API&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pytba.readthedocs.io/en/latest/install.html&#34;&gt;Installation&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pyTelegramBotAPI
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pytelegrambotapi/#create-your-bot&#34;&gt;Create your bot.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use the &lt;code&gt;/newbot&lt;/code&gt; command to create a new bot. &lt;code&gt;@BotFather&lt;/code&gt; will ask you for a name and username, then generate an authentication token for your new bot.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The &lt;code&gt;name&lt;/code&gt; of your bot is displayed in contact details and elsewhere.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;username&lt;/code&gt; is a short name, used in search, mentions and t.me links. Usernames are 5-32 characters long and not case sensitive – but may only include Latin characters, numbers, and underscores. Your bot&#39;s username must end in &#39;bot’, like &lt;code&gt;tetris_bot&lt;/code&gt; or &lt;code&gt;TetrisBot&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;token&lt;/code&gt; is a string, like &lt;code&gt;110201543:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw&lt;/code&gt;, which is required to authorize the bot and send requests to the Bot API. Keep your token secure and store it safely, it can be used by anyone to control your bot.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To edit your bot, you have the next available commands:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;/setname&lt;/code&gt;: change your bot&#39;s name.&lt;/li&gt; &lt;li&gt;&lt;code&gt;/setdescription&lt;/code&gt;: change the bot&#39;s description (short text up to 512 characters). Users will see this text at the beginning of the conversation with the bot, titled &#39;What can this bot do?&#39;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;/setabouttext&lt;/code&gt;: change the bot&#39;s about info, a shorter text up to 120 characters. Users will see this text on the bot&#39;s profile page. When they share your bot with someone, this text is sent together with the link.&lt;/li&gt; &lt;li&gt;&lt;code&gt;/setuserpic&lt;/code&gt;: change the bot&#39;s profile picture.&lt;/li&gt; &lt;li&gt;&lt;code&gt;/setcommands&lt;/code&gt;: change the list of commands supported by your bot. Users will see these commands as suggestions when they type / in the chat with your bot. See commands for more info.&lt;/li&gt; &lt;li&gt;&lt;code&gt;/setdomain&lt;/code&gt;: link a website domain to your bot. See the login widget section.&lt;/li&gt; &lt;li&gt;&lt;code&gt;/deletebot&lt;/code&gt;: delete your bot and free its username. Cannot be undone.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pytelegrambotapi/#synchronous-telebot&#34;&gt;Synchronous TeleBot.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;telebot&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;API_TOKEN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;api_token&amp;gt;&#39;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;bot&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;telebot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TeleBot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;API_TOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;help&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;start&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_welcome&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reply_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;Hi there, I am EchoBot.&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;I am here to echo your kind words back to you. Just say anything nice and I&#39;ll say the exact same thing to you!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&#34;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;echo_message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reply_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;infinity_polling&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pytelegrambotapi/#asynchronous-telebot&#34;&gt;Asynchronous TeleBot.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;telebot.async_telebot&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AsyncTeleBot&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;bot&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AsyncTeleBot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;TOKEN&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;help&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;start&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;send_welcome&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reply_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;Hi there, I am EchoBot.&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;I am here to echo your kind words back to you. Just say anything nice and I&#39;ll say the exact same thing to you!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&#34;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;echo_message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reply_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;asyncio&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;asyncio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;polling&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;libraries&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_gnupg/&#34;&gt;Libraries&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to encrypt a file.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;gpg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;encrypt_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;path/to/file&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;recipients&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where &lt;code&gt;recipients&lt;/code&gt; is a &lt;code&gt;List[str]&lt;/code&gt; of gpg Key IDs.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_gnupg/#list-the-recipients-that-can-decrypt-a-file&#34;&gt;List the recipients that can decrypt a file.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;list_recipients&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;GPGKey&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;List the keys that can decrypt a file.&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Args:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;       path: Path to the file to check.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;keys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;short_key&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gpg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_recipients_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gpg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;short_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;fingerprint&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keys&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; feat(requests#Use a proxy): Use a proxy&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;http_proxy&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;http://10.10.1.10:3128&#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;https_proxy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;https://10.10.1.11:1080&#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ftp_proxy&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;ftp://10.10.1.10:3128&#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&#34;http&#34;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;http_proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&#34;https&#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https_proxy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&#34;ftp&#34;&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ftp_proxy&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce aiohttp.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.aiohttp.org/en/stable/&#34;&gt;&lt;code&gt;aiohttp&lt;/code&gt;&lt;/a&gt; is an asynchronous HTTP Client/Server for asyncio and Python. Think of it as the &lt;code&gt;requests&lt;/code&gt; for asyncio.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aiohttp/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aiohttp/#make-a-request&#34;&gt;How to make a request&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aiohttp/#passing-parameters-in-urls&#34;&gt;Passing parameters in urls&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aiohttp/#setting-custom-headers&#34;&gt;Setting custom headers&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aiohttp/#set-custom-cookies&#34;&gt;Set custom cookies&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aiohttp/#proxy-support&#34;&gt;Proxy support&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aiohttp/#how-to-use-the-clientSession&#34;&gt;How to use the &lt;code&gt;ClientSession&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aiohttp/#an-aiohttp-adapter&#34;&gt;An aiohttp adapter&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Receive keys from a keyserver.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;import_result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gpg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;server-name&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;keyid1&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;keyid2&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;configure-docker-to-host-the-application&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/&#34;&gt;Configure Docker to host the application&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_project_template/python_docker/#docker-python-not-showning-prints&#34;&gt;Troubleshoot Docker python not showning prints.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;CMD [&#34;python&#34;,&#34;-u&#34;,&#34;main.py&#34;]&lt;/code&gt; instead of &lt;code&gt;CMD [&#34;python&#34;,&#34;main.py&#34;]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: [Get the difference of two lists.](../coding/python/python_project_template/python_docker.md#prevent-pip-install--r-requirements.txt-to-run-on-each-docker-build:-prevent-&lt;code&gt;pip-install--r-requirements.txt&lt;/code&gt;-to-run-on-each-&lt;code&gt;docker-build&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;i&#39;m-assuming-that-at-some-point-in-your-build-process,-you&#39;re-copying-your-entire-application-into-the-docker-image-with-copy-or-add:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;copy-.-/opt/app
workdir-/opt/app
run-pip-install--r-requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;the-problem-is-that-you&#39;re-invalidating-the-docker-build-cache-every-time-you&#39;re-copying-the-entire-application-into-the-image.-this-will-also-invalidate-the-cache-for-all-subsequent-build-steps.&lt;/p&gt; &lt;p&gt;to-prevent-this,-i&#39;d-suggest-copying-only-the-requirements.txt-file-in-a-separate-build-step-before-adding-the-entire-application-into-the-image:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;copy-requirements.txt-/opt/app/requirements.txt
workdir-/opt/app
run-pip-install--r-requirements.txt
copy-.-/opt/app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;feat(python_snippets)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;If we want to substract the elements of one list from the other you can use:

```python
for x in b:
  if x in a:
    a.remove(x)
```
&lt;/code&gt;&lt;/pre&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#override-entrypoint&#34;&gt;Override entrypoint.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;run&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-it&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--entrypoint&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/bin/bash&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;docker_image&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#disable-ipv6&#34;&gt;Disable ipv6.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sysctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;net.ipv6.conf.all.disable_ipv6&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
sysctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;net.ipv6.conf.default.disable_ipv6&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#remove-the-apt-cache-after-installing-a-package&#34;&gt;Remove the apt cache after installing a package.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
  python3 \
  python3-pip \
  &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#add-the-contents-of-a-directory-to-the-docker&#34;&gt;Add the contents of a directory to the docker.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ADD ./path/to/directory /path/to/destination
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#add-healthcheck-to-your-dockers&#34;&gt;Add healthcheck to your dockers.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Health checks allow a container to expose its workload’s availability. This stands apart from whether the container is running. If your database goes down, your API server won’t be able to handle requests, even though its Docker container is still running.&lt;/p&gt; &lt;p&gt;This makes for unhelpful experiences during troubleshooting. A simple &lt;code&gt;docker ps&lt;/code&gt; would report the container as available. Adding a health check extends the &lt;code&gt;docker ps&lt;/code&gt; output to include the container’s true state.&lt;/p&gt; &lt;p&gt;You configure container health checks in your Dockerfile. This accepts a command which the Docker daemon will execute every 30 seconds. Docker uses the command’s exit code to determine your container’s healthiness:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;0&lt;/code&gt;: The container is healthy and working normally.&lt;/li&gt; &lt;li&gt;&lt;code&gt;1&lt;/code&gt;: The container is unhealthy; the workload may not be functioning.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Healthiness isn’t checked straightaway when containers are created. The status will show as starting before the first check runs. This gives the container time to execute any startup tasks. A container with a passing health check will show as healthy; an unhealthy container displays unhealthy.&lt;/p&gt; &lt;p&gt;In docker-compose you can write the healthchecks like the next snippet:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;3.4&#39;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jellyfin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;linuxserver/jellyfin:latest&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;jellyfin&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;unless-stopped&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;healthcheck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;curl http://localhost:8096/health || exit 1&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10s&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;5&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;start_period&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;5s&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#list-the-dockers-of-a-registry&#34;&gt;List the dockers of a registry.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;List all repositories (effectively images):&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-X&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GET&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://myregistry:5000/v2/_catalog
&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;repositories&#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;redis&#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&#34;ubuntu&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;List all tags for a repository:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-X&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GET&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://myregistry:5000/v2/ubuntu/tags/list
&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;name&#34;&lt;/span&gt;:&lt;span class=&#34;s2&#34;&gt;&#34;ubuntu&#34;&lt;/span&gt;,&lt;span class=&#34;s2&#34;&gt;&#34;tags&#34;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;14.04&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If the registry needs authentication you have to specify username and password in the curl command&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-X&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GET&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-u&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://myregistry:5000/v2/_catalog
curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-X&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GET&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-u&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;user&amp;gt;:&amp;lt;pass&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://myregistry:5000/v2/ubuntu/tags/list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/beautifulsoup/#searching-by-attribute-and-value&#34;&gt;Searching by attribute and value.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;td&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;valign&#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;top&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#installation&#34;&gt;Install a specific version of Docker.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Follow &lt;a href=&#34;https://docs.docker.com/engine/install/debian/&#34;&gt;these instructions&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If that doesn&#39;t install the version of &lt;code&gt;docker-compose&lt;/code&gt; that you want use &lt;a href=&#34;https://stackoverflow.com/questions/49839028/how-to-upgrade-docker-compose-to-latest-version&#34;&gt;the next snippet&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--silent&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://api.github.com/repos/docker/compose/releases/latest&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-Po&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;&#34;tag_name&#34;: &#34;\K.*\d&#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;DESTINATION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/local/bin/docker-compose
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-L&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://github.com/docker/compose/releases/download/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;VERSION&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/docker-compose-&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;uname&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;-&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;uname&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-m&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DESTINATION&lt;/span&gt;
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;chmod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;755&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$DESTINATION&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you don&#39;t want the latest version set the &lt;code&gt;VERSION&lt;/code&gt; variable.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_project_template/python_docker/#using-pdm&#34;&gt;Dockerize a PDM application.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It is possible to use PDM in a multi-stage Dockerfile to first install the project and dependencies into &lt;code&gt;__pypackages__&lt;/code&gt; and then copy this folder into the final stage, adding it to &lt;code&gt;PYTHONPATH&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;python:3.11-slim-bookworm&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;builder&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pdm

&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pyproject.toml&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pdm.lock&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;README.md&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/project/
&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;src/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/project/src

&lt;span class=&#34;k&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;/project&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mkdir&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;__pypackages__&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pdm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sync&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--prod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--no-editable

&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;python:3.11-slim-bookworm&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;ENV&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PYTHONPATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/project/pkgs
&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;builder&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/project/__pypackages__/3.11/lib&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/project/pkgs

&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;builder&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/project/__pypackages__/3.11/bin/*&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/bin/

&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;python&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;-m&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;project&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;click&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/&#34;&gt;Click&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Split stdout from stderr in tests.&lt;/p&gt; &lt;p&gt;By default the &lt;code&gt;runner&lt;/code&gt; is configured to mix &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt;, if you wish to tell apart both sources use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CliRunner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mix_stderr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/#file-system-isolation&#34;&gt;File system isolation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You may need to isolate the environment variables if your application read the configuration from them. To do that override the &lt;code&gt;runner&lt;/code&gt; fixture:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;runner&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fixture_runner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CliRunner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Configure the Click cli test runner.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CliRunner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;PASSWORD_STORE_DIR&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;GNUPGHOME&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;PASSWORD_AUTH_DIR&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;mix_stderr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you define the fixture in &lt;code&gt;conftest.py&lt;/code&gt; you may need to use another name than &lt;code&gt;runner&lt;/code&gt; otherwise it may be skipped, for example &lt;code&gt;cli_runner&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sqlite&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/&#34;&gt;SQLite&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/#import-a-table-from-another-database&#34;&gt;Import a table from another database.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have an SQLite databases named &lt;code&gt;database1&lt;/code&gt; with a table &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;database2&lt;/code&gt; with a table &lt;code&gt;t2&lt;/code&gt; and want to import table &lt;code&gt;t2&lt;/code&gt; from &lt;code&gt;database2&lt;/code&gt; into &lt;code&gt;database1&lt;/code&gt;. You need to open &lt;code&gt;database1&lt;/code&gt; with &lt;code&gt;litecli&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;litecli&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;database1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Attach the other database with the command:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ATTACH &#39;database2file&#39; AS db2;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then create the table &lt;code&gt;t2&lt;/code&gt;, and copy the data over with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;INSERT INTO t2 SELECT * FROM db2.t2;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;promql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/&#34;&gt;Promql&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/#usage&#34;&gt;Add basic operations.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Selecting series:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Select latest sample for series with a given metric name:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;node_cpu_seconds_total&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Select 5-minute range of samples for series with a given metric name:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;node_cpu_seconds_total&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;5m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Only series with given label values:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;node_cpu_seconds_total&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;cpu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&#34;,&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&#34;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Complex label matchers (&lt;code&gt;=&lt;/code&gt;: equality, &lt;code&gt;!=&lt;/code&gt;: non-equality, &lt;code&gt;=~&lt;/code&gt;: regex match, &lt;code&gt;!~&lt;/code&gt;: negative regex match):&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;node_cpu_seconds_total&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;cpu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&#34;,&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;user|system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&#34;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Select data from one day ago and shift it to the current time:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;process_resident_memory_bytes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;offset&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;1d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Rates of increase for counters:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Per-second rate of increase, averaged over last 5 minutes:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;rate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;demo_api_request_duration_seconds_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;5m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Per-second rate of increase, calculated over last two samples in a 1-minute time window:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;irate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;demo_api_request_duration_seconds_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;1m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Absolute increase over last hour:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;increase&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;demo_api_request_duration_seconds_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;1h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Aggregating over multiple series:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Sum over all series:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;node_filesystem_size_bytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Preserve the instance and job label dimensions:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;by&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;node_filesystem_size_bytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Aggregate away the instance and job label dimensions:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;without&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;node_filesystem_size_bytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Available aggregation operators: &lt;code&gt;sum()&lt;/code&gt;, &lt;code&gt;min()&lt;/code&gt;, &lt;code&gt;max()&lt;/code&gt;, &lt;code&gt;avg()&lt;/code&gt;, &lt;code&gt;stddev()&lt;/code&gt;, &lt;code&gt;stdvar()&lt;/code&gt;, &lt;code&gt;count()&lt;/code&gt;, &lt;code&gt;count_values()&lt;/code&gt;, &lt;code&gt;group()&lt;/code&gt;, &lt;code&gt;bottomk()&lt;/code&gt;, &lt;code&gt;topk()&lt;/code&gt;, &lt;code&gt;quantile()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Time:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Get the Unix time in seconds at each resolution step:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Get the age of the last successful batch job run:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;demo_batch_last_success_timestamp_seconds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Find batch jobs which haven&#39;t succeeded in an hour:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;demo_batch_last_success_timestamp_seconds&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3600&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/#run-operation-only-on-the-elements-that-match-a-condition&#34;&gt;Run operation only on the elements that match a condition.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Imagine we want to run the &lt;code&gt;zfs_dataset_used_bytes - zfs_dataset_used_by_dataset_bytes&lt;/code&gt; operation only on the elements that match &lt;code&gt;zfs_dataset_used_by_dataset_bytes &amp;gt; 200e3&lt;/code&gt;. You can do this with &lt;code&gt;and&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs_dataset_used_bytes - zfs_dataset_used_by_dataset_bytes and zfs_dataset_used_by_dataset_bytes &amp;gt; 200e3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/#substracting-two-metrics&#34;&gt;Substracting two metrics.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To run binary operators between vectors you need them to match. Basically it means that it will only do the operation on the elements that have the same labels. Sometimes you want to do operations on metrics that don&#39;t have the same labels. In those cases you can use the &lt;code&gt;on&lt;/code&gt; operator. Imagine that we want to substract the next vectors:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs_dataset_used_bytes{type=&#39;filesystem&#39;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;And&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sum by (hostname,filesystem) (zfs_dataset_used_bytes{type=&#39;snapshot&#39;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;That only have in common the labels &lt;code&gt;hostname&lt;/code&gt; and filesystem`.&lt;/p&gt; &lt;p&gt;You can use the next expression then:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs_dataset_used_bytes{type=&#39;filesystem&#39;} - on (hostname, filesystem) sum by (hostname,filesystem) (zfs_dataset_used_bytes{type=&#39;snapshot&#39;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To learn more on Vector matching read &lt;a href=&#34;https://iximiuz.com/en/posts/prometheus-vector-matching/&#34;&gt;this article&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/#ranges-only-allowed-for-vector-selectors&#34;&gt;Ranges only allowed for vector selectors.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You may need to specify a subquery range such as &lt;code&gt;[1w:1d]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;logql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/logql/&#34;&gt;Logql&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce LogQL.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://grafana.com/docs/loki/latest/logql/&#34;&gt;LogQL&lt;/a&gt; is Grafana Loki’s PromQL-inspired query language. Queries act as if they are a distributed &lt;code&gt;grep&lt;/code&gt; to aggregate log sources. LogQL uses labels and operators for filtering.&lt;/p&gt; &lt;p&gt;There are two types of LogQL queries:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Log queries: Return the contents of log lines.&lt;/li&gt; &lt;li&gt;Metric queries: Extend log queries to calculate values based on query results.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/logql/#apply-a-pattern-to-the-value-of-a-label&#34;&gt;Apply a pattern to the value of a label.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Some logs are sent in json and then one of their fields can contain other structured data. You may want to use that structured data to further filter the logs.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{app=&#34;ingress-nginx&#34;} | json | line_format `{{.log}}` | pattern `&amp;lt;_&amp;gt; - - &amp;lt;_&amp;gt; &#34;&amp;lt;method&amp;gt; &amp;lt;_&amp;gt; &amp;lt;_&amp;gt;&#34; &amp;lt;status&amp;gt; &amp;lt;_&amp;gt; &amp;lt;_&amp;gt; &#34;&amp;lt;_&amp;gt;&#34; &amp;lt;_&amp;gt;` | method != `GET`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;{app=&#34;ingress-nginx&#34;}&lt;/code&gt;: Show only the logs of the &lt;code&gt;ingress-nginx&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;| json&lt;/code&gt;: Interpret the line as a json.&lt;/li&gt; &lt;li&gt;&lt;code _.log=&#34;{.log&#34;&gt;``| line_format&lt;/code&gt;}&lt;code&gt;| pattern&lt;/code&gt;&amp;lt;&lt;em&gt;&amp;gt; - - &amp;lt;&lt;/em&gt;&amp;gt; &#34;&lt;method&gt; &amp;lt;&lt;em&gt;&amp;gt; &amp;lt;&lt;/em&gt;&amp;gt;&#34; &lt;status&gt; &amp;lt;&lt;em&gt;&amp;gt; &amp;lt;&lt;/em&gt;&amp;gt; &#34;&amp;lt;&lt;em&gt;&amp;gt;&#34; &amp;lt;&lt;/em&gt;&amp;gt;&lt;code&gt;```: interpret the&lt;/code&gt;log` json field of the trace with the selected pattern&lt;/status&gt;&lt;/method&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;``| method !=&lt;/code&gt;GET````: Filter the line using a key extracted by the pattern.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/logql/#count-the-unique-values-of-a-label&#34;&gt;Count the unique values of a label.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes you want to alert on the values of a log. For example if you want to make sure that you&#39;re receiving the logs from more than 20 hosts (otherwise something is wrong). Assuming that your logs attach a &lt;code&gt;host&lt;/code&gt; label you can run&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sum(count by(host) (rate({host=~&#34;.+&#34;} [24h])) &amp;gt; bool 0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This query will: - &lt;code&gt;{host=~&#34;.+&#34;}&lt;/code&gt;: Fetch all log lines that contain the label &lt;code&gt;host&lt;/code&gt; - &lt;code&gt;count by(host) (rate({host=~&#34;.+&#34;} [24h])&lt;/code&gt;: Calculates the number of entries in the last 24h. - &lt;code&gt;count by(host) (rate({host=~&#34;.+&#34;} [24h])) &amp;gt; bool 0&lt;/code&gt;: Converts to &lt;code&gt;1&lt;/code&gt; all the vector elements that have more than 1 message. - &lt;code&gt;sum(count by(host) (rate({host=~&#34;.+&#34;} [24h])) &amp;gt; bool 0)&lt;/code&gt;: Sums all the vector elements to get the number of hosts that have more than one message.&lt;/p&gt; &lt;p&gt;&lt;code&gt;journald&lt;/code&gt; promtail parser is known to fail between upgrades, it&#39;s useful too to make an alert to make sure that all your hosts are sending the traces. You can do it with: &lt;code&gt;sum(count by(host) (rate({job=&#34;systemd-journal&#34;} [24h])) &amp;gt; bool 0)&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pytest-xprocess/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#stop-pytest-right-at-the-start-if-condition-not-met&#34;&gt;Stop pytest right at the start if condition not met.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use the &lt;code&gt;pytest_configure&lt;/code&gt; &lt;a href=&#34;https://docs.pytest.org/en/4.6.x/reference.html#initialization-hooks&#34;&gt;initialization hook&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In your global &lt;code&gt;conftest.py&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;requests&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pytest&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pytest_configure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;http://localhost:9200&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConnectionError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;FATAL. Connection refused: ES does not appear to be installed as a service (localhost port 9200)&#39;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Note that the single argument of &lt;code&gt;pytest_configure&lt;/code&gt; has to be named &lt;code&gt;config&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Using &lt;code&gt;pytest.exit&lt;/code&gt; makes it look nicer.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce pytest-xprocess.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytest-dev/pytest-xprocess&#34;&gt;&lt;code&gt;pytest-xprocess&lt;/code&gt;&lt;/a&gt; is a pytest plugin for managing external processes across test runs.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pytest-xprocess.readthedocs.io/en/latest/#quickstart&#34;&gt;Installation&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pytest-xprocess
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;a href=&#34;https://pytest-xprocess.readthedocs.io/en/latest/#quickstart&#34;&gt;Usage&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;Define your process fixture in &lt;code&gt;conftest.py&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pytest&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;xprocess&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ProcessStarter&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;myserver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xprocess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Starter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProcessStarter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# startup pattern&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;pattern&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;[Ss]erver has started!&#34;&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# command to start process&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;command&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;arg1&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;arg2&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# ensure process is running and return its logfile&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ensure&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;myserver&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Starter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# create a connection or url/port info to the server&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;conn&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# clean up whole process tree afterwards&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;xprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;myserver&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;terminate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Now you can use this fixture in any test functions where &lt;code&gt;myserver&lt;/code&gt; needs to be up and &lt;code&gt;xprocess&lt;/code&gt; will take care of it for you.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pytest-xprocess.readthedocs.io/en/latest/starter.html#matching-process-output-with-pattern&#34;&gt;Matching process output with pattern&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;In order to detect that your process is ready to answer queries, &lt;code&gt;pytest-xprocess&lt;/code&gt; allows the user to provide a string pattern by setting the class variable pattern in the Starter class. &lt;code&gt;pattern&lt;/code&gt; will be waited for in the process &lt;code&gt;logfile&lt;/code&gt; for a maximum time defined by &lt;code&gt;timeout&lt;/code&gt; before timing out in case the provided pattern is not matched.&lt;/p&gt; &lt;p&gt;It’s important to note that pattern is a regular expression and will be matched using python &lt;code&gt;re.search&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pytest-xprocess.readthedocs.io/en/latest/starter.html#controlling-startup-wait-time-with-timeout&#34;&gt;Controlling Startup Wait Time with timeout&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;Some processes naturally take longer to start than others. By default, &lt;code&gt;pytest-xprocess&lt;/code&gt; will wait for a maximum of 120 seconds for a given process to start before raising a &lt;code&gt;TimeoutError&lt;/code&gt;. Changing this value may be useful, for example, when the user knows that a given process would never take longer than a known amount of time to start under normal circunstancies, so if it does go over this known upper boundary, that means something is wrong and the waiting process must be interrupted. The maximum wait time can be controlled through the class variable timeout.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;   &lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;myserver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xprocess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
       &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Starter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProcessStarter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
           &lt;span class=&#34;c1&#34;&gt;# will wait for 10 seconds before timing out&lt;/span&gt;
           &lt;span class=&#34;n&#34;&gt;timeout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Passing command line arguments to your process with &lt;code&gt;args&lt;/code&gt;:&lt;/p&gt; &lt;p&gt;In order to start a process, pytest-xprocess must be given a command to be passed into the subprocess.Popen constructor. Any arguments passed to the process command can also be passed using args. As an example, if I usually use the following command to start a given process:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;myproc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;bacon&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-cores&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;destdir&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;That would look like:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;myproc&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-name&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&#34;bacon&#34;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-cores&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;destdir&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;when using args in pytest-xprocess to start the same process.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;myserver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xprocess&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Starter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ProcessStarter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# will pass &#34;$&amp;gt; myproc -name &#34;bacon&#34; -cores 4 &amp;lt;destdir&amp;gt;&#34;  to the&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# subprocess.Popen constructor so the process can be started with&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# the given arguments&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;myproc&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-name&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&#34;bacon&#34;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-cores&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;destdir&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/&#34;&gt;Python Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#substract-two-paths&#34;&gt;Substract two paths.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It can also framed to how to get the relative path between two absolute paths:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pathlib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/home/lyz/&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/home/&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;relative_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;PosixPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;lyz&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#copy-files-from-a-python-package&#34;&gt;Copy files from a python package.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;pkgdir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;mypkg&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__path__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fullpath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pkgdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;myfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;shutil&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fullpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getcwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#sort-the-returned-paths-of-glob&#34;&gt;Sort the returned paths of glob.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;glob&lt;/code&gt; order is arbitrary, but you can sort them yourself.&lt;/p&gt; &lt;p&gt;If you want sorted by name:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;*.png&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;sorted by modification time:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;*.png&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getmtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;sorted by size:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;glob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;*.png&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#read-file-with-pathlib&#34;&gt;Read file with Pathlib.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;file_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/to/some/file&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;file_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-changed-time-of-a-file&#34;&gt;Get changed time of a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getmtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#configure-the-logging-of-a-program-to-look-nice&#34;&gt;Configure the logging of a program to look nice.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_logger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# pragma no cover&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Configure the Logging logger.&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Args:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        verbose: Set the logging level to Debug.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addLevelName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[36mINFO&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[0m&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addLevelName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[31mERROR&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[0m&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addLevelName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[32mDEBUG&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[0m&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addLevelName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WARNING&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[33mWARNING&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\033&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;[0m&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;verbose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;basicConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;nb&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(asctime)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(levelname)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(name)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(message)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;datefmt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;%Y-%m-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; %H:%M:%S&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;telebot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Outputs debug messages to console.&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;basicConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(levelname)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(message)s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-modified-time-of-a-file-with-pathlib&#34;&gt;Get the modified time of a file with Pathlib.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;file_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/to/some/file&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;file_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;st_mtime&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can also access:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Created time: with &lt;code&gt;st_ctime&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Accessed time: with &lt;code&gt;st_atime&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;They are timestamps, so if you want to compare it with a datetime object use the &lt;code&gt;timestamp&lt;/code&gt; method:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timestamp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;st_mtime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#show-the-date-in-the-logging-module-traces&#34;&gt;Show the date in the logging module traces.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To display the date and time of an event, you would place &lt;code&gt;%(asctime)s&lt;/code&gt; in your format string:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;logging&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;basicConfig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(asctime)s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%(message)s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;is when this event was logged.&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#remove-html-url-characters&#34;&gt;Remove html url characters.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To transform an URL string into normal string, for example replacing &lt;code&gt;%20&lt;/code&gt; with space use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;urllib.parse&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unquote&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unquote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;%CE%B1%CE%BB%20&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;αλ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;jinja2&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_jinja2/&#34;&gt;Jinja2&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_jinja2/#escape-jinja-expansion-on-a-jinja-template&#34;&gt;Escape jinja expansion on a jinja template.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;cp&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;raw&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;%}&lt;/span&gt;

Anything in this block is treated as raw text,
including {{ curly braces }} and
{% other block-like syntax %}

&lt;span class=&#34;cp&#34;&gt;{%&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;endraw&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocstrings&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/mkdocstrings/&#34;&gt;mkdocstrings&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the watch directive.&lt;/p&gt; &lt;p&gt;&lt;code&gt;watch&lt;/code&gt; is a list of directories to watch while serving the documentation. So if any file is changed in those directories, the documentation is rebuilt.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#to-investigate&#34;&gt;Investigate libraries.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pandera.readthedocs.io/en/stable/pydantic_integration.html&#34;&gt;Integration of pydantic with pandas&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#initialize-attributes-at-object-creation&#34;&gt;Initialize attributes at object creation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;pydantic&lt;/code&gt; recommends &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#using-root-validators&#34;&gt;using root validators&lt;/a&gt;, but it&#39;s difficult to undestand how to do it and to debug the errors. You also don&#39;t have easy access to the default values of the model. I&#39;d rather use the &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#overwriting-the-__init__-method&#34;&gt;overwriting the &lt;code&gt;__init__&lt;/code&gt; method&lt;/a&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;fish&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Fish initialization successful!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;complex_function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-telegram&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python-telegram/&#34;&gt;Python Telegram&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Analyze the different python libraries to interact with telegram.&lt;/p&gt; &lt;p&gt;There are two ways to interact with Telegram through python:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Client libraries&lt;/li&gt; &lt;li&gt;Bot libraries&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Client libraries:&lt;/p&gt; &lt;p&gt;Client libraries use your account to interact with Telegram itself through a developer API token.&lt;/p&gt; &lt;p&gt;The most popular to use is &lt;a href=&#34;https://docs.telethon.dev/en/stable/index.html&#34;&gt;Telethon&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Bot libraries:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://core.telegram.org/bots/samples#python&#34;&gt;Telegram lists many libraries to interact with the bot API&lt;/a&gt;, the most interesting are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;#python-telegram-bot&#34;&gt;python-telegram-bot&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;#pytelegrambotapi&#34;&gt;pyTelegramBotAPI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;#aiogram&#34;&gt;aiogram&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If there comes a moment when we have to create the messages ourselves, &lt;a href=&#34;https://telegram-text.alinsky.tech/api_reference&#34;&gt;telegram-text&lt;/a&gt; may be an interesting library to check.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-telegram-bot/python-telegram-bot&#34;&gt;python-telegram-bot&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;Pros:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Popular: 23k stars, 4.9k forks&lt;/li&gt; &lt;li&gt;Maintained: last commit 3 days ago&lt;/li&gt; &lt;li&gt;They have a developers community to get help in &lt;a href=&#34;https://telegram.me/pythontelegrambotgroup&#34;&gt;this telegram group&lt;/a&gt;&lt;/li&gt; &lt;li&gt;I like how they try to minimize third party dependencies, and how you can install the complements if you need them&lt;/li&gt; &lt;li&gt;Built on top of asyncio&lt;/li&gt; &lt;li&gt;Nice docs&lt;/li&gt; &lt;li&gt;Fully supports the &lt;a href=&#34;https://core.telegram.org/bots/api&#34;&gt;Telegram bot API&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Has many examples&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Interface is a little verbose and complicated at a first look&lt;/li&gt; &lt;li&gt;Only to be run in a single thread (not a problem)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;References:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://docs.python-telegram-bot.org/&#34;&gt;Package documentation&lt;/a&gt; is the technical reference for python-telegram-bot. It contains descriptions of all available classes, modules, methods and arguments as well as the changelog.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/python-telegram-bot/python-telegram-bot/wiki/&#34;&gt;Wiki&lt;/a&gt; is home to number of more elaborate introductions of the different features of python-telegram-bot and other useful resources that go beyond the technical documentation.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://docs.python-telegram-bot.org/examples.html&#34;&gt;Examples&lt;/a&gt; section contains several examples that showcase the different features of both the Bot API and python-telegram-bot&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/python-telegram-bot/python-telegram-bot&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eternnoir/pyTelegramBotAPI&#34;&gt;pyTelegramBotAPI&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;Pros:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Popular: 7.1k stars, 1.8k forks&lt;/li&gt; &lt;li&gt;Maintained: last commit 3 weeks ago&lt;/li&gt; &lt;li&gt;Both sync and async&lt;/li&gt; &lt;li&gt;Nicer interface with decorators and simpler setup&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/eternnoir/pyTelegramBotAPI#sending-large-text-messages&#34;&gt;They have an example on how to split long messages&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/eternnoir/pyTelegramBotAPI#testing&#34;&gt;Nice docs on how to test&lt;/a&gt;&lt;/li&gt; &lt;li&gt;They have a developers community to get help in &lt;a href=&#34;https://telegram.me/joinchat/Bn4ixj84FIZVkwhk2jag6A&#34;&gt;this telegram group&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Fully supports the &lt;a href=&#34;https://core.telegram.org/bots/api&#34;&gt;Telegram bot API&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Has examples&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Uses lambdas inside the decorators, I don&#39;t know why it does it.&lt;/li&gt; &lt;li&gt;The docs are not as throughout as &lt;code&gt;python-telegram-bot&lt;/code&gt; one.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;References:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://pytba.readthedocs.io/en/latest/index.html&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/eternnoir/pyTelegramBotAPI&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/eternnoir/pyTelegramBotAPI/tree/master/examples/asynchronous_telebot&#34;&gt;Async Examples&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aiogram/aiogram&#34;&gt;aiogram&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;Pros:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Popular: 3.8k stars, 717k forks&lt;/li&gt; &lt;li&gt;Maintained: last commit 4 days ago&lt;/li&gt; &lt;li&gt;Async support&lt;/li&gt; &lt;li&gt;They have a developers community to get help in &lt;a href=&#34;https://t.me/aiogram&#34;&gt;this telegram group&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Has type hints&lt;/li&gt; &lt;li&gt;Cleaner interface than &lt;code&gt;python-telegram-bot&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Fully supports the &lt;a href=&#34;https://core.telegram.org/bots/api&#34;&gt;Telegram bot API&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Has examples&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Cons:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Less popular than &lt;code&gt;python-telegram-bot&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Docs are written at a developer level, difficult initial barrier to understand how to use it.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;References:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://docs.aiogram.dev/en/dev-3.x/&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/aiogram/aiogram&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/aiogram/aiogram/tree/dev-3.x/examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Conclusion:&lt;/p&gt; &lt;p&gt;Even if &lt;code&gt;python-telegram-bot&lt;/code&gt; is the most popular and with the best docs, I prefer one of the others due to the easier interface. &lt;code&gt;aiogram&lt;/code&gt;s documentation is kind of crap, and as it&#39;s the first time I make a bot I&#39;d rather have somewhere good to look at.&lt;/p&gt; &lt;p&gt;So I&#39;d say to go first with &lt;code&gt;pyTelegramBotAPI&lt;/code&gt; and if it doesn&#39;t go well, fall back to &lt;code&gt;python-telegram-bot&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;questionary&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/&#34;&gt;questionary&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/#autocomplete-answers&#34;&gt;Autocomplete answers.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want autocomplete with fuzzy finding use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;questionary&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;prompt_toolkit.completion&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FuzzyWordCompleter&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;questionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;autocomplete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&#34;Save to (q to cancel): &#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;choices&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;destination_directories&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;completer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FuzzyWordCompleter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;destination_directories&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rich&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/&#34;&gt;rich&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/#tree&#34;&gt;Tree console view.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Rich has a &lt;a href=&#34;https://rich.readthedocs.io/en/latest/reference/tree.html#rich.tree.Tree&#34;&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/a&gt; class which can generate a tree view in the terminal. A tree view is a great way of presenting the contents of a filesystem or any other hierarchical data. Each branch of the tree can have a label which may be text or any other Rich renderable.&lt;/p&gt; &lt;p&gt;The following code creates and prints a tree with a simple text label:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.tree&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tree&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Rich Tree&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;With only a single &lt;code&gt;Tree&lt;/code&gt; instance this will output nothing more than the text “Rich Tree”. Things get more interesting when we call &lt;code&gt;add()&lt;/code&gt; to add more branches to the &lt;code&gt;Tree&lt;/code&gt;. The following code adds two more branches:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;bar&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The &lt;code&gt;tree&lt;/code&gt; will now have two branches connected to the original tree with guide lines.&lt;/p&gt; &lt;p&gt;When you call &lt;code&gt;add()&lt;/code&gt; a new &lt;code&gt;Tree&lt;/code&gt; instance is returned. You can use this instance to add more branches to, and build up a more complex tree. Let’s add a few more levels to the tree:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;baz_tree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;baz&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;baz_tree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;[red]Red&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;[green]Green&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;[blue]Blue&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;selenium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/&#34;&gt;Selenium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#solve-element-isn&#39;t-clickable-in-headless-mode&#34;&gt;Solve element isn&#39;t clickable in headless mode.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are many things you can try to fix this issue. Being the first to configure the &lt;code&gt;driver&lt;/code&gt; to use the full screen. Assuming you&#39;re using the &lt;a href=&#34;#use-undetected-chromedriver&#34;&gt;undetectedchromedriver&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;undetected_chromedriver.v2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;uc&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ChromeOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;--disable-dev-shm-usage&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;--no-sandbox&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;--headless&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;--start-maximized&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_argument&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;--window-size=1920,1080&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Chrome&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If that doesn&#39;t solve the issue use the next function:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Chrome&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Click the element marked by the XPATH.&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Args:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        driver: Object to interact with selenium.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        xpath: Identifier of the element to click.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        mode: Type of click. It needs to be one of [None, position, wait]&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    The different ways to click are:&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    * None: The normal click of the driver.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    * wait: Wait until the element is clickable and then click it.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    * position: Deduce the position of the element and then click it with a javascript script.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
       &lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;By&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XPATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;wait&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# https://stackoverflow.com/questions/59808158/element-isnt-clickable-in-headless-mode&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;WebDriverWait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;until&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;EC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;element_to_be_clickable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;By&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XPATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;position&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# https://stackoverflow.com/questions/16807258/selenium-click-at-certain-position&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;By&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XPATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xpath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute_script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;arguments[0].click();&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sh&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/&#34;&gt;sh&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/#passing-environmental-variables-to-commands&#34;&gt;Passing environmental variables to commands.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;_env&lt;/code&gt; special &lt;code&gt;kwarg&lt;/code&gt; allows you to pass a dictionary of environment variables and their corresponding values:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sh&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;google_chrome&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_env&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;SOCKS_SERVER&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;localhost:1234&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;code&gt;_env&lt;/code&gt; replaces your process’s environment completely. Only the key-value pairs in &lt;code&gt;_env&lt;/code&gt; will be used for its environment. If you want to add new environment variables for a process in addition to your existing environment, try something like this:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sh&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;new_env&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;new_env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;SOCKS_SERVER&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;localhost:1234&#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;google_chrome&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_env&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/#use-commands-that-return-a-syntaxerror&#34;&gt;Use commands that return a SyntaxError.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;pass&lt;/code&gt; is a reserved python word so &lt;code&gt;sh&lt;/code&gt; fails when calling the password store command &lt;code&gt;pass&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;pass_command&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;pass&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pass_command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;show&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;new_file&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;typer&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/typer/&#34;&gt;Typer&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/typer/#print-to-stderr&#34;&gt;Print to stderr.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can print to &#34;standard error&#34; with a Rich &lt;code&gt;Console(stderr=True)&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.console&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;err_console&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;err_console&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;error message&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;generic-coding-practices&#34;&gt;Generic Coding Practices&lt;/h3&gt; &lt;h4 id=&#34;how-to-code&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/how_to_code/&#34;&gt;How to code&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Personal evolution on how I code.&lt;/p&gt; &lt;p&gt;Over the years I&#39;ve tried different ways of developing my code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mindless coding: write code as you need to make it work, with no tests, documentation or any quality measure.&lt;/li&gt; &lt;li&gt;TDD.&lt;/li&gt; &lt;li&gt;Try to abstract everything to minimize the duplication of code between projects.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each has it&#39;s advantages and disadvantages. After trying them all and given that right now I only have short spikes of energy and time to invest in coding my plan is to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Make the minimum effort to design the minimum program able to solve the problem at hand. This design will be represented in an &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/&#34;&gt;orgmode&lt;/a&gt; task.&lt;/li&gt; &lt;li&gt;Write the minimum code to make it work without thinking of tests or generalization, but with the &lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/domain_driven_design/&#34;&gt;domain driven design&lt;/a&gt; concepts so the code remains flexible and maintainable.&lt;/li&gt; &lt;li&gt;Once it&#39;s working see if I have time to improve it:&lt;/li&gt; &lt;li&gt;Create the tests to cover the critical functionality (no more 100% coverage).&lt;/li&gt; &lt;li&gt;If I need to make a package or the program evolves into something complex I&#39;d use &lt;a href=&#34;https://github.com/lyz-code/cookiecutter-python-project&#34;&gt;this scaffold template&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Once the spike is over I&#39;ll wait for a new spike to come either because I have time or because something breaks and I need to fix it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;git&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/git/&#34;&gt;Git&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/git/#set-the-upstream-remote-by-default&#34;&gt;Set the upstream remote by default.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;config&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--global&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;push.default&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;current
git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;config&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--global&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;push.autoSetupRemote&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/git/#remove-tags&#34;&gt;Remove tags.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To delete a tag you can run:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tag&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;tag_name&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To remove them remotely do&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;push&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--delete&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;origin&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tag_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;ansible-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/forgejo/&#34;&gt;Ansible Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Forgejo.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://forgejo.org/&#34;&gt;Forgejo&lt;/a&gt; is a self-hosted lightweight software forge. Easy to install and low maintenance, it just does the job. The awful name comes from &lt;code&gt;forĝejo&lt;/code&gt;, the Esperanto word for forge. I kind of like though the concept of forge for the repositories.&lt;/p&gt; &lt;p&gt;Brought to you by an inclusive community under the umbrella of &lt;a href=&#34;https://forgejo.org/faq/#what-is-codeberg-ev&#34;&gt;Codeberg e.V.&lt;/a&gt;, a democratic non-profit organization, Forgejo can be trusted to be exclusively Free Software. It is a &lt;a href=&#34;https://codeberg.org/forgejo/forgejo/src/branch/forgejo/CONTRIBUTING/WORKFLOW.md#feature-branches&#34;&gt;&#34;soft&#34; fork of Gitea&lt;/a&gt; with a focus on scaling, federation and privacy.&lt;/p&gt; &lt;p&gt;In October 2022 the domains and trademark of Gitea were transferred to a for-profit company without knowledge or approval of the community. Despite &lt;a href=&#34;https://gitea-open-letter.coding.social/&#34;&gt;writing an open letter&lt;/a&gt;, the takeover was later confirmed. The goal of Forgejo is to continue developing the code with a healthy democratic governance.&lt;/p&gt; &lt;p&gt;On the 15&lt;sup&gt;th&lt;/sup&gt; of December of 2022 the &lt;a href=&#34;https://forgejo.org/2022-12-15-hello-forgejo/&#34;&gt;project was born&lt;/a&gt; with these major objectives:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The community is in control, and ensures we develop to address community needs.&lt;/li&gt; &lt;li&gt;We will help liberate software development from the shackles of proprietary tools.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;One of the approaches to achieve the last point is through pushing for &lt;a href=&#34;https://forgejo.org/2023-01-10-answering-forgejo-federation-questions/&#34;&gt;the Forgejo federation&lt;/a&gt; a much needed feature in the git web application ecosystem.&lt;/p&gt; &lt;p&gt;On the 29&lt;sup&gt;th&lt;/sup&gt; of December of 2022 they released &lt;a href=&#34;https://forgejo.org/2022-12-29-release-v1-18-0&#34;&gt;the first stable release&lt;/a&gt; and they have released several security releases between then and now.&lt;/p&gt; &lt;p&gt;Despite what you choose, the good thing is that as long as it&#39;s a soft fork &lt;a href=&#34;https://forgejo.org/faq/#are-migrations-between-gitea-and-forgejo-possible&#34;&gt;migrating between these software&lt;/a&gt; should be straight forward.&lt;/p&gt; &lt;p&gt;Forgejo outshines Gitea in:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Being built up by the people for the people. The project may die but it&#39;s not likely it will follow Gitea&#39;s path.&lt;/li&gt; &lt;li&gt;They are transparent regarding the &lt;a href=&#34;https://codeberg.org/forgejo/governance&#34;&gt;gobernance of the project&lt;/a&gt; which is created through &lt;a href=&#34;https://codeberg.org/forgejo/discussions/issues&#34;&gt;open community discussions&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;It&#39;s a political project that fights for the people&#39;s rights, for example through &lt;a href=&#34;https://forgejo.org/2023-01-10-answering-forgejo-federation-questions/&#34;&gt;federation&lt;/a&gt; and freely incorporating the new additions of Gitea&lt;/li&gt; &lt;li&gt;They&#39;ll eventually &lt;a href=&#34;https://codeberg.org/forgejo/discussions/issues/6&#34;&gt;have a better license&lt;/a&gt;&lt;/li&gt; &lt;li&gt;They get all the features and fixes of Gitea plus the contributions of the developers of the community that run out of Gitea.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Gitea on the other hand has the next advantages:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It&#39;s a more stable project, it&#39;s been alive for much more time and now has the back up of a company trying to make profit out of it. Forgejo&#39;s community and structure is still &lt;a href=&#34;https://codeberg.org/forgejo/meta/issues/187&#34;&gt;evolving to a stable state&lt;/a&gt; though, although it looks promising!&lt;/li&gt; &lt;li&gt;Quicker releases. As Forgejo needs to review and incorporate Gitea&#39;s contributions, it takes longer to do a release.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Being a soft-fork has it&#39;s disadvantages too, for example deciding where to open the issues and pull requests, &lt;a href=&#34;https://codeberg.org/forgejo/meta/issues/114&#34;&gt;they haven&#39;t yet decided which is their policy around this topic&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#authorize-an-ssh-key&#34;&gt;Authorize an SSH key.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Authorize the sender ssh key&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;authorized_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;syncoid&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;present&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;syncoid_receive_ssh_key&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#create-a-user&#34;&gt;Create a user.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The following snippet creates a user with password login disabled.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Create the syncoid user&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;syncoid&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;present&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;!&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/usr/sbin/nologin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you don&#39;t set a password any user can do &lt;code&gt;su your_user&lt;/code&gt; to set a random password use the next snippet:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Create the syncoid user&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;syncoid&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;present&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;lookup(&#39;password&#39;,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;/dev/null&#39;,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;length=50,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;encrypt=&#39;sha512_crypt&#39;)&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/bin/bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This won&#39;t pass the idempotence tests as it doesn&#39;t save the password anywhere (&lt;code&gt;/dev/null&lt;/code&gt;) in the controler machine.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#create-an-ssh-key&#34;&gt;Create an ssh key.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Create .ssh directory&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/root/.ssh&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;directory&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;700&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Create the SSH key to directory&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;openssh_keypair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/root/.ssh/id_ed25519&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ed25519&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ssh&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Show public key&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ssh.public_key&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#skip-ansible-lint-for-some-tasks&#34;&gt;Skip ansible-lint for some tasks.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Modify permissions&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;chmod -R g-w /home/user&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;skip_ansible_lint&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;sudo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#start-and-enable-a-systemd-service&#34;&gt;Start and enable a systemd service.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Start the service&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;systemd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;zfs_exporter&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;daemon_reload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;started&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#download-an-decompress-a-tar.gz&#34;&gt;Download an decompress a tar.gz.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Unarchive a file that needs to be downloaded (added in 2.0)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.unarchive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://example.com/example.zip&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/usr/local/bin&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;remote_src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to only extract a file you can use the &lt;code&gt;includes&lt;/code&gt; arg&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Download the zfs exporter&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.unarchive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://github.com/pdf/zfs_exporter/releases/download/v{{ zfs_exporter_version }}/zfs_exporter-{{ zfs_exporter_version }}.linux-amd64.tar.gz&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/usr/local/bin&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;include&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;zfs_exporter&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;remote_src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;yes&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;0755&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;But that snippet sometimes fail, you can alternatively download it locally and &lt;code&gt;copy&lt;/code&gt; it:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Test if zfs_exporter binary exists&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/usr/local/bin/zfs_exporter&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;zfs_exporter_binary&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Install the zfs exporter&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Download the zfs exporter&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;delegate_to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;localhost&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.unarchive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://github.com/pdf/zfs_exporter/releases/download/v{{ zfs_exporter_version }}/zfs_exporter-{{ zfs_exporter_version }}.linux-amd64.tar.gz&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/tmp/&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;remote_src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;yes&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Upload the zfs exporter to the server&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/tmp/zfs_exporter-{{ zfs_exporter_version }}.linux-amd64/zfs_exporter&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/usr/local/bin&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;0755&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;not zfs_exporter_binary.stat.exists&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#run-command-on-a-working-directory&#34;&gt;Run command on a working directory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Change the working directory to somedir/ and run the command as db_owner&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/usr/bin/make_database.sh db_user db_name&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;yes&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become_user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;db_owner&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;somedir/&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;creates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/path/to/database&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#run-handlers-in-the-middle-of-the-tasks-file&#34;&gt;Run handlers in the middle of the tasks file.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you need handlers to run before the end of the play, add a task to flush them using the &lt;a href=&#34;https://docs.ansible.com/ansible/latest/collections/ansible/builtin/meta_module.html#meta-module&#34;&gt;meta module&lt;/a&gt;, which executes Ansible actions:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;tasks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Some tasks go here&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Flush handlers&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;flush_handlers&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Some other tasks&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The &lt;code&gt;meta: flush_handlers&lt;/code&gt; task triggers any handlers that have been notified at that point in the play.&lt;/p&gt; &lt;p&gt;Once handlers are executed, either automatically after each mentioned section or manually by the &lt;code&gt;flush_handlers meta&lt;/code&gt; task, they can be notified and run again in later sections of the play.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#run-command-idempotently&#34;&gt;Run command idempotently.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Register the runner in gitea&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;act_runner register --config config.yaml --no-interactive --instance {{ gitea_url }} --token {{ gitea_docker_runner_token }}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;creates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/var/lib/gitea_docker_runner/.runner&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#get-the-correct-architecture-string&#34;&gt;Get the correct architecture string.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have an &lt;code&gt;amd64&lt;/code&gt; host you&#39;ll get &lt;code&gt;x86_64&lt;/code&gt;, but sometimes you need the &lt;code&gt;amd64&lt;/code&gt; string. On those cases you can use the next snippet:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;deb_architecture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;aarch64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;arm64&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;x86_64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;amd64&lt;/span&gt;

&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Download the act runner binary&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;become&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;True&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.get_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://dl.gitea.com/act_runner/act_runner-linux-{{ deb_architecture[ansible_architecture] }}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/usr/bin/act_runner&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;0755&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#check-the-instances-that-are-going-to-be-affected-by-playbook-run&#34;&gt;Check the instances that are going to be affected by playbook run.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Useful to list the instances of a dynamic inventory&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ansible-inventory&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-i&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;aws_ec2.yaml&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#check-if-variable-is-defined-or-empty&#34;&gt;Check if variable is defined or empty.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In Ansible playbooks, it is often a good practice to test if a variable exists and what is its value.&lt;/p&gt; &lt;p&gt;Particularity this helps to avoid different “VARIABLE IS NOT DEFINED” errors in Ansible playbooks.&lt;/p&gt; &lt;p&gt;In this context there are several useful tests that you can apply using &lt;a href=&#34;https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html&#34;&gt;Jinja2 filters&lt;/a&gt; in Ansible.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Check if Ansible variable is defined (exists).&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;tasks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;The variable &#39;foo&#39; is defined&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#39;&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;when:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;defined&lt;/span&gt;

&lt;span class=&#34;s&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;fail:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;msg=&#34;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;The variable &#39;bar&#39; is not defined&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;bar is undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#check-if-ansible-variable-is-empty&#34;&gt;Check if Ansible variable is empty.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;tasks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;msg=&#34;The variable &#39;bar&#39; is empty&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;bar|length == 0&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;The variable &#39;foo&#39; is not empty&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#39;&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;when:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;foo|length&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#check-if-ansible-variable-is-defined-and-not-empty&#34;&gt;Check if Ansible variable is defined and not empty.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;tasks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;The variable &#39;foo&#39; is defined and not empty&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;(foo is defined) and (foo|length &amp;gt; 0)&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;msg=&#34;The variable &#39;bar&#39; is not defined or empty&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;(bar is not defined) or (bar|length == 0)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#download-a-file&#34;&gt;Download a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Download foo.conf&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.get_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;http://example.com/path/file.conf&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;dest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/etc/foo.conf&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;0440&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#ansible-condition-that-uses-a-regexp&#34;&gt;Ansible condition that uses a regexp.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Check if an instance name or hostname matches a regex pattern&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;inventory_hostname is not match(&#39;molecule-.*&#39;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;not&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;molecule&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;instance&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#ansible-lint-doesn&#39;t-find-requirements&#34;&gt;Ansible-lint doesn&#39;t find requirements.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It may be because you&#39;re using &lt;code&gt;requirements.yaml&lt;/code&gt; instead of &lt;code&gt;requirements.yml&lt;/code&gt;. Create a temporal link from one file to the other, run the command and then remove the link.&lt;/p&gt; &lt;p&gt;It will work from then on even if you remove the link. &lt;code&gt;¯\(°_o)/¯&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#run-task-only-once&#34;&gt;Run task only once.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add &lt;code&gt;run_once: true&lt;/code&gt; on the task definition:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Do a thing on the first host in a group.&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;Yay&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;only&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;prints&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;once&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#ansible-add-a-sleep&#34;&gt;Ansible add a sleep.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Pause for 5 minutes to build app cache&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ansible.builtin.pause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;minutes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#ansible-lint-skip-some-rules&#34;&gt;Ansible lint skip some rules.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add a &lt;code&gt;.ansible-lint-ignore&lt;/code&gt; file with a line per rule to ignore with the syntax &lt;code&gt;path/to/file rule_to_ignore&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gitea&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/&#34;&gt;Gitea&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce chezmoi.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.chezmoi.io/&#34;&gt;Chezmoi&lt;/a&gt; stores the desired state of your dotfiles in the directory &lt;code&gt;~/.local/share/chezmoi&lt;/code&gt;. When you run &lt;code&gt;chezmoi apply&lt;/code&gt;, &lt;code&gt;chezmoi&lt;/code&gt; calculates the desired contents for each of your dotfiles and then makes the minimum changes required to make your dotfiles match your desired state.&lt;/p&gt; &lt;p&gt;What I like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Supports &lt;code&gt;pass&lt;/code&gt; to retrieve credentials.&lt;/li&gt; &lt;li&gt;Popular&lt;/li&gt; &lt;li&gt;Can remove directories on &lt;code&gt;apply&lt;/code&gt;&lt;/li&gt; &lt;li&gt;It has a &lt;code&gt;diff&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.chezmoi.io/user-guide/include-files-from-elsewhere/&#34;&gt;It can include dotfiles from an URL&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.chezmoi.io/user-guide/encryption/gpg/&#34;&gt;Encrypt files with gpg&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/alker0/chezmoi.vim&#34;&gt;There&#39;s a vim plugin&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Actively maintained&lt;/li&gt; &lt;li&gt;Good documentation&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;What I don&#39;t like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Go templates, although &lt;a href=&#34;https://www.chezmoi.io/user-guide/templating/#creating-a-template-file&#34;&gt;it supports autotemplating&lt;/a&gt; and it&#39;s &lt;a href=&#34;https://www.chezmoi.io/user-guide/templating/#template-variables&#34;&gt;well explained&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Written in Go&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the article you can also find:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/chezmoi/#installation&#34;&gt;How to install it&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/chezmoi/#basic-usage&#34;&gt;How to use it&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/chezmoi/#install-a-binary-from-an-external-url&#34;&gt;How to install a binary from an external url&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update the project url of helm-secrets.&lt;/p&gt; &lt;p&gt;From &lt;a href=&#34;https://github.com/futuresimple/helm-secrets&#34;&gt;https://github.com/futuresimple/helm-secrets&lt;/a&gt; to &lt;a href=&#34;https://github.com/jkroepke/helm-secrets&#34;&gt;https://github.com/jkroepke/helm-secrets&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#disable-the-regular-login-use-only-oauth&#34;&gt;Disable the regular login, use only Oauth.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You need to add a file inside your &lt;a href=&#34;https://docs.gitea.io/en-us/customizing-gitea/&#34;&gt;&lt;code&gt;custom&lt;/code&gt; directory&lt;/a&gt;. The file is too big to add in this digest, please access the article to get it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#configure-it-with-terraform&#34;&gt;Configure it with terraform.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Gitea can be configured through terraform too. There is an &lt;a href=&#34;https://gitea.com/gitea/terraform-provider-gitea/src/branch/main&#34;&gt;official provider&lt;/a&gt; that doesn&#39;t work, there&#39;s a &lt;a href=&#34;https://registry.terraform.io/providers/Lerentis/gitea/latest/docs&#34;&gt;fork that does though&lt;/a&gt;. Sadly it doesn&#39;t yet support configuring Oauth Authentication sources. Be careful &lt;a href=&#34;https://registry.terraform.io/providers/Lerentis/gitea/latest/docs/resources/oauth2_app&#34;&gt;&lt;code&gt;gitea_oauth2_app&lt;/code&gt;&lt;/a&gt; looks to be the right resource to do that, but instead it configures Gitea to be the Oauth provider, not a consumer.&lt;/p&gt; &lt;p&gt;In the article you can find how to configure and use it to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#create-an-organization&#34;&gt;Create an organization&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#create-an-admin-user-through-the-command-line&#34;&gt;Create an admin user through the command line.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gitea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--config&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/etc/gitea/app.ini&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;admin&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;create&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--admin&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--username&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--password&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;password&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--email&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;email
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Or you can change &lt;a href=&#34;https://discourse.gitea.io/t/how-to-change-gitea-admin-password-from-the-command-terminal-line/1930&#34;&gt;the admin&#39;s password&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gitea&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--config&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/etc/gitea/app.ini&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;admin&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;change-password&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-u&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;username&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; feat(gtd): Introduce Getting things done&lt;/p&gt; &lt;p&gt;First summary of David Allen&#39;s book Getting things done. It includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#theory-principles&#34;&gt;Theory principles&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#managing-commitments&#34;&gt;Managing commitments&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#managing-stuff&#34;&gt;Managing stuff&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#managing-actions&#34;&gt;Managing actions&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#workflow-steps&#34;&gt;Workflow steps&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#capture&#34;&gt;Capture what has our attention.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#clarify-and-organize&#34;&gt;Clarify what each item means and what to do about it.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#clarify-and-organize&#34;&gt;Organize the results.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#reflect&#34;&gt;Reflect on the options.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#engage&#34;&gt;Engage the chosen options.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#setting-up-the-system&#34;&gt;Setting up the system&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#setting-up-the-space&#34;&gt;Setting up the space&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gtd/#setting-up-your-filing-system&#34;&gt;Setting up your filing system&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#configure-gitea-actions&#34;&gt;Gitea actions overview.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We&#39;ve been using &lt;a href=&#34;https://lyz-code.github.io/blue-book/drone/&#34;&gt;Drone&lt;/a&gt; as CI runner for some years now as Gitea didn&#39;t have their native runner. On &lt;a href=&#34;https://blog.gitea.io/2023/03/gitea-1.19.0-is-released/&#34;&gt;Mar 20, 2023&lt;/a&gt; however Gitea released the version 1.19.0 which promoted to stable the Gitea Actions which is a built-in CI system like GitHub Actions. With Gitea Actions, you can reuse your familiar workflows and Github Actions in your self-hosted Gitea instance. While it is not currently fully compatible with GitHub Actions, they intend to become as compatible as possible in future versions. The typical procedure is as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Register a runner (at the moment, act runners are the only option). This can be done on the following scopes:&lt;/li&gt; &lt;li&gt;site-wide (by site admins)&lt;/li&gt; &lt;li&gt;organization-wide (by organization owners)&lt;/li&gt; &lt;li&gt;repository-wide (by repository owners)&lt;/li&gt; &lt;li&gt;Create workflow files under &lt;code&gt;.gitea/workflows/&amp;lt;workflow name&amp;gt;.yaml&lt;/code&gt; or &lt;code&gt;.github/workflows/&amp;lt;workflow name&amp;gt;.yaml&lt;/code&gt;. The syntax is the same as &lt;a href=&#34;https://docs.github.com/en/actions&#34;&gt;the GitHub workflow syntax&lt;/a&gt; where supported.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Gitea Actions advantages are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Uses the same pipeline syntax as Github Actions, so it&#39;s easier to use for new developers&lt;/li&gt; &lt;li&gt;You can reuse existent Github actions.&lt;/li&gt; &lt;li&gt;Migration from Github repositories to Gitea is easier.&lt;/li&gt; &lt;li&gt;You see the results of the workflows in the same gitea webpage, which is much cleaner than needing to go to drone&lt;/li&gt; &lt;li&gt;Define the secrets in the repository configuration.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Drone advantages are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;They have the promote event. Not critical as we can use other git events such as creating a tag.&lt;/li&gt; &lt;li&gt;They can be run as a service by default. The gitea runners will need some work to run on instance restart.&lt;/li&gt; &lt;li&gt;Has support for &lt;a href=&#34;https://docs.drone.io/quickstart/kubernetes/&#34;&gt;running kubernetes pipelines&lt;/a&gt;. Gitea actions doesn&#39;t yet support this&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#setup-gitea-actions&#34;&gt;Setup Gitea actions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You need a Gitea instance with a version of 1.19.0 or higher. Actions are disabled by default (as they are still an feature-in-progress), so you need to add the following to the configuration file to enable it:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[actions]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;ENABLED&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Even if you enable at configuration level you need to manually enable the actions on each repository &lt;a href=&#34;https://github.com/go-gitea/gitea/issues/23724&#34;&gt;until this issue is solved&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;So far there is &lt;a href=&#34;https://gitea.com/gitea/act_runner&#34;&gt;only one possible runner&lt;/a&gt; which is based on docker and &lt;a href=&#34;https://github.com/nektos/act&#34;&gt;&lt;code&gt;act&lt;/code&gt;&lt;/a&gt;. Currently, the only way to install act runner is by compiling it yourself, or by using one of the &lt;a href=&#34;http://dl.gitea.com/act_runner&#34;&gt;pre-built binaries&lt;/a&gt;. There is no Docker image or other type of package management yet. At the moment, act runner should be run from the command line. Of course, you can also wrap this binary in something like a system service, supervisord, or Docker container.&lt;/p&gt; &lt;p&gt;Before running a runner, you should first register it to your Gitea instance using the following command:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./act_runner&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;register&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--no-interactive&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--instance&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;instance&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--token&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;token&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;There are two arguments required, &lt;code&gt;instance&lt;/code&gt; and &lt;code&gt;token&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;instance&lt;/code&gt; refers to the address of your Gitea instance, like &lt;code&gt;http://192.168.8.8:3000&lt;/code&gt;. The runner and job containers (which are started by the runner to execute jobs) will connect to this address. This means that it could be different from the &lt;code&gt;ROOT_URL&lt;/code&gt; of your Gitea instance, which is configured for web access. It is always a bad idea to use a loopback address such as &lt;code&gt;127.0.0.1&lt;/code&gt; or &lt;code&gt;localhost&lt;/code&gt;, as we will discuss later. If you are unsure which address to use, the LAN address is usually the right choice.&lt;/p&gt; &lt;p&gt;&lt;code&gt;token&lt;/code&gt; is used for authentication and identification, such as &lt;code&gt;P2U1U0oB4XaRCi8azcngmPCLbRpUGapalhmddh23&lt;/code&gt;. It is one-time use only and cannot be used to register multiple runners. You can obtain tokens from &lt;code&gt;your_gitea.com/admin/runners&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;After registering, a new file named &lt;code&gt;.runner&lt;/code&gt; will appear in the current directory. This file stores the registration information. Please do not edit it manually. If this file is missing or corrupted, you can simply remove it and register again.&lt;/p&gt; &lt;p&gt;Finally, it’s time to start the runner.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./act_runner&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;daemon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#use-the-gitea-actions&#34;&gt;Use the gitea actions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Even if Actions is enabled for the Gitea instance, repositories &lt;a href=&#34;https://github.com/go-gitea/gitea/issues/23724&#34;&gt;still disable Actions by default&lt;/a&gt;. Enable it on the settings page of your repository.&lt;/p&gt; &lt;p&gt;You will need to study &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions&#34;&gt;the workflow syntax&lt;/a&gt; for Actions and write the workflow files you want.&lt;/p&gt; &lt;p&gt;However, we can just start from a simple demo:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Gitea Actions Demo&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;run-name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;${{ gitea.actor }} is testing out Gitea Actions&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Explore-Gitea-Actions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;The job was automatically triggered by a ${{ gitea.event_name }} event.&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;This job is now running on a ${{ runner.os }} server hosted by Gitea!&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;The name of your branch is ${{ gitea.ref }} and your repository is ${{ gitea.repository }}.&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Check out repository code&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;The ${{ gitea.repository }} repository has been cloned to the runner.&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;The workflow is now ready to test your code on the runner.&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;List files in the repository&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ls ${{ gitea.workspace }}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;echo &#34;This job&#39;s status is ${{ gitea.status }}.&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can upload it as a file with the extension &lt;code&gt;.yaml&lt;/code&gt; in the directory &lt;code&gt;.gitea/workflows/&lt;/code&gt; or &lt;code&gt;.github/workflows&lt;/code&gt; of the repository, for example &lt;code&gt;.gitea/workflows/demo.yaml&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;You may be aware that there are tens of thousands of &lt;a href=&#34;https://github.com/marketplace?type=actions&#34;&gt;marketplace actions in GitHub&lt;/a&gt;. However, when you write &lt;code&gt;uses: actions/checkout@v3&lt;/code&gt;, it actually downloads the scripts from gitea.com/actions/checkout by default (not GitHub). This is a mirror of github.com/actions/checkout, but it’s impossible to mirror all of them. That’s why you may encounter failures when trying to use some actions that haven’t been mirrored.&lt;/p&gt; &lt;p&gt;The good news is that you can specify the URL prefix to use actions from anywhere. This is an extra syntax in Gitea Actions. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;uses: https://github.com/xxx/xxx@xxx&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;uses: https://gitea.com/xxx/xxx@xxx&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;uses: http://your_gitea_instance.com/xxx@xxx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Be careful, the &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;http://&lt;/code&gt; prefix is necessary!&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Import organisations into terraform.&lt;/p&gt; &lt;p&gt;To import organisations and teams you need to use their &lt;code&gt;ID&lt;/code&gt;. You can see the ID of the organisations in the Administration panel. To get the Teams ID you need to use the API. Go to &lt;a href=&#34;https://your.gitea.com/api/swagger#/organization/orgListTeams&#34;&gt;https://your.gitea.com/api/swagger#/organization/orgListTeams&lt;/a&gt; and enter the organisation name.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Give some tip to deal with big diffs.&lt;/p&gt; &lt;p&gt;Sometimes the &lt;code&gt;diff&lt;/code&gt; is too big and you need to work with it chuck by chunk. For each change you can either:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;chezmoi add &amp;lt;target&amp;gt;&lt;/code&gt; if you want to keep the changes you&#39;ve manually made to the files that match the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;chezmoi apply &amp;lt;target&amp;gt;&lt;/code&gt; if you want to apply the changes that chezmoi proposes for the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Here &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; is any directory or file listed in the &lt;code&gt;diff&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add systemd service for the actions runner.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[Unit]
Description=Gitea Actions Runner
After=network.target

[Service]
WorkingDirectory=/var/gitea/gitea/act_runner/main
ExecStart=/var/gitea/gitea/act_runner/main/act_runner-main-linux-amd64 daemon

[Install]
WantedBy=default.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#tweak-the-runner-image&#34;&gt;Tweak the runner image.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;a href=&#34;https://docs.gitea.com/next/usage/actions/act-runner/#labels&#34;&gt;gitea runner&lt;/a&gt; uses the &lt;code&gt;node:16-bullseye&lt;/code&gt; image by default, in that image &lt;a href=&#34;https://itsthejoker.github.io/gitea_actions_and_python/&#34;&gt;the &lt;code&gt;setup-python&lt;/code&gt; action doesn&#39;t work&lt;/a&gt;. You can tweak the docker image that the runner runs by editing the &lt;code&gt;.runner&lt;/code&gt; file that is in the directory where you registered the runner (probably close to the &lt;code&gt;act_runner&lt;/code&gt; executable).&lt;/p&gt; &lt;p&gt;If you open that up, you’ll see that there is a section called labels, and it (most likely) looks like this:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;&#34;labels&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;ubuntu-latest:docker://node:16-bullseye&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;ubuntu-22.04:docker://node:16-bullseye&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;ubuntu-20.04:docker://node:16-bullseye&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;ubuntu-18.04:docker://node:16-buster&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can specify any other docker image. Adding new labels doesn&#39;t work yet.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce molecule.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ansible-community/molecule&#34;&gt;Molecule&lt;/a&gt; is a testing tool for ansible roles.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/ansible-community/molecule&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://molecule.rtfd.io/&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/molecule/#ci-configuration&#34;&gt;CI configuration.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Since gitea supports github actions you can use the &lt;code&gt;setup-molecule&lt;/code&gt; and &lt;code&gt;setup-lint&lt;/code&gt; actions. For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Molecule&lt;/span&gt;

&lt;span class=&#34;s&#34;&gt;&#34;on&#34;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;pull_request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PY_COLORS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;1&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ANSIBLE_FORCE_COLOR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;1&#34;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Lint&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Checkout the codebase&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;actions/checkout@v3&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Setup Lint&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;bec-galaxy/setup-lint@{Version}&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Run Lint tests&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ansible-lint&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;molecule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Molecule&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;needs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;lint&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Checkout the codebase&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;actions/checkout@v3&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Setup Molecule&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;bec-galaxy/setup-molecule@{Version}&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Run Molecule tests&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;molecule test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bec-galaxy/setup-molecule/blob/main/action.yml&#34;&gt;That action&lt;/a&gt; installs the latest version of the packages, if you need to check a specific version of the packages you may want to create your own step or your own action.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/molecule/#to-v5.0.0&#34;&gt;Upgrade to v5.0.0.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;They&#39;ve removed the &lt;code&gt;lint&lt;/code&gt; command, the reason behind is that there are two different testing methods which are expected to be run in very different ways. Linting should be run per entire repository. Molecule executions are per scenario and one project can have even &amp;gt;100 scenarios. Running lint on each of them would not only slowdown but also increase the maintenance burden on linter configuration and the way is called.&lt;/p&gt; &lt;p&gt;They recommend users to run &lt;code&gt;ansible-lint&lt;/code&gt; using &lt;code&gt;pre-commit&lt;/code&gt; with or without `tox. That gives much better control over how/when it is updated.&lt;/p&gt; &lt;p&gt;You can see an example on how to do this in the &lt;a href=&#34;#ci-configuration&#34;&gt;CI configuration section&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Configure the gitea actions.&lt;/p&gt; &lt;p&gt;So far there is &lt;a href=&#34;https://gitea.com/gitea/act_runner&#34;&gt;only one possible runner&lt;/a&gt; which is based on docker and &lt;a href=&#34;https://github.com/nektos/act&#34;&gt;&lt;code&gt;act&lt;/code&gt;&lt;/a&gt;. Currently, the only way to install act runner is by compiling it yourself, or by using one of the &lt;a href=&#34;https://dl.gitea.com/act_runner&#34;&gt;pre-built binaries&lt;/a&gt;. There is no Docker image or other type of package management yet. At the moment, act runner should be run from the command line. Of course, you can also wrap this binary in something like a system service, supervisord, or Docker container.&lt;/p&gt; &lt;p&gt;You can create the default configuration of the runner with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./act_runner&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;generate-config&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;config.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can tweak there for example the &lt;code&gt;capacity&lt;/code&gt; so you are able to run more than one workflow in parallel.&lt;/p&gt; &lt;p&gt;Before running a runner, you should first register it to your Gitea instance using the following command:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./act_runner&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;register&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--config&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;config.yaml&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--no-interactive&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--instance&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;instance&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--token&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;token&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Finally, it’s time to start the runner.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./act_runner&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--config&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;config.yaml&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;daemon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to create your own act docker, you can start with this dockerfile:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;node:16-bullseye&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;LABEL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;prune&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mkdir&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/root/.aws
&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;files/config&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/root/.aws/config
&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;files/credentials&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/root/.aws/credentials

&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-y&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;python3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;python3-pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;python3-venv&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;screen&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;vim&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;python3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-m&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--upgrade&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-rf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/var/lib/apt/lists/*

&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;molecule&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;.0.1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ansible&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;.0.0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;ansible-lint&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;yamllint&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;molecule-plugins&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;ec2,docker,vagrant&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;boto3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;botocore&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;testinfra&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;pytest

&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;wget&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://download.docker.com/linux/static/stable/x86_64/docker-24.0.2.tgz&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tar&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;xvzf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;docker-24.0.2.tgz&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cp&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;docker/*&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/usr/bin&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;docker-*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;It&#39;s prepared for:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Working within an AWS environment&lt;/li&gt; &lt;li&gt;Run Ansible and molecule&lt;/li&gt; &lt;li&gt;Build dockers&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#build-a-docker-within-a-gitea-action&#34;&gt;Build a docker within a gitea action.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Assuming you&#39;re using the custom gitea_runner docker proposed above you can build and upload a docker to a registry with this action:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Publish Docker image&lt;/span&gt;

&lt;span class=&#34;s&#34;&gt;&#34;on&#34;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build-and-push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Checkout code&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://github.com/actions/checkout@v3&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Login to Docker Registry&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://github.com/docker/login-action@v2&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;registry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;my_registry.org&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;${{ secrets.REGISTRY_USERNAME }}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;${{ secrets.REGISTRY_PASSWORD }}&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Set up QEMU&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://github.com/docker/setup-qemu-action@v2&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Set up Docker Buildx&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://github.com/docker/setup-buildx-action@v2&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Extract metadata (tags, labels) for Docker&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;meta&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://github.com/docker/metadata-action@v4&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;images&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;my_registry.org/the_name_of_the_docker_to_build&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Build and push&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;docker/build-push-action@v2&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;platforms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;linux/amd64,linux/arm64&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;cache-from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;type=registry,ref=my_registry.org/the_name_of_the_docker_to_build:buildcache&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;cache-to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;type=registry,ref=my_registry.org/the_name_of_the_docker_to_build:buildcache,mode=max&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;${{ steps.meta.outputs.tags }}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;${{ steps.meta.outputs.labels }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;It uses a pair of nice features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Multi-arch builds&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/build/ci/github-actions/cache/&#34;&gt;Cache&lt;/a&gt; to speed up the builds&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;As it reacts to all events it will build and push:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;A tag with the branch name on each push to that branch&lt;/li&gt; &lt;li&gt;A tag with the tag on tag push&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#bump-the-version-of-a-repository-on-commits-on-master&#34;&gt;Bump the version of a repository on commits on master.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Create a SSH key for the CI to send commits to protected branches.&lt;/li&gt; &lt;li&gt;Upload the private key to a repo or organization secret called &lt;code&gt;DEPLOY_SSH_KEY&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Upload the public key to the repo configuration deploy keys&lt;/li&gt; &lt;li&gt; &lt;p&gt;Create the &lt;code&gt;bump.yaml&lt;/code&gt; file with the next contents:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Bump version&lt;/span&gt;

&lt;span class=&#34;s&#34;&gt;&#34;on&#34;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;branches&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;bump_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;!startsWith(github.event.head_commit.message,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;bump:&#39;)&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;Bump&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;changelog&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Check out&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;actions/checkout@v3&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Fetch all history&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Configure SSH&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;echo &#34;${{ secrets.DEPLOY_SSH_KEY }}&#34; &amp;gt; ~/.ssh/deploy_key&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;chmod 600 ~/.ssh/deploy_key&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;dos2unix ~/.ssh/deploy_key&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ssh-agent -a $SSH_AUTH_SOCK &amp;gt; /dev/null&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ssh-add ~/.ssh/deploy_key&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Bump the version&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;cz bump --changelog --no-verify&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Push changes&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;git remote add ssh git@gitea-production.cloud.icij.org:templates/ansible-role.git&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;git pull ssh main&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;git push ssh main&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;git push ssh --tags&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;It assumes that you have &lt;code&gt;cz&lt;/code&gt; (commitizen) and &lt;code&gt;dos2unix&lt;/code&gt; installed in your runner.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#skip-gitea-actions-job-on-changes-of-some-files&#34;&gt;Skip gitea actions job on changes of some files.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are some expensive CI pipelines that don&#39;t need to be run for example if you changed a line in the &lt;code&gt;README.md&lt;/code&gt;, to skip a pipeline on changes of certain files you can use the &lt;code&gt;paths-ignore&lt;/code&gt; directive:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Ansible Testing&lt;/span&gt;

&lt;span class=&#34;s&#34;&gt;&#34;on&#34;&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths-ignore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;meta/**&#39;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Makefile&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;README.md&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;renovate.json&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;CHANGELOG.md&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;.cz.toml&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;.gitea/workflows/**&#39;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Test&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The only downside is that if you set this pipeline as required in the branch protection, the merge button will look yellow instead of green when the pipeline is skipped.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/molecule/#molecule-doesn&#39;t-find-the-molecule.yaml-file&#34;&gt;Molecule doesn&#39;t find the &lt;code&gt;molecule.yaml&lt;/code&gt; file.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This is expected default behavior since Molecule searches for scenarios using the &lt;code&gt;molecule/*/molecule.yml&lt;/code&gt; glob. But if you would like to change the suffix to yaml, you can do that if you set the &lt;code&gt;MOLECULE_GLOB&lt;/code&gt; environment variable like this:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MOLECULE_GLOB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;molecule/*/molecule.yaml&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#using-paths-filter-custom-action&#34;&gt;Using &lt;code&gt;paths-filter&lt;/code&gt; custom action to skip job actions.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jobs:
  test:
    if: &#34;!startsWith(github.event.head_commit.message, &#39;bump:&#39;)&#34;
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the codebase
        uses: https://github.com/actions/checkout@v3

      - name: Check if we need to run the molecule tests
        uses: https://github.com/dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            molecule:
              - &#39;defaults/**&#39;
              - &#39;tasks/**&#39;
              - &#39;handlers/**&#39;
              - &#39;tasks/**&#39;
              - &#39;templates/**&#39;
              - &#39;molecule/**&#39;
              - &#39;requirements.yaml&#39;
              - &#39;.github/workflows/tests.yaml&#39;

      - name: Run Molecule tests
        if: steps.filter.outputs.molecule == &#39;true&#39;
        run: make molecule
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can find more examples on how to use &lt;code&gt;paths-filter&lt;/code&gt; &lt;a href=&#34;https://github.com/dorny/paths-filter#examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/molecule/#get-variables-from-the-environment&#34;&gt;Get variables from the environment.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can configure your &lt;code&gt;molecule.yaml&lt;/code&gt; file to read variables from the environment with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;provisioner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ansible&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;inventory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;group_vars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;my_secret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;${MY_SECRET}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;It&#39;s useful to have a task that checks if this secret exists:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Verify that the secret is set&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;Please&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;my_secret:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;MY_SECRET=$(pass&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;my_secret)&#39;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run_once&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;my_secret == None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;In the CI you can set it as a secret in the repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/#run-jobs-if-other-jobs-failed&#34;&gt;Run jobs if other jobs failed.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This is useful to send notifications if any of the jobs failed.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/go-gitea/gitea/issues/23725&#34;&gt;Right now&lt;/a&gt; you can&#39;t run a job if other jobs fail, all you can do is add a last step on each workflow to do the notification on failure:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Send mail&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;failure()&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;https://github.com/dawidd6/action-send-mail@v3&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;${{ secrets.MAIL_TO }}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Gitea &amp;lt;gitea@hostname&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;${{ gitea.repository }} ${{gitea.workflow}} ${{ job.status }}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;priority&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;high&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;convert_markdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html_body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;### Job ${{ job.status }}&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;${{ github.repository }}: [${{ github.ref }}@${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/actions)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;helmfile&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dotdrop/&#34;&gt;Helmfile&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#yaml-templates-in-go-templates&#34;&gt;Troubleshoot Yaml templates in go templates.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you are using a &lt;code&gt;values.yaml.gotmpl&lt;/code&gt; file you won&#39;t be able to use &lt;code&gt;{{ whatever }}&lt;/code&gt;. The solution is to extract that part to a yaml file and include it in the go template. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;values.yaml.gotmpl&lt;/code&gt;:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;metrics:
serviceMonitor:
  enabled: true
  annotations:
  additionalLabels:
    release: prometheus-operator

{{ readFile &#34;prometheus_rules.yaml&#34; }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;prometheus_rules.yaml&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;prometheusRule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;additionalLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;release&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;prometheus-operator&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;VeleroBackupPartialFailures&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;annotations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Velero backup {{ $labels.schedule }} has {{ $value | humanizePercentage }} partialy failed backups.&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;expr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;increase(velero_backup_partial_failure_total{schedule!=&#34;&#34;}[1h]) &amp;gt; 0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;15m&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;severity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;warning&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce dotdrop.&lt;/p&gt; &lt;p&gt;The main idea of &lt;a href=&#34;https://deadc0de.re/dotdrop/&#34;&gt;Dotdrop&lt;/a&gt;is to have the ability to store each dotfile only once and deploy them with a different content on different hosts/setups. To achieve this, it uses a templating engine that allows to specify, during the dotfile installation with dotdrop, based on a selected profile, how (with what content) each dotfile will be installed.&lt;/p&gt; &lt;p&gt;What I like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Popular&lt;/li&gt; &lt;li&gt;Actively maintained&lt;/li&gt; &lt;li&gt;Written in Python&lt;/li&gt; &lt;li&gt;Uses jinja2&lt;/li&gt; &lt;li&gt;Has a nice to read config file&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;What I don&#39;t like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://dotdrop.readthedocs.io/en/latest/usage/#update-dotfiles&#34;&gt;Updating dotfiles doesn&#39;t look as smooth as with chezmoi&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Uses &lt;code&gt;{{@@ @@}}&lt;/code&gt; instead of &lt;code&gt;{{ }}&lt;/code&gt; :S&lt;/li&gt; &lt;li&gt;Doesn&#39;t support &lt;code&gt;pass&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Not easy way to edit the files.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;terraform&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/&#34;&gt;Terraform&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to install it.&lt;/p&gt; &lt;p&gt;Go to the &lt;a href=&#34;https://github.com/hashicorp/terraform/releases&#34;&gt;releases page&lt;/a&gt;, download the latest release, decompress it and add it to your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#sensitive-information&#34;&gt;How to store sensitive information in terraform.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;One of the most common questions we get about using Terraform to manage infrastructure as code is how to handle secrets such as passwords, API keys, and other sensitive data.&lt;/p&gt; &lt;p&gt;In the article you&#39;ll find how to store your sensitive data in:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#sensitive-information-in-the-terraform-state&#34;&gt;The Terraform state&lt;/a&gt;: Using the state backend encryption&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#sensitive-information-in-the-terraform-source-code&#34;&gt;The Terraform source code&lt;/a&gt;: Using&lt;code&gt;sops&lt;/code&gt; and &lt;code&gt;gpg&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#create-a-list-of-resources-based-on-a-list-of-strings&#34;&gt;Create a list of resources based on a list of strings.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;variable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;subnet_ids&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;aws_instance&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;server&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;  # Create one instance for each subnet&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var.subnet_ids&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ami&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;ami-a1b2c3d4&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;instance_type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;t2.micro&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;subnet_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var.subnet_ids[count.index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Server ${count.index}&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to use this generated list on another resource extracting for example the id you can use&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;aws_instance.server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dotfiles&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dotfiles/&#34;&gt;Dotfiles&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce dotfiles.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Dotfiles&#34;&gt;User-specific application configuration is traditionally stored in so called dotfiles&lt;/a&gt; (files whose filename starts with a dot). It is common practice to track dotfiles with a version control system such as Git to keep track of changes and synchronize dotfiles across various hosts. There are various approaches to managing your dotfiles (e.g. directly tracking dotfiles in the home directory v.s. storing them in a subdirectory and symlinking/copying/generating files with a shell script or a dedicated tool).&lt;/p&gt; &lt;p&gt;Note: this is not meant to configure files that are outside your home directory, use Ansible for that use case.&lt;/p&gt; &lt;p&gt;You can find different ways to track your dotfiles:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dotfiles/#tracking-dotfiles-directly-with-git&#34;&gt;Tracking dotfiles directly with Git&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dotfiles/#using-Ansible-to-manage-the-dotfiles&#34;&gt;Using Ansible to manage the dotfiles&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dotfiles/#tools&#34;&gt;Using dotfiles specific tools, and an analysis of the state of the art&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-solutions&#34;&gt;Infrastructure Solutions&lt;/h3&gt; &lt;h4 id=&#34;velero&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/velero/&#34;&gt;Velero&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce velero.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://velero.io/&#34;&gt;Velero&lt;/a&gt; is an open source tool to safely backup and restore, perform disaster recovery, and migrate Kubernetes cluster resources and persistent volumes.&lt;/p&gt; &lt;p&gt;In the article you&#39;ll also find how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/velero/#client-installation&#34;&gt;Install the client&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/velero/#server-configuration&#34;&gt;Configure the server&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/velero/#monitorization&#34;&gt;Monitor it with Prometheus&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/velero/#restore-backups&#34;&gt;Restore backups&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And an &lt;a href=&#34;https://lyz-code.github.io/blue-book/velero/#overview-of-velero&#34;&gt;overview of the whole application infrastructure&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/velero/#create-a-backup&#34;&gt;Create a backup.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you already have schedules select the one you want to use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;velero&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;schedules&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;get
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then create the backup with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;velero&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;backup&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;create&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--from-schedule&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;selected-schedule
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can see the other options to create backups in &lt;code&gt;velero backup create --help&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;aws-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl_installation/&#34;&gt;AWS Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Recommend to use distro repos when installing.&lt;/p&gt; &lt;p&gt;It&#39;s available now in debian&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/aws/aws/#stop-an-ec2-instance&#34;&gt;Stop an EC2 instance.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;aws&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;stop-instances&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--instance-ids&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;i-xxxxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/aws_snippets/#get-ec2-metadata-from-within-the-instance&#34;&gt;Get EC2 metadata from within the instance.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The quickest way to fetch or retrieve EC2 instance metadata from within a running EC2 instance is to log in and run the command:&lt;/p&gt; &lt;p&gt;Fetch metadata from IPv4:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;http://169.254.169.254/latest/dynamic/instance-identity/document
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can also download the &lt;code&gt;ec2-metadata&lt;/code&gt; tool to get the info:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;http://s3.amazonaws.com/ec2metadata/ec2-metadata

chmod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;+x&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec2-metadata

./ec2-metadata&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: [Remove the lock screen in ubuntu.](../aws_snippets.md#invalidate-a-cloudfront-distribution&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;aws-cloudfront-create-invalidation---paths-&lt;span class=&#34;s2&#34;&gt;&#34;/pages/about&#34;&lt;/span&gt;---distribution-id-my-distribution-id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;feat(bash_snippets)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Create the `/usr/share/glib-2.0/schemas/90_ubuntu-settings.gschema.override` file with the next content:

```ini
[org.gnome.desktop.screensaver]
lock-enabled = false
[org.gnome.settings-daemon.plugins.power]
idle-dim = false
```

Then reload the schemas with:

```bash
sudo glib-compile-schemas /usr/share/glib-2.0/schemas/
```
&lt;/code&gt;&lt;/pre&gt; &lt;h4 id=&#34;kubectl-commands&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl_commands/&#34;&gt;Kubectl Commands&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl_commands/#show-the-remaining-space-of-a-persistent-volume-claim&#34;&gt;Show the remaining space of a persistent volume claim.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Either look it in Prometheus or run in the pod that has the PVC mounted:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-n&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;namespace&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;pod-name&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;df&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-ah
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You may need to use &lt;code&gt;kubectl get pod &amp;lt;pod-name&amp;gt; -o yaml&lt;/code&gt; to know what volume is mounted where.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl_commands/#run-a-pod-in-a-defined-node&#34;&gt;Run a pod in a defined node.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Get the node hostnames with &lt;code&gt;kubectl get nodes&lt;/code&gt;, then override the node with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;run&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mypod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--image&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ubuntu:18.04&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--overrides&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;{&#34;apiVersion&#34;: &#34;v1&#34;, &#34;spec&#34;: {&#34;nodeSelector&#34;: { &#34;kubernetes.io/hostname&#34;: &#34;my-node.internal&#34; }}}&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--command&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sleep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100000000000000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;tools&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_tools/&#34;&gt;Tools&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_tools/#tried&#34;&gt;Recommend rke2 over k3s.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A friend told me that it works better.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;Continuous Integration&lt;/h3&gt; &lt;h4 id=&#34;mypy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/&#34;&gt;Mypy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/#module-&#34; title=&#39;typing&#34;-has-no-attribute-&#34;annotated&#39;&gt;Module &#34;typing&#34; has no attribute &#34;Annotated&#34;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This one happens only because &lt;code&gt;annotated&lt;/code&gt; is not available in python &amp;lt; 3.9.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;try:
    # mypy is complaining that it can&#39;t import it, but it&#39;s solved below
    from typing import Annotated # type: ignore
except ImportError:
    from typing_extensions import Annotated
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;drone&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/drone/&#34;&gt;Drone&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/drone/#create-the-administrators&#34;&gt;Create the administrators.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When you configure the Drone server you can create the initial administrative account by passing the below environment variable, which defines the account username (e.g. github handle) and admin flag set to true.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;DRONE_USER_CREATE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;username:octocat,admin:true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you need to grant the primary administrative role to an existing user, you can provide an existing username. Drone will update the account and grant administrator role on server restart.&lt;/p&gt; &lt;p&gt;You can create administrator accounts using the command line tools. Please see the command line tools documentation for installation instructions.&lt;/p&gt; &lt;p&gt;Create a new administrator account:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;drone&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;octocat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Or grant the administrator role to existing accounts:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;drone&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;octocat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--admin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/drone/#linter:-untrusted-repositories-cannot-mount-host-volumes&#34;&gt;Linter: untrusted repositories cannot mount host volumes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Thats because the &lt;a href=&#34;https://docs.drone.io/pipeline/docker/syntax/volumes/host/&#34;&gt;repository is not trusted&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;You have to set the trust as an admin of drone through the GUI or through the CLI with&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;drone&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;repo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--trusted&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;your/repo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you&#39;re not an admin the above command returns a success but you&#39;ll see that the trust has not changed if you run&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;drone&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;repo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;info&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;your/repo&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;argocd&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/argocd/&#34;&gt;ArgoCD&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce ArgoCD.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/&#34;&gt;Argo CD&lt;/a&gt; is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt; &lt;p&gt;Argo CD follows the GitOps pattern of using Git repositories as the source of truth for defining the desired application state. Kubernetes manifests can be specified in several ways:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;kustomize applications&lt;/li&gt; &lt;li&gt;helm charts&lt;/li&gt; &lt;li&gt;jsonnet files&lt;/li&gt; &lt;li&gt;Plain directory of YAML/json manifests&lt;/li&gt; &lt;li&gt;Any custom config management tool configured as a config management plugin, for example with &lt;a href=&#34;#using-helmfile&#34;&gt;helmfile&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Argo CD automates the deployment of the desired application states in the specified target environments. Application deployments can track updates to branches, tags, or pinned to a specific version of manifests at a Git commit. See tracking strategies for additional details about the different &lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/user-guide/tracking_strategies/&#34;&gt;tracking strategies available&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;shellcheck&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/shellcheck/&#34;&gt;Shellcheck&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce shellcheck.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.shellcheck.net/&#34;&gt;Shellcheck&lt;/a&gt; is a linting tool to finds bugs in your shell scripts.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/koalaman/shellcheck#installing&#34;&gt;Installation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;shellcheck
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;strong&gt;Errors&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.shellcheck.net/wiki/SC2143&#34;&gt;SC2143: Use &lt;code&gt;grep -q&lt;/code&gt; instead of comparing output with &lt;code&gt;[ -n .. ]&lt;/code&gt;.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Problematic code:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;IMG[0-9]&#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Images found&#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Correct code:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-q&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;IMG[0-9]&#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Images found&#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Rationale:&lt;/p&gt; &lt;p&gt;The problematic code has to iterate the entire directory and read all matching lines into memory before making a decision.&lt;/p&gt; &lt;p&gt;The correct code is cleaner and stops at the first matching line, avoiding both iterating the rest of the directory and reading data into memory.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;copier&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/copier/&#34;&gt;copier&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce copier.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/copier-org/copier&#34;&gt;Copier&lt;/a&gt; is a library and CLI app for rendering project templates.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Works with local paths and Git URLs.&lt;/li&gt; &lt;li&gt;Your project can include any file and Copier can dynamically replace values in any kind of text file.&lt;/li&gt; &lt;li&gt;It generates a beautiful output and takes care of not overwriting existing files unless instructed to do so.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This long article covers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/copier/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/copier/#basic-concepts&#34;&gt;Basic concepts&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/copier/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;cruft&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/&#34;&gt;cruft&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Suggest to use copier instead.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/copier-org/copier&#34;&gt;copier&lt;/a&gt; looks a more maintained solution nowadays.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;letsencrypt&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/letsencrypt/&#34;&gt;letsencrypt&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce letsencrypt.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Letsencrypt&lt;/a&gt; is a free, automated, and open certificate authority brought to you by the nonprofit Internet Security Research Group (ISRG). Basically it gives away SSL certificates, which are required to configure webservers to use HTTPS instead of HTTP for example.&lt;/p&gt; &lt;p&gt;In the article you can also find:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/letsencrypt/#configure-a-wildcard-dns-when-the-provider-is-not-supported&#34;&gt;How to configure a wildcard dns when the provider is not supported&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;storage&#34;&gt;Storage&lt;/h3&gt; &lt;h4 id=&#34;openzfs-storage-planning&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/zfs_storage_planning/&#34;&gt;OpenZFS storage planning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce ZFS storage planning.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Analyze the Exos X18 of 16TB disk.&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Specs&lt;/th&gt; &lt;th&gt;IronWolf&lt;/th&gt; &lt;th&gt;IronWolf Pro&lt;/th&gt; &lt;th&gt;Exos 7E8 8TB&lt;/th&gt; &lt;th&gt;Exos 7E10 8TB&lt;/th&gt; &lt;th&gt;Exos X18 16TB&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Technology&lt;/td&gt; &lt;td&gt;CMR&lt;/td&gt; &lt;td&gt;CMR&lt;/td&gt; &lt;td&gt;CMR&lt;/td&gt; &lt;td&gt;SMR&lt;/td&gt; &lt;td&gt;CMR&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Bays&lt;/td&gt; &lt;td&gt;1-8&lt;/td&gt; &lt;td&gt;1-24&lt;/td&gt; &lt;td&gt;?&lt;/td&gt; &lt;td&gt;?&lt;/td&gt; &lt;td&gt;?&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Capacity&lt;/td&gt; &lt;td&gt;1-12TB&lt;/td&gt; &lt;td&gt;2-20TB&lt;/td&gt; &lt;td&gt;8TB&lt;/td&gt; &lt;td&gt;8TB&lt;/td&gt; &lt;td&gt;16 TB&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RPM&lt;/td&gt; &lt;td&gt;5,400 RPM (3-6TB)&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RPM&lt;/td&gt; &lt;td&gt;5,900 RPM (1-3TB)&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RPM&lt;/td&gt; &lt;td&gt;7,200 RPM (8-12TB)&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;td&gt;7200 RPM&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Speed&lt;/td&gt; &lt;td&gt;180MB/s (1-12TB)&lt;/td&gt; &lt;td&gt;214-260MB/s (4-18TB)&lt;/td&gt; &lt;td&gt;249 MB/s&lt;/td&gt; &lt;td&gt;255 MB/s&lt;/td&gt; &lt;td&gt;258 MB/s&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cache&lt;/td&gt; &lt;td&gt;64MB (1-4TB)&lt;/td&gt; &lt;td&gt;256 MB&lt;/td&gt; &lt;td&gt;256 MB&lt;/td&gt; &lt;td&gt;256 MB&lt;/td&gt; &lt;td&gt;256 MB&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Cache&lt;/td&gt; &lt;td&gt;256MB (3-12TB)&lt;/td&gt; &lt;td&gt;256 MB&lt;/td&gt; &lt;td&gt;256 MB&lt;/td&gt; &lt;td&gt;256 MB&lt;/td&gt; &lt;td&gt;256 MB&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Power Consumption&lt;/td&gt; &lt;td&gt;10.1 W&lt;/td&gt; &lt;td&gt;10.1 W&lt;/td&gt; &lt;td&gt;12.81 W&lt;/td&gt; &lt;td&gt;11.03 W&lt;/td&gt; &lt;td&gt;9.31 W&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Power Consumption Rest&lt;/td&gt; &lt;td&gt;7.8 W&lt;/td&gt; &lt;td&gt;7.8 W&lt;/td&gt; &lt;td&gt;7.64 W&lt;/td&gt; &lt;td&gt;7.06 W&lt;/td&gt; &lt;td&gt;5.08 W&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Workload&lt;/td&gt; &lt;td&gt;180TB/yr&lt;/td&gt; &lt;td&gt;300TB/yr&lt;/td&gt; &lt;td&gt;550TB/yr&lt;/td&gt; &lt;td&gt;550TB/yr&lt;/td&gt; &lt;td&gt;550TB/yr&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;MTBF&lt;/td&gt; &lt;td&gt;1 million&lt;/td&gt; &lt;td&gt;1 million&lt;/td&gt; &lt;td&gt;2 millions&lt;/td&gt; &lt;td&gt;2 millions&lt;/td&gt; &lt;td&gt;2.5 millions&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Warranty&lt;/td&gt; &lt;td&gt;3 years&lt;/td&gt; &lt;td&gt;5 years&lt;/td&gt; &lt;td&gt;5 years&lt;/td&gt; &lt;td&gt;5 years&lt;/td&gt; &lt;td&gt;5 years&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Price&lt;/td&gt; &lt;td&gt;From $60 (2022)&lt;/td&gt; &lt;td&gt;From $83 (2022)&lt;/td&gt; &lt;td&gt;249$ (2022)&lt;/td&gt; &lt;td&gt;249$ (2022)&lt;/td&gt; &lt;td&gt;249$ (2023)&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;openzfs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sanoid/&#34;&gt;OpenZFS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#usage&#34;&gt;How to create a pool and datasets.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#configure-nfs&#34;&gt;Configure NFS.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With ZFS you can share a specific dataset via NFS. If for whatever reason the dataset does not mount, then the export will not be available to the application, and the NFS client will be blocked.&lt;/p&gt; &lt;p&gt;You still must install the necessary daemon software to make the share available. For example, if you wish to share a dataset via NFS, then you need to install the NFS server software, and it must be running. Then, all you need to do is flip the sharing NFS switch on the dataset, and it will be immediately available.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#backup&#34;&gt;Backup.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Please remember that &lt;a href=&#34;https://serverfault.com/questions/2888/why-is-raid-not-a-backup&#34;&gt;RAID is not a backup&lt;/a&gt;, it guards against one kind of hardware failure. There&#39;s lots of failure modes that it doesn&#39;t guard against though:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;File corruption&lt;/li&gt; &lt;li&gt;Human error (deleting files by mistake)&lt;/li&gt; &lt;li&gt;Catastrophic damage (someone dumps water onto the server)&lt;/li&gt; &lt;li&gt;Viruses and other malware&lt;/li&gt; &lt;li&gt;Software bugs that wipe out data&lt;/li&gt; &lt;li&gt;Hardware problems that wipe out data or cause hardware damage (controller malfunctions, firmware bugs, voltage spikes, ...)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;That&#39;s why you still need to make backups.&lt;/p&gt; &lt;p&gt;ZFS has the builtin feature to make snapshots of the pool. A snapshot is a first class read-only filesystem. It is a mirrored copy of the state of the filesystem at the time you took the snapshot. They are persistent across reboots, and they don&#39;t require any additional backing store; they use the same storage pool as the rest of your data.&lt;/p&gt; &lt;p&gt;If you remember &lt;a href=&#34;https://pthree.org/2012/12/14/zfs-administration-part-ix-copy-on-write/&#34;&gt;ZFS&#39;s awesome nature of copy-on-write&lt;/a&gt; filesystems, you will remember the discussion about Merkle trees. A ZFS snapshot is a copy of the Merkle tree in that state, except we make sure that the snapshot of that Merkle tree is never modified.&lt;/p&gt; &lt;p&gt;Creating snapshots is near instantaneous, and they are cheap. However, once the data begins to change, the snapshot will begin storing data. If you have multiple snapshots, then multiple deltas will be tracked across all the snapshots. However, depending on your needs, snapshots can still be exceptionally cheap.&lt;/p&gt; &lt;p&gt;The article also includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#zfs-snapshot-lifecycle-management&#34;&gt;ZFS snapshot lifecycle management&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#restore-a-backup&#34;&gt;Restore a backup&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Sanoid.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jimsalterjrs/sanoid/&#34;&gt;Sanoid&lt;/a&gt; is the most popular tool right now, with it you can create, automatically thin, and monitor snapshots and pool health from a single eminently human-readable TOML config file.&lt;/p&gt; &lt;p&gt;The article includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sanoid/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sanoid/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Pros and cons&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sanoid/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sanoid/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#get-compress-ratio-of-a-filesystem&#34;&gt;Get compress ratio of a filesystem.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;compressratio&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Use the recursive flag.&lt;/p&gt; &lt;p&gt;&lt;code&gt;recursive&lt;/code&gt; is not set by default, so the dataset&#39;s children won&#39;t be backed up unless you set this option.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; [main/backup]
   use_template = daily
   recursive = yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#see-how-much-space-do-your-snapshots-consume&#34;&gt;See how much space do your snapshots consume.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When a snapshot is created, its space is initially shared between the snapshot and the file system, and possibly with previous snapshots. As the file system changes, space that was previously shared becomes unique to the snapshot, and thus is counted in the snapshot’s &lt;code&gt;used&lt;/code&gt; property.&lt;/p&gt; &lt;p&gt;Additionally, deleting snapshots can increase the amount of space that is unique for use by other snapshots.&lt;/p&gt; &lt;p&gt;Note: The value for a snapshot’s space referenced property is the same as that for the file system when the snapshot was created.&lt;/p&gt; &lt;p&gt;You can display the amount of space that is consumed by snapshots and descendant file systems by using the &lt;code&gt;zfs list -o space&lt;/code&gt; command.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;NAME&lt;span class=&#34;w&#34;&gt;                             &lt;/span&gt;AVAIL&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;USED&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;USEDSNAP&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;USEDDS&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;USEDREFRESERV&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;USEDCHILD
rpool&lt;span class=&#34;w&#34;&gt;                            &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.2G&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;.16G&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;.52M&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;.15G
rpool/ROOT&lt;span class=&#34;w&#34;&gt;                       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.2G&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.06G&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;31K&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.06G
rpool/ROOT/solaris&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.2G&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;.06G&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;55&lt;/span&gt;.0M&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;.78G&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;224M
rpool/ROOT/solaris@install&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;55&lt;/span&gt;.0M&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;-
rpool/ROOT/solaris/var&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.2G&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;224M&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;.51M&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;221M&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rpool/ROOT/solaris/var@install&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;.51M&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;From this output, you can see the amount of space that is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;AVAIL: The amount of space available to the dataset and all its children, assuming that there is no other activity in the pool.&lt;/li&gt; &lt;li&gt; &lt;p&gt;USED: The amount of space consumed by this dataset and all its descendants. This is the value that is checked against this dataset&#39;s quota and reservation. The space used does not include this dataset&#39;s reservation, but does take into account the reservations of any descendants datasets.&lt;/p&gt; &lt;p&gt;The used space of a snapshot is the space referenced exclusively by this snapshot. If this snapshot is destroyed, the amount of &lt;code&gt;used&lt;/code&gt; space will be freed. Space that is shared by multiple snapshots isn&#39;t accounted for in this metric. * USEDSNAP: Space being consumed by snapshots of each data set * USEDDS: Space being used by the dataset itself * USEDREFRESERV: Space being used by a refreservation set on the dataset that would be freed if it was removed. * USEDCHILD: Space being used by the children of this dataset.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Other space properties are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;LUSED: The amount of space that is &#34;logically&#34; consumed by this dataset and all its descendents. It ignores the effect of &lt;code&gt;compression&lt;/code&gt; and &lt;code&gt;copies&lt;/code&gt; properties, giving a quantity closer to the amount of data that aplication ssee. However it does include space consumed by metadata.&lt;/li&gt; &lt;li&gt;REFER: The amount of data that is accessible by this dataset, which may or may not be shared with other dataserts in the pool. When a snapshot or clone is created, it initially references the same amount of space as the filesystem or snapshot it was created from, since its contents are identical.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#rename-or-move-a-dataset&#34;&gt;Rename or move a dataset.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;NOTE: if you want to rename the topmost dataset look at &lt;a href=&#34;#rename-the-topmost-dataset&#34;&gt;rename the topmost dataset&lt;/a&gt; instead. File systems can be renamed by using the &lt;code&gt;zfs rename&lt;/code&gt; command. You can perform the following operations:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Change the name of a file system.&lt;/li&gt; &lt;li&gt;Relocate the file system within the ZFS hierarchy.&lt;/li&gt; &lt;li&gt;Change the name of a file system and relocate it within the ZFS hierarchy.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The following example uses the &lt;code&gt;rename&lt;/code&gt; subcommand to rename of a file system from &lt;code&gt;kustarz&lt;/code&gt; to &lt;code&gt;kustarz_old&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rename&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/kustarz&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/kustarz_old
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The following example shows how to use zfs &lt;code&gt;rename&lt;/code&gt; to relocate a file system:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rename&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/maybee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/ws/maybee
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;In this example, the &lt;code&gt;maybee&lt;/code&gt; file system is relocated from &lt;code&gt;tank/home&lt;/code&gt; to &lt;code&gt;tank/ws&lt;/code&gt;. When you relocate a file system through rename, the new location must be within the same pool and it must have enough disk space to hold this new file system. If the new location does not have enough disk space, possibly because it has reached its quota, rename operation fails.&lt;/p&gt; &lt;p&gt;The rename operation attempts an unmount/remount sequence for the file system and any descendent file systems. The rename command fails if the operation is unable to unmount an active file system. If this problem occurs, you must forcibly unmount the file system.&lt;/p&gt; &lt;p&gt;You&#39;ll loose the snapshots though, as explained below.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#rename-the-topmost-dataset&#34;&gt;Rename the topmost dataset.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want to rename the topmost dataset you &lt;a href=&#34;https://github.com/openzfs/zfs/issues/4681&#34;&gt;need to rename the pool too&lt;/a&gt; as these two are tied.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;status&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-v

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;pool:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tets
&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;state:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ONLINE
&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;scrub:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;none&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;requested
config:

&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;NAME&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;STATE&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;READ&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;WRITE&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CKSUM
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;tets&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;c0d1&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;c1d0&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;c1d1&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;

errors:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;No&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;known&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;errors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To fix this, first export the pool:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tets
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;And then imported it with the correct name:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;import&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tets&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;After the import completed, the pool contains the correct name:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;status&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-v

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;pool:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;state:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ONLINE
&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;scrub:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;none&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;requested
config:

&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;NAME&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;STATE&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;READ&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;WRITE&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CKSUM
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;c0d1&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;c1d0&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;c1d1&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;

errors:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;No&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;known&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;data&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;errors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Now you may need to fix the ZFS mountpoints for each dataset&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;mountpoint&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;/opt/zones/[Newmountpoint]&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;ZFSPOOL/&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;ROOTor&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;other&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#rename-or-move-snapshots&#34;&gt;Rename or move snapshots.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If the dataset has snapshots you need to rename them too. They must be renamed within the same pool and dataset from which they were created though. For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rename&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/cindys@083006&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/cindys@today
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;In addition, the following shortcut syntax is equivalent to the preceding syntax:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rename&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/cindys@083006&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;today
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The following snapshot rename operation is not supported because the target pool and file system name are different from the pool and file system where the snapshot was created:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rename&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/cindys@today&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pool/home/cindys@saturday
cannot&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rename&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;pool/home/cindys@today&#39;&lt;/span&gt;:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;snapshots&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;must&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;be&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;part&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;of&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;same
dataset
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can recursively rename snapshots by using the &lt;code&gt;zfs rename -r&lt;/code&gt; command. For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;list
NAME&lt;span class=&#34;w&#34;&gt;                         &lt;/span&gt;USED&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;AVAIL&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;REFER&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;MOUNTPOINT
users&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;270K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;22K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users
users/home&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;76K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;22K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users/home
users/home@yesterday&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;22K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
users/home/markm&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users/home/markm
users/home/markm@yesterday&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
users/home/marks&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users/home/marks
users/home/marks@yesterday&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
users/home/neil&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users/home/neil
users/home/neil@yesterday&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rename&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;users/home@yesterday&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;@2daysago
$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;list&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;users/home
NAME&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;USED&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;AVAIL&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;REFER&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;MOUNTPOINT
users/home&lt;span class=&#34;w&#34;&gt;                   &lt;/span&gt;76K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;22K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users/home
users/home@2daysago&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;22K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
users/home/markm&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users/home/markm
users/home/markm@2daysago&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
users/home/marks&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users/home/marks
users/home/marks@2daysago&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
users/home/neil&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;.5G&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/users/home/neil
users/home/neil@2daysago&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;18K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#see-the-differences-between-two-backups&#34;&gt;See the differences between two backups.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To identify the differences between two snapshots, use syntax similar to the following:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;diff&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/tim@snap1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank/home/tim@snap2
M&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;/tank/home/tim/
+&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;/tank/home/tim/fileB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The following table summarizes the file or directory changes that are identified by the &lt;code&gt;zfs diff&lt;/code&gt; command.&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;File or Directory Change&lt;/th&gt; &lt;th&gt;Identifier&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;File or directory has been modified or file or directory link has changed&lt;/td&gt; &lt;td&gt;M&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;File or directory is present in the older snapshot but not in the more recent snapshot&lt;/td&gt; &lt;td&gt;—&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;File or directory is present in the more recent snapshot but not in the older snapshot&lt;/td&gt; &lt;td&gt;+&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;File or directory has been renamed&lt;/td&gt; &lt;td&gt;R&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#create-a-cold-backup-of-a-series-of-datasets&#34;&gt;Create a cold backup of a series of datasets.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;ve used the &lt;code&gt;-o keyformat=raw -o keylocation=file:///etc/zfs/keys/home.key&lt;/code&gt; arguments to encrypt your datasets you can&#39;t use a &lt;code&gt;keyformat=passphase&lt;/code&gt; encryption on the cold storage device. You need to copy those keys on the disk. One way of doing it is to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Create a 100M LUKS partition protected with a passphrase where you store the keys.&lt;/li&gt; &lt;li&gt;The rest of the space is left for a partition for the zpool.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#clear-a-permanent-zfs-error-in-a-healthy-pool&#34;&gt;Clear a permanent ZFS error in a healthy pool.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes when you do a &lt;code&gt;zpool status&lt;/code&gt; you may see that the pool is healthy but that there are &#34;Permanent errors&#34; that may point to files themselves or directly to memory locations.&lt;/p&gt; &lt;p&gt;You can read &lt;a href=&#34;https://github.com/openzfs/zfs/discussions/9705&#34;&gt;this long discussion&lt;/a&gt; on what does these permanent errors mean, but what solved the issue for me was to run a new scrub&lt;/p&gt; &lt;p&gt;&lt;code&gt;zpool scrub my_pool&lt;/code&gt;&lt;/p&gt; &lt;p&gt;It takes a long time to run, so be patient.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#zfs-pool-is-in-suspended-mode&#34;&gt;ZFS pool is in suspended mode.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Probably because you&#39;ve unplugged a device without unmounting it.&lt;/p&gt; &lt;p&gt;If you want to remount the device &lt;a href=&#34;https://github.com/openzfsonosx/zfs/issues/104#issuecomment-30344347&#34;&gt;you can follow these steps&lt;/a&gt; to symlink the new devfs entries to where zfs thinks the vdev is. That way you can regain access to the pool without a reboot.&lt;/p&gt; &lt;p&gt;So if zpool status says the vdev is /dev/disk2s1, but the reattached drive is at disk4, then do the following:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;disk2s1
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ln&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;disk4s1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;disk2s1
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;clear&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-F&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;WD_1TB
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;WD_1TB
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;disk2s1
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;import&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;WD_1TB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you don&#39;t care about the zpool anymore, sadly your only solution is to &lt;a href=&#34;https://github.com/openzfs/zfs/issues/5242&#34;&gt;reboot the server&lt;/a&gt;. Real ugly, so be careful when you umount zpools.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sanoid/#prune-snapshots&#34;&gt;Prune snapshots.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want to manually prune the snapshots after you tweaked &lt;code&gt;sanoid.conf&lt;/code&gt; you can run:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sanoid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--prune-snapshots
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sanoid/#send-encrypted-backups-to-a-encrypted-dataset&#34;&gt;Send encrypted backups to a encrypted dataset.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;syncoid&lt;/code&gt;&#39;s default behaviour is to create the destination dataset without encryption so the snapshots are transferred and can be read without encryption. You can check this with the &lt;code&gt;zfs get encryption,keylocation,keyformat&lt;/code&gt; command both on source and destination.&lt;/p&gt; &lt;p&gt;To prevent this from happening you have to [pass the &lt;code&gt;--sendoptions=&#39;w&#39;](https://github.com/jimsalterjrs/sanoid/issues/548) to&lt;/code&gt;syncoid&lt;code&gt;so that it tells zfs to send a raw stream. If you do so, you also need to [transfer the key file](https://github.com/jimsalterjrs/sanoid/issues/648) to the destination server so that it can do a&lt;/code&gt;zfs loadkey` and then mount the dataset. For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;server-host:$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;list&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem
NAME&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;USED&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;AVAIL&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;REFER&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;MOUNTPOINT
server_data&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;232M&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;38&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;230M&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/var/server_data
server_data/log&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;111K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;38&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;111K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/var/server_data/log
server_data/mail&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;111K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;38&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;111K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/var/server_data/mail
server_data/nextcloud&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;111K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;38&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;111K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/var/server_data/nextcloud
server_data/postgres&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;111K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;38&lt;/span&gt;.1G&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;111K&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/var/server_data/postgres

server-host:$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;keylocation&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/nextcloud
NAME&lt;span class=&#34;w&#34;&gt;                   &lt;/span&gt;PROPERTY&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;VALUE&lt;span class=&#34;w&#34;&gt;                                    &lt;/span&gt;SOURCE
server_data/nextcloud&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;keylocation&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;file:///root/zfs_dataset_nextcloud_pass&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt;

server-host:$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;syncoid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--recursive&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--skip-parent&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--sendoptions&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;w&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;root@192.168.122.94:backup_pool
INFO:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Sending&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;oldest&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;full&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;snapshot&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/log@autosnap_2021-06-18_18:33:42_yearly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;~&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;49&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;target&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem:
&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;.0KiB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:00:00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.79MiB/s&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[=================================================&lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt;                                                                                                  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;34&lt;/span&gt;%
INFO:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Updating&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;target&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;with&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;incremental&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/log@autosnap_2021-06-18_18:33:42_yearly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;...&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;syncoid_caedrium.com_2021-06-22:10:12:55&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;~&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
&lt;span class=&#34;m&#34;&gt;41&lt;/span&gt;.2KiB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:00:00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;78&lt;/span&gt;.4KiB/s&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[===================================================================================================================================================]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;270&lt;/span&gt;%
INFO:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Sending&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;oldest&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;full&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;snapshot&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/mail@autosnap_2021-06-18_18:33:42_yearly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;~&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;49&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;target&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem:
&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;.0KiB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:00:00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;921KiB/s&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[=================================================&lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt;                                                                                                  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;34&lt;/span&gt;%
INFO:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Updating&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;target&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;with&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;incremental&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/mail@autosnap_2021-06-18_18:33:42_yearly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;...&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;syncoid_caedrium.com_2021-06-22:10:13:14&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;~&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
&lt;span class=&#34;m&#34;&gt;41&lt;/span&gt;.2KiB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:00:00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;49&lt;/span&gt;.4KiB/s&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[===================================================================================================================================================]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;270&lt;/span&gt;%
INFO:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Sending&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;oldest&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;full&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;snapshot&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/nextcloud@autosnap_2021-06-18_18:33:42_yearly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;~&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;49&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;target&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem:
&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;.0KiB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:00:00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;870KiB/s&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[=================================================&lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt;                                                                                                  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;34&lt;/span&gt;%
INFO:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Updating&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;target&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;with&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;incremental&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/nextcloud@autosnap_2021-06-18_18:33:42_yearly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;...&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;syncoid_caedrium.com_2021-06-22:10:13:42&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;~&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
&lt;span class=&#34;m&#34;&gt;41&lt;/span&gt;.2KiB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:00:00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;.4KiB/s&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[===================================================================================================================================================]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;270&lt;/span&gt;%
INFO:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Sending&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;oldest&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;full&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;snapshot&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/postgres@autosnap_2021-06-18_18:33:42_yearly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;~&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;target&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem:
&lt;span class=&#34;m&#34;&gt;17&lt;/span&gt;.0KiB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:00:00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.36MiB/s&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[===============================================&lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt;                                                                                                    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;33&lt;/span&gt;%
INFO:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Updating&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;target&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filesystem&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;with&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;incremental&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;server_data/postgres@autosnap_2021-06-18_18:33:42_yearly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;...&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;syncoid_caedrium.com_2021-06-22:10:14:11&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;~&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;KB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;:
&lt;span class=&#34;m&#34;&gt;41&lt;/span&gt;.2KiB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:00:00&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;.9KiB/s&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[===================================================================================================================================================]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;270&lt;/span&gt;%

server-host:$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;scp&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/root/zfs_dataset_nextcloud_pass&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;192&lt;/span&gt;.168.122.94:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;backup-host:$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;keylocation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;file:///root/zfs_dataset_nextcloud_pass&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;backup_pool/nextcloud
backup-host:$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;load-key&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;backup_pool/nextcloud
backup-host:$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mount&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;backup_pool/nextcloud
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you also want to keep the &lt;code&gt;encryptionroot&lt;/code&gt; you need to &lt;a href=&#34;https://github.com/jimsalterjrs/sanoid/issues/614&#34;&gt;let zfs take care of the recursion instead of syncoid&lt;/a&gt;. In this case you can&#39;t use syncoid&#39;s stuff like &lt;code&gt;--exclude&lt;/code&gt; from the manpage of zfs:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-R, --replicate
   Generate a replication stream package, which will replicate the specified file system, and all descendent file systems, up to the named snapshot.  When received, all properties, snap‐
   shots, descendent file systems, and clones are preserved.

   If the -i or -I flags are used in conjunction with the -R flag, an incremental replication stream is generated.  The current values of properties, and current snapshot and file system
   names are set when the stream is received.  If the -F flag is specified when this stream is received, snapshots and file systems that do not exist on the sending side are destroyed.
   If the -R flag is used to send encrypted datasets, then -w must also be specified.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;In this case this should work:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/sbin/syncoid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--recursive&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--force-delete&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--sendoptions&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Rw&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zpool/backups&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs-recv@10.29.3.27:zpool/backups
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#repair-a-degraded-pool&#34;&gt;Repair a DEGRADED pool.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;First let’s offline the device we are going to replace:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;offline&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ata-WDC_WD2003FZEX-00SRLA0_WD-xxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Now let us have a look at the pool status.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;status

NAME&lt;span class=&#34;w&#34;&gt;                                            &lt;/span&gt;STATE&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;READ&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;WRITE&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CKSUM
tank0&lt;span class=&#34;w&#34;&gt;                                           &lt;/span&gt;DEGRADED&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;raidz2-1&lt;span class=&#34;w&#34;&gt;                                      &lt;/span&gt;DEGRADED&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWN180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWN180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWN180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-WDC_WD80EFZX-68UW8N0_xxxxxxxx&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWG180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWG180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-WDC_WD2003FZEX-00SRLA0_WD-xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;OFFLINE&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-ST4000VX007-2DT166_xxxxxxxx&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Sweet, the device is offline (last time it didn&#39;t show as offline for me, but the offline command returned a status code of 0).&lt;/p&gt; &lt;p&gt;Time to shut the server down and physically replace the disk.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;shutdown&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-h&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;When you start again the server, it’s time to instruct ZFS to replace the removed device with the disk we just installed.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;replace&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-WDC_WD2003FZEX-00SRLA0_WD-xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;/dev/disk/by-id/ata-TOSHIBA_HDWG180_xxxxxxxxxxxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;status&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tank0

pool:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;main
state:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;DEGRADED
status:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;One&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;or&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;more&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;devices&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;is&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;currently&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;being&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;resilvered.&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;The&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;will
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;possibly&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;degraded&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;state.
action:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Wait&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;the&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;resilver&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;complete.
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;scan:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;resilver&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;progress&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;since&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Fri&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Sep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;12&lt;/span&gt;:40:28&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2023&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;.00T&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;scanned&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;at&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;.85G/s,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;222G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;issued&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;at&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;380M/s,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;24&lt;/span&gt;.3T&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;total
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;54&lt;/span&gt;.7G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;resilvered,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.89%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;18&lt;/span&gt;:28:03&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;go
NAME&lt;span class=&#34;w&#34;&gt;                                              &lt;/span&gt;STATE&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;READ&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;WRITE&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;CKSUM
tank0&lt;span class=&#34;w&#34;&gt;                                             &lt;/span&gt;DEGRADED&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;raidz2-1&lt;span class=&#34;w&#34;&gt;                                        &lt;/span&gt;DEGRADED&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWN180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWN180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWN180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-WDC_WD80EFZX-68UW8N0_xxxxxxxx&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWG180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-TOSHIBA_HDWG180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;replacing-6&lt;span class=&#34;w&#34;&gt;                                   &lt;/span&gt;DEGRADED&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ata-WDC_WD2003FZEX-00SRLA0_WD-xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;OFFLINE&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;ata-TOSHIBA_HDWG180_xxxxxxxxxxxx&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;resilvering&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;ata-ST4000VX007-2DT166_xxxxxxxx&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The disk is replaced and getting resilvered (which may take a long time to run (18 hours in a 8TB disk in my case).&lt;/p&gt; &lt;p&gt;Once the resilvering is done; this is what the pool looks like.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;list

NAME&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;SIZE&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;ALLOC&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;FREE&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;EXPANDSZ&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;FRAG&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;CAP&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;DEDUP&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;HEALTH&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;ALTROOT
tank0&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;43&lt;/span&gt;.5T&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;33&lt;/span&gt;.0T&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.5T&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;.5T&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;75&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.00x&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;ONLINE&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to read other blogs that have covered the same topic check out &lt;a href=&#34;https://madaboutbrighton.net/articles/replace-disk-in-zfs-pool&#34;&gt;1&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Stop a ZFS scrub.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;scrub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;my_pool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#mount-a-dataset-that-is-encrypted&#34;&gt;Mount a dataset that is encrypted.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If your dataset is encrypted using a key file you need to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mount the device that has your keys&lt;/li&gt; &lt;li&gt;Import the pool without loading the key because you want to override the keylocation attribute with zfs load-key. Without the -l option, any encrypted datasets won&#39;t be mounted, which is what you want.&lt;/li&gt; &lt;li&gt;Load the key(s) for the dataset(s)&lt;/li&gt; &lt;li&gt;Mount the dataset(s).&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;import&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rpool&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# without the `-l` option!&lt;/span&gt;
zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;load-key&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-L&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;file:///path/to/keyfile&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rpool
zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mount&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rpool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#umount-a-pool&#34;&gt;Umount a pool.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zpool&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pool-name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#repair-a-degraded-pool&#34;&gt;Improve the Repair a DEGRADED pool instructions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;First you need to make sure that it is in fact a problem of the disk. Check the &lt;code&gt;dmesg&lt;/code&gt; to see if there are any traces of reading errors, or SATA cable errors.&lt;/p&gt; &lt;p&gt;A friend suggested to mark the disk as healthy and do a resilver on the same disk. If the error is reproduced in the next days, then replace the disk. A safer approach is to resilver on a new disk, analyze the disk when it&#39;s not connected to the pool, and if you feel it&#39;s safe then save it as a cold spare.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#remove-all-snapshots-of-a-dataset&#34;&gt;Remove all snapshots of a dataset.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;list&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;snapshot&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path/to/dataset&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tail&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-n+2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tac&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;xargs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-n&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;zfs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;destroy&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;zfs-prometheus-exporter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/zfs_exporter/&#34;&gt;ZFS Prometheus exporter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the ZFS exporter.&lt;/p&gt; &lt;p&gt;You can use a &lt;a href=&#34;https://github.com/pdf/zfs_exporter&#34;&gt;zfs exporter&lt;/a&gt; to create alerts on your ZFS pools, filesystems, snapshots and volumes.&lt;/p&gt; &lt;p&gt;It&#39;s not easy to match the exporter metrics with the output of &lt;code&gt;zfs list -o space&lt;/code&gt;. Here is a correlation table:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;USED: &lt;code&gt;zfs_dataset_used_bytes{type=&#34;filesystem&#34;}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;AVAIL: &lt;code&gt;zfs_dataset_available_bytes{type=&#34;filesystem&#34;}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;LUSED: &lt;code&gt;zfs_dataset_logical_used_bytes{type=&#34;filesystem&#34;}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;USEDDS: &lt;code&gt;zfs_dataset_used_by_dataset_bytes=&#34;filesystem&#34;}&lt;/code&gt;&lt;/li&gt; &lt;li&gt;USEDSNAP: Currently there &lt;a href=&#34;https://github.com/pdf/zfs_exporter/issues/32&#34;&gt;is no published metric&lt;/a&gt; to get this data. You can either use &lt;code&gt;zfs_dataset_used_bytes - zfs_dataset_used_by_dataset_bytes&lt;/code&gt; which will show wrong data if the dataset has children or try to do &lt;code&gt;sum by (hostname,filesystem) (zfs_dataset_used_bytes{type=&#39;snapshot&#39;})&lt;/code&gt; which returns smaller sizes than expected.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It also covers the &lt;a href=&#34;https://lyz-code.github.io/blue-book/zfs_exporter/#installation&#34;&gt;installation&lt;/a&gt; as well as some nice &lt;a href=&#34;https://lyz-code.github.io/blue-book/zfs_exporter/#configure-the-alerts&#34;&gt;alerts&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Improve alerts.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Correction: Update the alerts to the more curated version.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/zfs_exporter/#useful-inhibits&#34;&gt;Useful inhibits.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Some you may want to inhibit some of these rules for some of your datasets. These subsections should be added to the &lt;code&gt;alertmanager.yml&lt;/code&gt; file under the &lt;code&gt;inhibit_rules&lt;/code&gt; field.&lt;/p&gt; &lt;p&gt;Ignore snapshots on some datasets: Sometimes you don&#39;t want to do snapshots on a dataset&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;target_matchers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;alertname = ZfsDatasetWithNoSnapshotsError&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;hostname = my_server_1&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;filesystem = tmp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Ignore snapshots growth: Sometimes you don&#39;t mind if the size of the data saved in the filesystems doesn&#39;t change too much between snapshots doesn&#39;t change much specially in the most frequent backups because you prefer to keep the backup cadence. It&#39;s interesting to have the alert though so that you can get notified of the datasets that don&#39;t change that much so you can tweak your backup policy (even if zfs snapshots are almost free).&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;target_matchers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;alertname =~ &#34;ZfsSnapshotType(Frequently|Hourly)SizeError&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;filesystem =~ &#34;(media/(docs|music))&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;loki&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/loki/&#34;&gt;Loki&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce loki.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://grafana.com/docs/loki/latest/&#34;&gt;Loki&lt;/a&gt; is a set of components that can be composed into a fully featured logging stack.&lt;/p&gt; &lt;p&gt;Unlike other logging systems, Loki is built around the idea of only indexing metadata about your logs: labels (just like Prometheus labels). Log data itself is then compressed and stored in chunks in object stores such as Amazon Simple Storage Service (S3) or Google Cloud Storage (GCS), or even locally on the filesystem.&lt;/p&gt; &lt;p&gt;A small index and highly compressed chunks simplifies the operation and significantly lowers the cost of Loki.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/loki/#installation&#34;&gt;How to install loki.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are &lt;a href=&#34;https://grafana.com/docs/loki/latest/setup/install/&#34;&gt;many ways to install Loki&lt;/a&gt;, we&#39;re going to do it using &lt;code&gt;docker-compose&lt;/code&gt; taking &lt;a href=&#34;https://raw.githubusercontent.com/grafana/loki/v2.9.1/production/docker-compose.yaml&#34;&gt;their example as a starting point&lt;/a&gt; and complementing our already existent &lt;a href=&#34;https://lyz-code.github.io/blue-book/grafana/#installation&#34;&gt;grafana docker-compose&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;It makes use of the &lt;a href=&#34;https://grafana.com/docs/loki/latest/configure/#configuration-file-reference&#34;&gt;environment variables to configure Loki&lt;/a&gt;, that&#39;s why we have the &lt;code&gt;-config.expand-env=true&lt;/code&gt; flag in the command line launch.&lt;/p&gt; &lt;p&gt;In the grafana datasources directory add &lt;code&gt;loki.yaml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;1&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;datasources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Loki&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;loki&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;access&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;proxy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;orgId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;http://loki:3100&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;basicAuth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;isDefault&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;editable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;a href=&#34;https://grafana.com/docs/loki/latest/storage/&#34;&gt;Storage configuration&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;Unlike other logging systems, Grafana Loki is built around the idea of only indexing metadata about your logs: labels (just like Prometheus labels). Log data itself is then compressed and stored in chunks in object stores such as S3 or GCS, or even locally on the filesystem. A small index and highly compressed chunks simplifies the operation and significantly lowers the cost of Loki.&lt;/p&gt; &lt;p&gt;Loki 2.0 brings an index mechanism named ‘boltdb-shipper’ and is what we now call Single Store. This type only requires one store, the object store, for both the index and chunks.&lt;/p&gt; &lt;p&gt;Loki 2.8 adds TSDB as a new mode for the Single Store and is now the recommended way to persist data in Loki as it improves query performance, reduces TCO and has the same feature parity as “boltdb-shipper”.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;grafana&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/grafana/&#34;&gt;Grafana&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce grafana.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://grafana.com/grafana&#34;&gt;Grafana&lt;/a&gt; is a web application to create dashboards.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/#run-grafana-via-docker-compose&#34;&gt;Installation&lt;/a&gt;: We&#39;re going to install it with docker-compose and connect it to &lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/&#34;&gt;Authentik&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://goauthentik.io/integrations/services/grafana/&#34;&gt;Create the Authentik connection&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;Assuming that you have &lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/&#34;&gt;the terraform authentik provider configured&lt;/a&gt;, use the next terraform code:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;variable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;grafana_name&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;The name shown in the Grafana application.&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Grafana&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;variable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;grafana_redirect_uri&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;The redirect url configured on Grafana.&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;variable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;grafana_icon&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;The icon shown in the Grafana application&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;/application-icons/grafana.svg&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;authentik_application&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;grafana&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var.grafana_name&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;slug&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;grafana&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;protocol_provider&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;authentik_provider_oauth2.grafana.id&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;meta_icon&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var.grafana_icon&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;lifecycle&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ignore_changes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;      # The terraform provider is continuously changing the attribute even though it&#39;s set&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;meta_icon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;authentik_provider_oauth2&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;grafana&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var.grafana_name&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;client_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;grafana&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;authorization_flow&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;data.authentik_flow.default-authorization-flow.id&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;property_mappings&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;data.authentik_scope_mapping.email.id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;data.authentik_scope_mapping.openid.id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;data.authentik_scope_mapping.profile.id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;redirect_uris&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var.grafana_redirect_uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;signing_key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;data.authentik_certificate_key_pair.default.id&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;access_token_validity&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;minutes=120&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;authentik_certificate_key_pair&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;authentik Self-signed Certificate&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;authentik_flow&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;default-authorization-flow&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;slug&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;default-provider-authorization-implicit-consent&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;grafana_oauth_id&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;authentik_provider_oauth2.grafana.client_id&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;grafana_oauth_secret&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;authentik_provider_oauth2.grafana.client_secret&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Install grafana.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;3.8&#34;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;grafana&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;grafana/grafana-oss:${GRAFANA_VERSION:-latest}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;grafana&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;unless-stopped&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;data:/var/lib/grafana&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;grafana&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;monitorization&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;swag&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;env_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;.env&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;depends_on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;db&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;postgres:${DATABASE_VERSION:-15}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;unless-stopped&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;grafana-db&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;POSTGRES_DB=${GF_DATABASE_NAME:-grafana}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;POSTGRES_USER=${GF_DATABASE_USER:-grafana}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;POSTGRES_PASSWORD=${GF_DATABASE_PASSWORD:?database password required}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;grafana&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;db-data:/var/lib/postgresql/data&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;env_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;.env&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;networks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;grafana&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;grafana&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;monitorization&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;monitorization&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;swag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;swag&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;local&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;driver_opts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;none&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;bind&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/data/grafana/app&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;db-data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;local&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;driver_opts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;none&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;bind&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/data/grafana/database&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where the &lt;code&gt;monitorization&lt;/code&gt; network is where prometheus and the rest of the stack listens, and &lt;code&gt;swag&lt;/code&gt; the network to the gateway proxy.&lt;/p&gt; &lt;p&gt;It uses the &lt;code&gt;.env&lt;/code&gt; file to store the required &lt;a href=&#34;#configure-grafana&#34;&gt;configuration&lt;/a&gt;, to connect grafana with authentik you need to add the next variables:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_ENABLED&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;true&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;authentik&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_CLIENT_ID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&amp;lt;Client ID from above&amp;gt;&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&amp;lt;Client Secret from above&amp;gt;&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_SCOPES&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;openid profile email&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_AUTH_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://authentik.company/application/o/authorize/&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_TOKEN_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://authentik.company/application/o/token/&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_API_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://authentik.company/application/o/userinfo/&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_SIGNOUT_REDIRECT_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://authentik.company/application/o/&amp;lt;Slug of the application from above&amp;gt;/end-session/&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_OAUTH_AUTO_LOGIN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;true&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;contains(groups[*], &#39;Grafana Admins&#39;) &amp;amp;&amp;amp; &#39;Admin&#39; || contains(groups[*], &#39;Grafana Editors&#39;) &amp;amp;&amp;amp; &#39;Editor&#39; || &#39;Viewer&#39;&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;In the configuration above you can see an example of a role mapping. Upon login, this configuration looks at the groups of which the current user is a member. If any of the specified group names are found, the user will be granted the resulting role in Grafana.&lt;/p&gt; &lt;p&gt;In the example shown above, one of the specified group names is &#34;Grafana Admins&#34;. If the user is a member of this group, they will be granted the &#34;Admin&#34; role in Grafana. If the user is not a member of the &#34;Grafana Admins&#34; group, it moves on to see if the user is a member of the &#34;Grafana Editors&#34; group. If they are, they are granted the &#34;Editor&#34; role. Finally, if the user is not found to be a member of either of these groups, it fails back to granting the &#34;Viewer&#34; role.&lt;/p&gt; &lt;p&gt;Also make sure in your configuration that &lt;code&gt;root_url&lt;/code&gt; is set correctly, otherwise your redirect url might get processed incorrectly. For example, if your grafana instance is running on the default configuration and is accessible behind a reverse proxy at &lt;a href=&#34;https://grafana.company&#34;&gt;https://grafana.company&lt;/a&gt;, your redirect url will end up looking like this, &lt;a href=&#34;https://grafana.company/&#34;&gt;https://grafana.company/&lt;/a&gt;. If you get &lt;code&gt;user does not belong to org&lt;/code&gt; error when trying to log into grafana for the first time via OAuth, check if you have an organization with the ID of 1, if not, then you have to add the following to your grafana config:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[users]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;auto_assign_org&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;auto_assign_org_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;lt;id-of-your-default-organization&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Once you&#39;ve made sure that the oauth works, go to &lt;code&gt;/admin/users&lt;/code&gt; and remove the &lt;code&gt;admin&lt;/code&gt; user.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/grafana/#configure-grafana&#34;&gt;Configure grafana.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Grafana has default and custom configuration files. You can customize your Grafana instance by modifying the custom configuration file or by using environment variables. To see the list of settings for a Grafana instance, refer to &lt;a href=&#34;https://grafana.com/docs/grafana/latest/administration/stats-and-license/#view-server-settings&#34;&gt;View server settings&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To override an option use &lt;code&gt;GF_&amp;lt;SectionName&amp;gt;_&amp;lt;KeyName&amp;gt;&lt;/code&gt;. Where the &lt;code&gt;section name&lt;/code&gt; is the text within the brackets. Everything should be uppercase, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; should be replaced by &lt;code&gt;_&lt;/code&gt;. For example, if you have these configuration settings:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;na&#34;&gt;instance_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;${HOSTNAME}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[security]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;admin_user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;admin&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[auth.google]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;client_secret&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;0ldS3cretKey&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[plugin.grafana-image-renderer]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;rendering_ignore_https_errors&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;true&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[feature_toggles]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;newNavigation&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can override variables on Linux machines with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;GF_DEFAULT_INSTANCE_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;my-instance
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;GF_SECURITY_ADMIN_USER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;owner
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GOOGLE_CLIENT_SECRET&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;newS3cretKey
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;GF_PLUGIN_GRAFANA_IMAGE_RENDERER_RENDERING_IGNORE_HTTPS_ERRORS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;GF_FEATURE_TOGGLES_ENABLE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;newNavigation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;And in the docker compose you can edit the &lt;code&gt;.env&lt;/code&gt; file. Mine looks similar to:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;GRAFANA_VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;latest
&lt;span class=&#34;nv&#34;&gt;GF_DEFAULT_INSTANCE_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;production&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_SERVER_ROOT_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://your.domain.org&#34;&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;GF_DATABASE_TYPE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;postgres
&lt;span class=&#34;nv&#34;&gt;DATABASE_VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_DATABASE_HOST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;grafana-db:5432
&lt;span class=&#34;nv&#34;&gt;GF_DATABASE_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;grafana
&lt;span class=&#34;nv&#34;&gt;GF_DATABASE_USER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;grafana
&lt;span class=&#34;nv&#34;&gt;GF_DATABASE_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;change-for-a-long-password&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_DATABASE_SSL_MODE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;disable

&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_ENABLED&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;true&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;authentik&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_CLIENT_ID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&amp;lt;Client ID from above&amp;gt;&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&amp;lt;Client Secret from above&amp;gt;&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_SCOPES&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;openid profile email&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_AUTH_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://authentik.company/application/o/authorize/&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_TOKEN_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://authentik.company/application/o/token/&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_API_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://authentik.company/application/o/userinfo/&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_SIGNOUT_REDIRECT_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://authentik.company/application/o/&amp;lt;Slug of the application from above&amp;gt;/end-session/&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_OAUTH_AUTO_LOGIN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;true&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;contains(groups[*], &#39;Grafana Admins&#39;) &amp;amp;&amp;amp; &#39;Admin&#39; || contains(groups[*], &#39;Grafana Editors&#39;) &amp;amp;&amp;amp; &#39;Editor&#39; || &#39;Viewer&#39;&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/grafana/#configure-datasources&#34;&gt;Configure datasources.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can manage data sources in Grafana by adding YAML configuration files in the &lt;code&gt;provisioning/datasources&lt;/code&gt; directory. Each config file can contain a list of datasources to add or update during startup. If the data source already exists, Grafana reconfigures it to match the provisioned configuration file.&lt;/p&gt; &lt;p&gt;The configuration file can also list data sources to automatically delete, called &lt;code&gt;deleteDatasources&lt;/code&gt;. Grafana deletes the data sources listed in &lt;code&gt;deleteDatasources&lt;/code&gt; before adding or updating those in the datasources list.&lt;/p&gt; &lt;p&gt;For example to &lt;a href=&#34;https://grafana.com/docs/grafana/latest/datasources/prometheus/&#34;&gt;configure a Prometheus datasource&lt;/a&gt; use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;1&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;datasources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Prometheus&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;prometheus&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;access&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;proxy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Access mode - proxy (server in the UI) or direct (browser in the UI).&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;http://prometheus:9090&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jsonData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;httpMethod&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;POST&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;manageAlerts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prometheusType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Prometheus&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prometheusVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;2.44.0&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;cacheLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;High&#39;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;disableRecordingRules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;incrementalQueryOverlapWindow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10m&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;exemplarTraceIdDestinations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/grafana/#configure-dashboards&#34;&gt;Configure dashboards.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can manage dashboards in Grafana by adding one or more YAML config files in the &lt;code&gt;provisioning/dashboards&lt;/code&gt; directory. Each config file can contain a list of dashboards providers that load dashboards into Grafana from the local filesystem.&lt;/p&gt; &lt;p&gt;Create one file called &lt;code&gt;dashboards.yaml&lt;/code&gt; with the next contents:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;providers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# A uniquely identifiable name for the provider&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;file&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/etc/grafana/provisioning/dashboards/definitions&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then inside the config directory of your docker compose create the directory &lt;code&gt;provisioning/dashboards/definitions&lt;/code&gt; and add the json of the dashboards themselves. You can download them from the dashboard pages. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/1860-node-exporter-full/&#34;&gt;Node Exporter&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/13659-blackbox-exporter-http-prober/&#34;&gt;Blackbox Exporter&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://grafana.com/grafana/dashboards/9578-alertmanager/&#34;&gt;Alertmanager&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/grafana/#configure-the-plugins&#34;&gt;Configure the plugins.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To install plugins in the Docker container, complete the following steps:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Pass the plugins you want to be installed to Docker with the &lt;code&gt;GF_INSTALL_PLUGINS&lt;/code&gt; environment variable as a comma-separated list.&lt;/li&gt; &lt;li&gt;This sends each plugin name to &lt;code&gt;grafana-cli plugins install ${plugin}&lt;/code&gt; and installs them when Grafana starts.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;run&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-d&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt;:3000&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;grafana&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;GF_INSTALL_PLUGINS=grafana-clock-panel, grafana-simple-json-datasource&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;grafana/grafana-oss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To specify the version of a plugin, add the version number to the &lt;code&gt;GF_INSTALL_PLUGINS&lt;/code&gt; environment variable. For example: &lt;code&gt;GF_INSTALL_PLUGINS=grafana-clock-panel 1.0.1&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To install a plugin from a custom URL, use the following convention to specify the URL: &lt;code&gt;&amp;lt;url to plugin zip&amp;gt;;&amp;lt;plugin install folder name&amp;gt;&lt;/code&gt;. For example: &lt;code&gt;GF_INSTALL_PLUGINS=https://github.com/VolkovLabs/custom-plugin.zip;custom-plugin&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Improve installation method.&lt;/p&gt; &lt;p&gt;Add more configuration values such as:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;GF_SERVER_ENABLE_GZIP=&#34;true&#34;

GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN=&#34;true&#34;

GF_LOG_MODE=&#34;console file&#34;
GF_LOG_LEVEL=&#34;info&#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/grafana/#configure-datasources&#34;&gt;Warning when configuring datasources.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Be careful to set the &lt;code&gt;timeInterval&lt;/code&gt; variable to the value of how often you scrape the data from the node exporter to avoid &lt;a href=&#34;https://github.com/rfmoz/grafana-dashboards/issues/137&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;siem&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/alertmanager/&#34;&gt;SIEM&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/alertmanager/#route&#34;&gt;Alertmanager routes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A route block defines a node in a routing tree and its children. Its optional configuration parameters are inherited from its parent node if not set.&lt;/p&gt; &lt;p&gt;Every alert enters the routing tree at the configured top-level route, which must match all alerts (i.e. not have any configured matchers). It then traverses the child nodes. If continue is set to false, it stops after the first matching child. If continue is true on a matching node, the alert will continue matching against subsequent siblings. If an alert does not match any children of a node (no matching child nodes, or none exist), the alert is handled based on the configuration parameters of the current node.&lt;/p&gt; &lt;p&gt;A basic configuration would be:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;group_by&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;job&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;alertname&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;severity&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;group_wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;30s&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;group_interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;5m&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repeat_interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;12h&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;receiver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;email&#39;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;alertname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Watchdog&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;receiver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;null&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add Wazuh SIEM.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://wazuh.com/&#34;&gt;Wazuh&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;blackbox-exporter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/blackbox_exporter/&#34;&gt;Blackbox Exporter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/blackbox_exporter/#check-tcp-with-tls&#34;&gt;Check TCP with TLS.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want to test for example if an LDAP is serving the correct certificate on the port 636 you can use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;tcp_ssl_connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prober&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;tcp&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;10s&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;tls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Ldap&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;my-ldap-server:636&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;tcp_ssl_connect&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;node-exporter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/node_exporter/&#34;&gt;Node Exporter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Improve how to install it.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;authentication&#34;&gt;Authentication&lt;/h3&gt; &lt;h4 id=&#34;authentik&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/&#34;&gt;Authentik&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Authentik.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://goauthentik.io/&#34;&gt;Authentik&lt;/a&gt; is an open-source Identity Provider focused on flexibility and versatility.&lt;/p&gt; &lt;p&gt;What I like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Is maintained and popular&lt;/li&gt; &lt;li&gt;It has a clean interface&lt;/li&gt; &lt;li&gt;They have their own &lt;a href=&#34;https://registry.terraform.io/providers/goauthentik/authentik/latest/docs/resources/application&#34;&gt;terraform provider&lt;/a&gt; Oo!&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;What I don&#39;t like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It&#39;s heavy focused on GUI interaction, but you can export the configuration to YAML files to be applied without the GUI interaction.&lt;/li&gt; &lt;li&gt;The documentation is oriented to developers and not users. It&#39;s a little difficult to get a grasp on how to do things in the platform without following blog posts.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the article you can also find:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#installation&#34;&gt;How to install it&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#terraform&#34;&gt;How to configure and use the terraform provider&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#gitea&#34;&gt;How to configure some applications, such as gitea&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#configure-the-invitation-flow&#34;&gt;How to configure the user registration by invitation link&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#use-blueprints&#34;&gt;How to use blueprints&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#configure-the-invitation-flow&#34;&gt;Configure the invitation flow with terraform.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#hide-and-application-from-a-user&#34;&gt;Hide and application from a user.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Application access can be configured using (Policy) Bindings. Click on an application in the applications list, and select the Policy / Group / User Bindings tab. There you can bind users/groups/policies to grant them access. When nothing is bound, everyone has access. You can use this to grant access to one or multiple users/groups, or dynamically give access using policies.&lt;/p&gt; &lt;p&gt;With terraform you can use &lt;code&gt;authentik_policy_binding&lt;/code&gt;, for example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;authentik_policy_binding&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;admin&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;authentik_application.gitea.uuid&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;authentik_group.admins.id&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;order&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#configure-password-recovery&#34;&gt;Configure password recovery.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Password recovery is not set by default, in the article you can find the terraform resources needed for it to work.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#protect-applications-that-don&#39;t-have-authentication&#34;&gt;Protect applications that don&#39;t have authentication.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Some applications don&#39;t have authentication, for example &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;prometheus&lt;/a&gt;. You can use Authentik in front of such applications to add the authentication and authorization layer.&lt;/p&gt; &lt;p&gt;Authentik can be used as a (very) simple reverse proxy by using its Provider feature with the regular &#34;Proxy&#34; setting. This let&#39;s you wrap authentication around a sub-domain / app where it normally wouldn&#39;t have authentication (or not the type of auth that you would specifically want) and then have Authentik handle the proxy forwarding and Auth.&lt;/p&gt; &lt;p&gt;In this mode, there is no domain level nor &#39;integrated&#39; authentication into your desired app; Authentik becomes both your reverse proxy and auth for this one particular app or (sub) domain. This mode does not forward authentication nor let you log in into any app. It&#39;s just acts like an authentication wrapper.&lt;/p&gt; &lt;p&gt;It&#39;s best to use a normal reverse proxy out front of Authentik. This adds a second layer of routing to deal with but Authentik is not NGINX or a reverse proxy system, so it does not have that many configuration options.&lt;/p&gt; &lt;p&gt;We&#39;ll use the following fake domains in this example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Authentik domain: auth.yourdomain.com&lt;/li&gt; &lt;li&gt;App domain: app.yourdomain.com&lt;/li&gt; &lt;li&gt;Nginx: nginx.yourdomain.com&lt;/li&gt; &lt;li&gt;Authentik&#39;s docker conter name: auth_server&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The steps are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Configure the proxy provider:&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;c1&#34;&gt;# ---------------&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# -- Variables --&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ---------------&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;variable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;prometheus_url&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;The url to access the service.&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# ----------&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# -- Data --&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# ----------&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;authentik_flow&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;default-authorization-flow&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;slug&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;default-provider-authorization-implicit-consent&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# --------------------&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# --    Provider    --&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# --------------------&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;authentik_provider_proxy&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;prometheus&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Prometheus&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;internal_host&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;http://prometheus:9090&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;external_host&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var.prometheus_url&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;authorization_flow&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;data.authentik_flow.default-authorization-flow.id&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;internal_host_ssl_validation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;no&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Finish the installation of prometheus.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#monitorization&#34;&gt;Disregard monitorization.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve skimmed through the prometheus metrics exposed at &lt;code&gt;:9300/metrics&lt;/code&gt; in the core and they aren&#39;t that useful :(&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/authentik/#i-can&#39;t-log-in-to-authentik&#34;&gt;Troubleshoot I can&#39;t log in to authentik.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In case you can&#39;t login anymore, perhaps due to an incorrectly configured stage or a failed flow import, you can create a recovery key.&lt;/p&gt; &lt;p&gt;To create the key, run the following command:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;run&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--it&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;authentik&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;bash
ak&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;create_recovery_key&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;akadmin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This will output a link, that can be used to instantly gain access to authentik as the user specified above. The link is valid for amount of years specified above, in this case, 1 year.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operating-systems&#34;&gt;Operating Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/&#34;&gt;Linux&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Interesting learning pages.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://explainshell.com/&#34;&gt;https://explainshell.com/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://linuxcommandlibrary.com/&#34;&gt;https://linuxcommandlibrary.com/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;linux-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/&#34;&gt;Linux Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#use-a-pass-password-in-a-makefile&#34;&gt;Use a &lt;code&gt;pass&lt;/code&gt; password in a Makefile.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;TOKEN&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;shell&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;bash&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/usr/bin/pass show path/to/token&#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;diff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;@AUTHENTIK_TOKEN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;TOKEN&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;terraform&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;plan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#install-a-new-font&#34;&gt;Install a new font.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Install a font manually by downloading the appropriate &lt;code&gt;.ttf&lt;/code&gt; or &lt;code&gt;otf&lt;/code&gt; files and placing them into &lt;code&gt;/usr/local/share/fonts&lt;/code&gt; (system-wide), &lt;code&gt;~/.local/share/fonts&lt;/code&gt; (user-specific) or &lt;code&gt;~/.fonts&lt;/code&gt; (user-specific). These files should have the permission 644 (&lt;code&gt;-rw-r--r--&lt;/code&gt;), otherwise they may not be usable.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#get-vpn-password-from-pass&#34;&gt;Get VPN password from &lt;code&gt;pass&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To be able to retrieve the user and password from pass you need to run the openvpn command with the next flags:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;bash&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;openvpn --config config.ovpn  --auth-user-pass &amp;lt;(echo -e &#39;user_name\n&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;pass&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;show&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;vpn&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#39;)&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Assuming that &lt;code&gt;vpn&lt;/code&gt; is an entry of your &lt;code&gt;pass&lt;/code&gt; password store.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#measure-the-performance-iops-of-a-disk&#34;&gt;Measure the performance, IOPS of a disk.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To measure disk IOPS performance in Linux, you can use the &lt;code&gt;fio&lt;/code&gt; tool. Install it with&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;fio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then you need to go to the directory where your disk is mounted. The test is done by performing read/write operations in this directory.&lt;/p&gt; &lt;p&gt;To do a random read/write operation test an 8 GB file will be created. Then &lt;code&gt;fio&lt;/code&gt; will read/write a 4KB block (a standard block size) with the 75/25% by the number of reads and writes operations and measure the performance.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fio&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--randrepeat&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--ioengine&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;libaio&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--direct&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--gtod_reduce&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;fiotest&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--filename&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;testfio&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--bs&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;4k&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--iodepth&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--size&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;8G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--readwrite&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;randrw&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--rwmixread&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;75&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#what-is-/var/log/tallylog&#34;&gt;What is &lt;code&gt;/var/log/tallylog&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;/var/log/tallylog&lt;/code&gt; is the file where the &lt;code&gt;PAM&lt;/code&gt; linux module (used for authentication of the machine) keeps track of the failed ssh logins in order to temporarily block users.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#manage-users&#34;&gt;Manage users.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Change main group of user&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;usermod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-g&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;group_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Add user to group&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;usermod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;group_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Remove user from group.&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;usermod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;remaining_group_names&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You have to execute &lt;code&gt;groups {{ user }}&lt;/code&gt; get the list and pass the remaining to the above command&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Change uid and gid of the user&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;usermod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-u&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;newuid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;login&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
groupmod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-g&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;newgid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;group&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-user&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;olduid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-exec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;chown&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-h&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;newuid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-group&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;oldgid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-exec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;chgrp&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-h&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;newgid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
usermod&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-g&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;newgid&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;login&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#manage-ssh-keys&#34;&gt;Manage ssh keys.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Generate ed25519 key&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ed25519&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path_to_keyfile&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Generate RSA key&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rsa&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path_to_keyfile&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Generate different comment&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ed25519&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path_to_keyfile&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-C&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;email&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Generate key headless, batch&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ed25519&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path_to_keyfile&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-q&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-N&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Generate public key from private key&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-y&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path_to_keyfile&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path_to_public_key_file&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Get fingerprint of key &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-keygen&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-lf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path_to_key&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#measure-the-network-performance-between-two-machines&#34;&gt;Measure the network performance between two machines.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Install &lt;code&gt;iperf3&lt;/code&gt; with &lt;code&gt;apt-get install iperf3&lt;/code&gt; on both server and client.&lt;/p&gt; &lt;p&gt;On the server system run:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;server#:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;iperf3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-i&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: the interval to provide periodic bandwidth updates&lt;/li&gt; &lt;li&gt;&lt;code&gt;-s&lt;/code&gt;: listen as a server&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;On the client system:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;client#:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;iperf3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-i&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-w&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;server&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;hostname&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;or&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;address&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: the interval to provide periodic bandwidth updates&lt;/li&gt; &lt;li&gt;&lt;code&gt;-w&lt;/code&gt;: the socket buffer size (which affects the TCP Window). The buffer size is also set on the server by this client command.&lt;/li&gt; &lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: the time to run the test in seconds&lt;/li&gt; &lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: connect to a listening server at…&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Sometimes is interesting to test both ways as they may return different outcomes&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#force-umount-nfs-mounted-directory&#34;&gt;Force umount nfs mounted directory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;umount&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-l&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path/to/mounted/dir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#configure-fstab-to-mount-nfs&#34;&gt;Configure fstab to mount nfs.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;NFS stands for ‘Network File System’. This mechanism allows Unix machines to share files and directories over the network. Using this feature, a Linux machine can mount a remote directory (residing in a NFS server machine) just like a local directory and can access files from it.&lt;/p&gt; &lt;p&gt;An NFS share can be mounted on a machine by adding a line to the &lt;code&gt;/etc/fstab&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;The default syntax for &lt;code&gt;fstab&lt;/code&gt; entry of NFS mounts is as follows.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Server:/path/to/export /local_mountpoint nfs &amp;lt;options&amp;gt; 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Server&lt;/code&gt;: The hostname or IP address of the NFS server where the exported directory resides.&lt;/li&gt; &lt;li&gt;&lt;code&gt;/path/to/export&lt;/code&gt;: The shared directory (exported folder) path.&lt;/li&gt; &lt;li&gt;&lt;code&gt;/local_mountpoint&lt;/code&gt;: Existing directory in the host where you want to mount the NFS share.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can specify a number of options that you want to set on the NFS mount:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;soft/hard&lt;/code&gt;: When the mount option &lt;code&gt;hard&lt;/code&gt; is set, if the NFS server crashes or becomes unresponsive, the NFS requests will be retried indefinitely. You can set the mount option &lt;code&gt;intr&lt;/code&gt;, so that the process can be interrupted. When the NFS server comes back online, the process can be continued from where it was while the server became unresponsive.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When the option &lt;code&gt;soft&lt;/code&gt; is set, the process will be reported an error when the NFS server is unresponsive after waiting for a period of time (defined by the &lt;code&gt;timeo&lt;/code&gt; option). In certain cases &lt;code&gt;soft&lt;/code&gt; option can cause data corruption and loss of data. So, it is recommended to use &lt;code&gt;hard&lt;/code&gt; and &lt;code&gt;intr&lt;/code&gt; options.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;noexec&lt;/code&gt;: Prevents execution of binaries on mounted file systems. This is useful if the system is mounting a non-Linux file system via NFS containing incompatible binaries.&lt;/li&gt; &lt;li&gt;&lt;code&gt;nosuid&lt;/code&gt;: Disables set-user-identifier or set-group-identifier bits. This prevents remote users from gaining higher privileges by running a setuid program.&lt;/li&gt; &lt;li&gt;&lt;code&gt;tcp&lt;/code&gt;: Specifies the NFS mount to use the TCP protocol.&lt;/li&gt; &lt;li&gt;&lt;code&gt;udp&lt;/code&gt;: Specifies the NFS mount to use the UDP protocol.&lt;/li&gt; &lt;li&gt;&lt;code&gt;nofail&lt;/code&gt;: Prevent issues when rebooting the host. The downside is that if you have services that depend on the volume to be mounted they won&#39;t behave as expected.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#fix-limit-on-the-number-of-inotify-watches&#34;&gt;Fix limit on the number of inotify watches.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Programs that sync files such as dropbox, git etc use inotify to notice changes to the file system. The limit can be see by -&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/proc/sys/fs/inotify/max_user_watches
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;For me, it shows &lt;code&gt;65536&lt;/code&gt;. When this limit is not enough to monitor all files inside a directory it throws this error.&lt;/p&gt; &lt;p&gt;If you want to increase the amount of inotify watchers, run the following in a terminal:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;fs.inotify.max_user_watches&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;100000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/etc/sysctl.conf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sysctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where &lt;code&gt;100000&lt;/code&gt; is the desired number of inotify watches.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#get-class-of-a-window&#34;&gt;Get class of a window.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;xprop&lt;/code&gt; and click the window.&lt;/p&gt; &lt;p&gt;Get the current brightness level with &lt;code&gt;cat /sys/class/backlight/intel_backlight/brightness&lt;/code&gt;. Imagine it&#39;s &lt;code&gt;1550&lt;/code&gt;, then if you want to lower the brightness use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/sys/class/backlight/intel_backlight/brightness
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#ssh-tunnel&#34;&gt;SSH tunnel.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-D&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9090&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-N&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user@host
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#fix-the-ssh-client-kex_exchange_identification:-read:-connection-reset-by-peer-error&#34;&gt;Fix the SSH client kex_exchange_identification: read: Connection reset by peer error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Restart the &lt;code&gt;ssh&lt;/code&gt; service.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#automatic-reboot-after-power-failure&#34;&gt;Automatic reboot after power failure.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;That&#39;s not something you can control in your operating system. That&#39;s what the BIOS is for. In most BIOS setups there&#39;ll be an option like After power loss with possible values like Power off and Reboot.&lt;/p&gt; &lt;p&gt;You can also edit &lt;code&gt;/etc/default/grub&lt;/code&gt; and add:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;GRUB_RECORDFAIL_TIMEOUT=5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then run:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update-grub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This will make your machine display the boot options for 5 seconds before it boot the default option (instead of waiting forever for you to choose one).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#ssh-tunnel&#34;&gt;Add sshuttle information link.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you need a more powerful ssh tunnel you can try &lt;a href=&#34;https://sshuttle.readthedocs.io/en/stable/overview.html&#34;&gt;sshuttle&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#reset-failed-systemd-services&#34;&gt;Reset failed systemd services.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use systemctl to remove the failed status. To reset all units with failed status:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;reset-failed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;or just your specific unit:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;reset-failed&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;openvpn-server@intranert.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#get-the-current-git-branch&#34;&gt;Get the current git branch.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;branch&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--show-current
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#install-latest-version-of-package-from-backports&#34;&gt;Install latest version of package from backports.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add the backports repository:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/etc/apt/sources.list.d/bullseye-backports.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;deb http://deb.debian.org/debian bullseye-backports main contrib
deb-src http://deb.debian.org/debian bullseye-backports main contrib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Configure the package to be pulled from backports&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vi&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/etc/apt/preferences.d/90_zfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Package: src:zfs-linux
Pin: release n=bullseye-backports
Pin-Priority: 990
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#rename-multiple-files-matching-a-pattern&#34;&gt;Rename multiple files matching a pattern.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There is &lt;code&gt;rename&lt;/code&gt; that looks nice, but you need to install it. Using only &lt;code&gt;find&lt;/code&gt; you can do:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;.&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;*yml&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-exec&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;bash&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;echo mv $0 ${0/yml/yaml}&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If it shows what you expect, remove the &lt;code&gt;echo&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#force-ssh-to-use-password-authentication&#34;&gt;Force ssh to use password authentication.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PreferredAuthentications&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;password&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PubkeyAuthentication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;no&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;exampleUser@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; feat(linux_snippets#Do a tail -f with grep): Do a tail -f with grep&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tail&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;file&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--line-buffered&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;my_pattern
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#check-if-a-program-exists-in-the-user&#39;s-path&#34;&gt;Check if a program exists in the user&#39;s PATH.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-v&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;the_command&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Example use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;!&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-v&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;the_command&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/null
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&amp;lt;the_command&amp;gt; could not be found&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/qbittorrent/#tools&#34;&gt;Add interesting tools to explore.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/buroa/qbittools&#34;&gt;qbittools&lt;/a&gt;: a feature rich CLI for the management of torrents in qBittorrent.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/StuffAnThings/qbit_manage&#34;&gt;qbit_manage&lt;/a&gt;: tool will help manage tedious tasks in qBittorrent and automate them.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#limit-the-resources-a-docker-is-using&#34;&gt;Limit the resources a docker is using.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can either use limits in the &lt;code&gt;docker&lt;/code&gt; service itself, see &lt;a href=&#34;https://unix.stackexchange.com/questions/537645/how-to-limit-docker-total-resources&#34;&gt;1&lt;/a&gt; and &lt;a href=&#34;https://www.freedesktop.org/software/systemd/man/systemd.resource-control.html&#34;&gt;2&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Or/and you can limit it for each docker, see &lt;a href=&#34;https://www.baeldung.com/ops/docker-memory-limit&#34;&gt;1&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/config/containers/resource_constraints/&#34;&gt;2&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#wipe-a-disk&#34;&gt;Wipe a disk.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Overwrite it many times &lt;a href=&#34;https://lyz-code.github.io/blue-book/hard_drive_health/#check-the-health-of-a-disk-with-badblocks&#34;&gt;with badblocks&lt;/a&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;badblocks&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-wsv&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/sde&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;disk_wipe_log.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#impose-load-on-a-system-to-stress-it&#34;&gt;Impose load on a system to stress it.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;stress

stress&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--cpu&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;That will fill up the usage of 2 cpus. To run 1 vm stressor using 1GB of virtual memory for 60s, enter:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;stress&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--vm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--vm-bytes&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;1G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--vm-keep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;60s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can also stress io with &lt;code&gt;--io 4&lt;/code&gt;, for example to spawn 4 workers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#get-the-latest-tag-of-a-git-repository&#34;&gt;Get the latest tag of a git repository.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;describe&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--tags&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--abbrev&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#configure-gpg-agent-cache-ttl&#34;&gt;Configure gpg-agent cache ttl.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The user configuration (in &lt;code&gt;~/.gnupg/gpg-agent.conf&lt;/code&gt;) can only define the default and maximum caching duration; it can&#39;t be disabled.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;default-cache-ttl&lt;/code&gt; option sets the timeout (in seconds) after the last GnuPG activity (so it resets if you use it), the &lt;code&gt;max-cache-ttl&lt;/code&gt; option set the timespan (in seconds) it caches after entering your password. The default value is 600 seconds (10 minutes) for &lt;code&gt;default-cache-ttl&lt;/code&gt; and 7200 seconds (2 hours) for max-cache-ttl.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;default-cache-ttl 21600
max-cache-ttl 21600
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;For this change to take effect, you need to end the session by restarting &lt;code&gt;gpg-agent&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gpgconf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--kill&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gpg-agent
gpg-agent&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--daemon&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--use-standard-socket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#get-return-code-of-failing-find-exec&#34;&gt;Get return code of failing find exec.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When you run &lt;code&gt;find . -exec ls {} \;&lt;/code&gt; even if the command run in the &lt;code&gt;exec&lt;/code&gt; returns a status code different than 0 &lt;a href=&#34;https://serverfault.com/questions/905031/how-can-i-make-find-return-non-0-if-exec-command-fails&#34;&gt;you&#39;ll get an overall status code of 0&lt;/a&gt; which makes difficult to catch errors in bash scripts.&lt;/p&gt; &lt;p&gt;You can instead use &lt;code&gt;xargs&lt;/code&gt;, for example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/tmp/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-iname&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;*.sh&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-print0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;xargs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;shellcheck
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This will run &lt;code&gt;shellcheck file_name&lt;/code&gt; for each of the files found by the &lt;code&gt;find&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#accept-new-ssh-keys-by-default&#34;&gt;Accept new ssh keys by default.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;While common wisdom is not to disable host key checking, there is a built-in option in SSH itself to do this. It is relatively unknown, since it&#39;s new (added in Openssh 6.5).&lt;/p&gt; &lt;p&gt;This is done with &lt;code&gt;-o StrictHostKeyChecking=accept-new&lt;/code&gt;. Or if you want to use it for all hosts you can add the next lines to your &lt;code&gt;~/.ssh/config&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host *
  StrictHostKeyChecking accept-new
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;WARNING: use this only if you absolutely trust the IP\hostname you are going to SSH to:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;StrictHostKeyChecking&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;accept-new&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mynewserver.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Note, &lt;code&gt;StrictHostKeyChecking=no&lt;/code&gt; will add the public key to &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; even if the key was changed. &lt;code&gt;accept-new&lt;/code&gt; is only for new hosts. From the man page:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;If this flag is set to “accept-new” then ssh will automatically add new host keys to the user known hosts files, but will not permit connections to hosts with changed host keys. If this flag is set to “no” or “off”, ssh will automatically add new host keys to the user known hosts files and allow connections to hosts with changed hostkeys to proceed, subject to some restrictions. If this flag is set to ask (the default), new host keys will be added to the user known host files only after the user has confirmed that is what they really want to do, and ssh will refuse to connect to hosts whose host key has changed. The host keys of known hosts will be verified automatically in all cases.&lt;/p&gt; &lt;/blockquote&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#do-not-add-trailing-/-to-ls&#34;&gt;Do not add trailing / to ls.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Probably, your &lt;code&gt;ls&lt;/code&gt; is aliased or defined as a function in your config files.&lt;/p&gt; &lt;p&gt;Use the full path to &lt;code&gt;ls&lt;/code&gt; like:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/bin/ls&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/var/lib/mysql/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#convert-png-to-svg&#34;&gt;Convert png to svg.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Inkscape has got an awesome auto-tracing tool.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Install Inkscape using &lt;code&gt;sudo apt-get install inkscape&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Import your image&lt;/li&gt; &lt;li&gt;Select your image&lt;/li&gt; &lt;li&gt;From the menu bar, select Path &amp;gt; Trace Bitmap Item&lt;/li&gt; &lt;li&gt;Adjust the tracing parameters as needed&lt;/li&gt; &lt;li&gt;Save as svg&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Check their &lt;a href=&#34;https://inkscape.org/en/doc/tutorials/tracing/tutorial-tracing.html&#34;&gt;tracing tutorial&lt;/a&gt; for more information.&lt;/p&gt; &lt;p&gt;Once you are comfortable with the tracing options. You can automate it by using &lt;a href=&#34;https://inkscape.org/en/doc/inkscape-man.html&#34;&gt;CLI of Inkscape&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#redirect-stdout-and-stderr-of-a-cron-job-to-a-file&#34;&gt;Redirect stdout and stderr of a cron job to a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;*/1 * * * * /home/ranveer/vimbackup.sh &amp;gt;&amp;gt; /home/ranveer/vimbackup.log 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#error-when-unmounting-a-device-target-is-busy&#34;&gt;Error when unmounting a device Target is busy.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Check the processes that are using the mountpoint with &lt;code&gt;lsof /path/to/mountpoint&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Kill those processes&lt;/li&gt; &lt;li&gt;Try the umount again&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If that fails, you can use &lt;code&gt;umount -l&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rtorrent&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/afew/&#34;&gt;Rtorrent&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Remove unneeded dependencies when installing.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate it in favour of qbittorrent.&lt;/p&gt; &lt;p&gt;Use &lt;a href=&#34;https://lyz-code.github.io/blue-book/qbittorrent/&#34;&gt;qbittorrent&lt;/a&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;aleph&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aleph/&#34;&gt;aleph&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add application operations.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aleph/#upgrade-aleph&#34;&gt;How to upgrade it&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aleph/#create-aleph-admins&#34;&gt;Create Aleph admins&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aleph/#remove-a-group&#34;&gt;Remove a group&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/aleph/#ingest-gets-stuck&#34;&gt;Ingest gets stuck.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It looks that Aleph doesn&#39;t yet give an easy way to debug it. It can be seen in the next webs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/alephdata/aleph/issues/2124&#34;&gt;Improve the UX for bulk uploading and processing of large number of files&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/alephdata/aleph/issues/1839&#34;&gt;Document ingestion gets stuck effectively at 100%&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/alephdata/aleph/discussions/1525&#34;&gt;Display detailed ingestion status to see if everything is alright and when the collection is ready&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Some interesting ideas I&#39;ve extracted while diving into these issues is that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;You can also upload files using the &lt;a href=&#34;https://github.com/alephdata/alephclient&#34;&gt;&lt;code&gt;alephclient&lt;/code&gt; python command line tool&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Some of the files might fail to be processed without leaving any hint to the uploader or the viewer.&lt;/li&gt; &lt;li&gt;This results in an incomplete dataset and the users don&#39;t get to know that the dataset is incomplete. This is problematic if the completeness of the dataset is crucial for an investigation.&lt;/li&gt; &lt;li&gt;There is no way to upload only the files that failed to be processed without re-uploading the entire set of documents or manually making a list of the failed documents and re-uploading them&lt;/li&gt; &lt;li&gt;There is no way for uploaders or Aleph admins to see an overview of processing errors to figure out why some files are failing to be processed without going through docker logs (which is not very user-friendly)&lt;/li&gt; &lt;li&gt;There was an attempt to &lt;a href=&#34;https://github.com/alephdata/aleph/issues/2127&#34;&gt;improve the way ingest-files manages the pending tasks&lt;/a&gt;, it&#39;s merged into the &lt;a href=&#34;https://github.com/alephdata/ingest-file/tree/release/4.0.0&#34;&gt;release/4.0.0&lt;/a&gt; branch, but it has &lt;a href=&#34;https://github.com/alephdata/ingest-file/pull/423&#34;&gt;not yet arrived &lt;code&gt;main&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There are some tickets that attempt to address these issues on the command line:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/alephdata/alephclient/issues/34&#34;&gt;Allow users to upload/crawl new files only&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/alephdata/alephclient/issues/35&#34;&gt;Check if alephclient crawldir was 100% successful or not&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I think it&#39;s interesting either to contribute to &lt;code&gt;alephclient&lt;/code&gt; to solve those issues or if it&#39;s complicated create a small python script to detect which files were not uploaded and try to reindex them and/or open issues that will prevent future ingests to fail.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gitsigns&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gitsigns/&#34;&gt;gitsigns&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce gitsigns.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;Gitsigns&lt;/a&gt; is a neovim plugin to create git decorations similar to the vim plugin &lt;a href=&#34;https://github.com/airblade/vim-gitgutter&#34;&gt;gitgutter&lt;/a&gt; but written purely in Lua.&lt;/p&gt; &lt;p&gt;Installation:&lt;/p&gt; &lt;p&gt;Add to your &lt;code&gt;plugins.lua&lt;/code&gt; file:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class=&#34;n&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;lewis6991/gitsigns.nvim&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Install it with &lt;code&gt;:PackerInstall&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Configure it in your &lt;code&gt;init.lua&lt;/code&gt; with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;c1&#34;&gt;-- Configure gitsigns&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;gitsigns&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;on_attach&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bufnr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;package.loaded&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gitsigns&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;opts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;opts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;opts&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;opts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bufnr&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keymap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;opts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;-- Navigation&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;]c&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
      &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;]c&#39;&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;schedule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_hunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;Ignore&amp;gt;&#39;&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;[c&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
      &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;diff&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;[c&#39;&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;schedule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prev_hunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;Ignore&amp;gt;&#39;&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;-- Actions&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gs&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stage_hunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gr&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset_hunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;v&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gs&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stage_hunk&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;v&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;v&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gr&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset_hunk&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;v&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gS&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stage_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gu&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;undo_stage_hunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gR&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reset_buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gp&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;preview_hunk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gb&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;blame_line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;full&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gb&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toggle_current_line_blame&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gd&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;diffthis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;gD&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;diffthis&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;~&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;leader&amp;gt;ge&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toggle_deleted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;-- Text object&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;o&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;x&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;ih&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;:&amp;lt;C-U&amp;gt;Gitsigns select_hunk&amp;lt;CR&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Usage:&lt;/p&gt; &lt;p&gt;Some interesting bindings:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;]c&lt;/code&gt;: Go to next diff chunk&lt;/li&gt; &lt;li&gt;&lt;code&gt;[c&lt;/code&gt;: Go to previous diff chunk&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gs&lt;/code&gt;: Stage chunk, it works both in normal and visual mode&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gr&lt;/code&gt;: Restore chunk from index, it works both in normal and visual mode&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gp&lt;/code&gt;: Preview diff, you can use it with &lt;code&gt;]c&lt;/code&gt; and &lt;code&gt;[c&lt;/code&gt; to see all the chunk diffs&lt;/li&gt; &lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gb&lt;/code&gt;: Show the git blame of the line as a shadowed comment&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;diffview&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/diffview/&#34;&gt;Diffview&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce DiffView.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sindrets/diffview.nvim&#34;&gt;Diffview&lt;/a&gt; is a single tabpage interface for easily cycling through diffs for all modified files for any git rev.&lt;/p&gt; &lt;p&gt;Installation:&lt;/p&gt; &lt;p&gt;If you&#39;re using it with NeoGit and Packer use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class=&#34;n&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&#39;NeogitOrg/neogit&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;requires&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;s1&#34;&gt;&#39;nvim-lua/plenary.nvim&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s1&#34;&gt;&#39;sindrets/diffview.nvim&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;s1&#34;&gt;&#39;nvim-tree/nvim-web-devicons&#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Usage:&lt;/p&gt; &lt;p&gt;Calling &lt;code&gt;:DiffviewOpen&lt;/code&gt; with no args opens a new &lt;code&gt;Diffview&lt;/code&gt; that compares against the current index. You can also provide any valid git rev to view only changes for that rev.&lt;/p&gt; &lt;p&gt;Examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;:DiffviewOpen&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewOpen HEAD~2&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewOpen HEAD~4..HEAD~2&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewOpen d4a7b0d&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewOpen d4a7b0d^!&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewOpen d4a7b0d..519b30e&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewOpen origin/main...HEAD&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can also provide additional paths to narrow down what files are shown &lt;code&gt;:DiffviewOpen HEAD~2 -- lua/diffview plugin&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Additional commands for convenience:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;:DiffviewClose&lt;/code&gt;: Close the current diffview. You can also use &lt;code&gt;:tabclose&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewToggleFiles&lt;/code&gt;: Toggle the file panel.&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewFocusFiles&lt;/code&gt;: Bring focus to the file panel.&lt;/li&gt; &lt;li&gt;&lt;code&gt;:DiffviewRefresh&lt;/code&gt;: Update stats and entries in the file list of the current Diffview.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;With a Diffview open and the default key bindings, you can:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Cycle through changed files with &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;s-tab&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;You can stage changes with &lt;code&gt;-&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Restore a file with &lt;code&gt;X&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Refresh the diffs with &lt;code&gt;R&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Go to the file panel with &lt;code&gt;&amp;lt;leader&amp;gt;e&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/diffview/#use-the-same-binding-to-open-and-close-the-diffview-windows&#34;&gt;Use the same binding to open and close the diffview windows.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;keymap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;n&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;dv&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;diffview.lib&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;views&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;DiffviewOpen&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;DiffviewClose&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;beets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/tridactyl/&#34;&gt;Beets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce tridactyl.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tridactyl/tridactyl&#34;&gt;Tridactyl&lt;/a&gt; is a Vim-like interface for Firefox, inspired by Vimperator/Pentadactyl.&lt;/p&gt; &lt;p&gt;In the article you&#39;ll also find:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/tridactyl/#select-text-from-the-page&#34;&gt;How to select text on the page&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Guide on how to start using it.&lt;/p&gt; &lt;p&gt;You’ll want to set a few basic options before you start using beets. The &lt;a href=&#34;https://beets.readthedocs.io/en/stable/reference/config.html&#34;&gt;configuration&lt;/a&gt; is stored in a text file. You can show its location by running &lt;code&gt;beet config -p&lt;/code&gt;, though it may not exist yet. Run &lt;code&gt;beet config -e&lt;/code&gt; to edit the configuration in your favorite text editor. The file will start out empty, but here’s good place to start:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;~/music&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;library&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;~/data/musiclibrary.db&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The default configuration assumes you want to start a new organized music folder (that directory above) and that you’ll copy cleaned-up music into that empty folder using beets’ &lt;code&gt;import&lt;/code&gt; command. But you can configure beets to behave many other ways:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Start with a new empty directory, but move new music in instead of copying it (saving disk space). Put this in your config file:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;move&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Keep your current directory structure; importing should never move or copy files but instead just correct the tags on music. Put the line &lt;code&gt;copy: no&lt;/code&gt; under the &lt;code&gt;import:&lt;/code&gt; heading in your config file to disable any copying or renaming. Make sure to point &lt;code&gt;directory&lt;/code&gt; at the place where your music is currently stored.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Keep your current directory structure and do not correct files’ tags: leave files completely unmodified on your disk. (Corrected tags will still be stored in beets’ database, and you can use them to do renaming or tag changes later.) Put this in your config file:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;no&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;no&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;to disable renaming and tag-writing.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/beets/#importing-your-library&#34;&gt;Importing your library.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The next step is to import your music files into the beets library database. Because this can involve modifying files and moving them around, data loss is always a possibility, so now would be a good time to make sure you have a recent backup of all your music. We’ll wait.&lt;/p&gt; &lt;p&gt;There are two good ways to bring your existing library into beets. You can either: (a) quickly bring all your files with all their current metadata into beets’ database, or (b) use beets’ highly-refined autotagger to find canonical metadata for every album you import. Option (a) is really fast, but option (b) makes sure all your songs’ tags are exactly right from the get-go. The point about speed bears repeating: using the autotagger on a large library can take a very long time, and it’s an interactive process. So set aside a good chunk of time if you’re going to go that route.&lt;/p&gt; &lt;p&gt;If you’ve got time and want to tag all your music right once and for all, do this:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;beet&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;import&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/path/to/my/music
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;(Note that by default, this command will copy music into the directory you specified above. If you want to use your current directory structure, set the import.copy config option.) To take the fast, un-autotagged path, just say:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;beet&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;import&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-A&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/my/huge/mp3/library
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Note that you just need to add &lt;code&gt;-A&lt;/code&gt; for “don’t autotag”.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gancio&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gancio/&#34;&gt;Gancio&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Gancio.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://gancio.org/&#34;&gt;Gancio&lt;/a&gt; is a shared agenda for local communities.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://gancio.org/&#34;&gt;Docs&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://framagit.org/les/gancio&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://gancio.org/&#34;&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://framagit.org/bcn.convocala/gancio-plugin-telegram-bridge&#34;&gt;Telegram bridge&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gancio/#references&#34;&gt;Add radar squat.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://radar.squat.net&#34;&gt;https://radar.squat.net&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;google-chrome&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/google_chrome/&#34;&gt;google chrome&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Update the installation steps.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Import the GPG key, and use the following command. &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;wget&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-O-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://dl.google.com/linux/linux_signing_key.pub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gpg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--dearmor&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/usr/share/keyrings/google-chrome.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Once the GPG import is complete, you will need to import the Google Chrome repository.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/etc/apt/sources.list.d/google-chrome.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Install the program: &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update
apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;google-chrome-stable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gotify&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gotify/&#34;&gt;Gotify&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce gotify.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gotify/server&#34;&gt;Gotify&lt;/a&gt; is a simple server for sending and receiving messages in real-time per WebSocket.&lt;/p&gt; &lt;p&gt;Not there yet:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/gotify/server/issues/494&#34;&gt;Reactions on the notifications&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;hard-drive-health&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/hard_drive_health/&#34;&gt;Hard drive health&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/hard_drive_health/#check-the-health-of-a-disk-with-smartctl&#34;&gt;Check the disk health with smartctl.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Start with a long self test with &lt;code&gt;smartctl&lt;/code&gt;. Assuming the disk to test is &lt;code&gt;/dev/sdd&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;smartctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-t&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;long&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/sdd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The command will respond with an estimate of how long it thinks the test will take to complete.&lt;/p&gt; &lt;p&gt;To check progress use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;smartctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-A&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/sdd&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;remaining
smartctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/sdd&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;remaining
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Don&#39;t check too often because it can abort the test with some drives. If you receive an empty output, examine the reported status with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;smartctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-l&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;selftest&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/sdd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If errors are shown, check the &lt;code&gt;dmesg&lt;/code&gt; as there are usually useful traces of the error.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/hard_drive_health/#check-the-health-of-a-disk-with-badblocks&#34;&gt;Check the health of a disk with badblocks.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;badblocks&lt;/code&gt; command will write and read the disk with different patterns, thus overwriting the whole disk, so you will loose all the data in the disk.&lt;/p&gt; &lt;p&gt;This test is good for rotational disks as there is no disk degradation on massive writes, do not use it on SSD though.&lt;/p&gt; &lt;p&gt;WARNING: be sure that you specify the correct disk!!&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;badblocks&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-wsv&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/sde&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;disk_analysis_log.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If errors are shown is that all of the spare sectors of the disk are used, so you must not use this disk anymore. Again, check &lt;code&gt;dmesg&lt;/code&gt; for traces of disk errors.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;i3wm&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/i3wm/&#34;&gt;i3wm&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/i3wm/#move-the-focus-to-a-container&#34;&gt;Move the focus to a container.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Get the container identifier with &lt;code&gt;xprop&lt;/code&gt; and then:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;i3-msg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;[title=&#34;khime&#34;]&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;focus
i3-msg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;[class=&#34;Firefox&#34;]&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;focus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/i3wm/#interact-with-python&#34;&gt;Interact with Python.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Install the &lt;code&gt;i3ipc&lt;/code&gt; library:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;i3ipc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Create the connection object:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;i3ipc&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Event&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Interact with i3:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;focused&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_focused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Focused window &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt; is on workspace &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;focused&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;focused&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;workspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;outputs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_outputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Active outputs:&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;active&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;outputs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;focus left&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;container&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_fullscreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;fullscreen&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;con&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;con&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;on_workspace_focus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# The first parameter is the connection to the ipc and the second is an object&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# with the data of the event sent from i3.&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Windows on this workspace:&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;leaves&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
            &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;on_window_focus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;focused&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_focused&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ws_name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;focused&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;workspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;focused&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;window_class&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;rename workspace to &#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#34;&#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ws_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WORKSPACE_FOCUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on_workspace_focus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WINDOW_FOCUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on_window_focus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;i3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;jellyfin&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/&#34;&gt;Jellyfin&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#corrupt:-sqlitepcl.pretty.sqliteexception:-database-disk-image-is-malformed&#34;&gt;Fix Corrupt: SQLitePCL.pretty.SQLiteException: database disk image is malformed.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If your server log file shows SQLite errors like the following example your jellyfin.db file needs attention.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&#39;SQLitePCL.pretty.SQLiteException&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Typical causes of this are sudden and abrupt terminations of the Emby server process, such as a power loss, operating system crash, force killing the server process, etc.&lt;/p&gt; &lt;p&gt;To solve it there are many steps:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#remove-database-locks&#34;&gt;Remove Database Locks&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#check-database-integrity-and-recover-database&#34;&gt;Check Database Integrity and Recover Database&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#reset-library-database-&amp;amp;-load-fresh&#34;&gt;Reset Library Database &amp;amp; Load Fresh&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#restore-watched-history&#34;&gt;Restore watched history.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Jellyfin stores the watched information in one of the &lt;code&gt;.db&lt;/code&gt; files, there are two ways to restore it:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Using scripts that interact with the API like &lt;a href=&#34;https://github.com/mueslimak3r/jelly-jar&#34;&gt;&lt;code&gt;jelly-jar&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/jab416171/jellyfin-backup-watched&#34;&gt;&lt;code&gt;jellyfin-backup-watched&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Running sqlite queries on the database itself.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The user data is stored in the table &lt;code&gt;UserDatas&lt;/code&gt; table in the &lt;code&gt;library.db&lt;/code&gt; database file. The media data is stored in the &lt;code&gt;TypedBaseItems&lt;/code&gt; table of the same database.&lt;/p&gt; &lt;p&gt;Comparing the contents of the tables of the broken database (lost watched content) and a backup database, I&#39;ve seen that the media content is the same after a full library rescan, so the issue was fixed after injecting the missing user data from the backup to the working database through the &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/#import-a-table-from-another-database&#34;&gt;importing a table from another database&lt;/a&gt; sqlite operation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#readonly:-sqlitepcl.pretty.sqliteexception:-attempt-to-write-a-readonly-database&#34;&gt;Fix ReadOnly: SQLitePCL.pretty.SQLiteException: attempt to write a readonly database.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Some of the database files of Jellyfin is not writable by the jellyfin user, check if you changed the ownership of the files, for example in the process of restoring a database file from backup.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#deceptive-site-ahead&#34;&gt;Deceptive site ahead.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It seems that Google is marking the domains that host Jellyfin as deceptive. If it happens to you, your users won&#39;t be able to access your instance with Firefox, Chrome nor the Android app. Nice uh? It&#39;s kind of scary how google is able to control who can access what in the internet without you signing for it.&lt;/p&gt; &lt;p&gt;If you search the problem online they suggest that you log in with your google account into the Search Console and see the reasons behind it. Many people did this and reported in the issue that they didn&#39;t get any useful information through this process. It&#39;s a privacy violation though, as now google is able to tie your identity (as your google account is linked to your phone number) with your Jellyfin domain. Completely disgusting.&lt;/p&gt; &lt;p&gt;To solve this issue you need &lt;a href=&#34;https://safebrowsing.google.com/safebrowsing/report_error/?tpl=mozilla&amp;amp;hl=en&#34;&gt;to file a case with google&lt;/a&gt; and wait for them to unban you. It&#39;s like asking them for permission so that they let your users access your system. The disgust levels keep on growing. Don&#39;t waste your time being creative in the Comments of the request either, it looks like they don&#39;t even read them.&lt;/p&gt; &lt;p&gt;The problem is that until the people from Jellyfin finds a solution, after following this ugly process, you may be flagged again any time in the future (ranging from days to months).&lt;/p&gt; &lt;p&gt;A mitigation of the problem is to have an alternative domain that your users can use (for example in duckdns.org). You may be lucky that google doesn&#39;t block both domains at the same time.&lt;/p&gt; &lt;p&gt;For more information follow the &lt;a href=&#34;https://github.com/jellyfin/jellyfin-web/issues/4076&#34;&gt;Jellyfin issue&lt;/a&gt; or the &lt;a href=&#34;https://www.reddit.com/r/jellyfin/comments/xqk01i/deceptive_site_ahead/&#34;&gt;Jellyfin reddit thread&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#missing-features&#34;&gt;Missing features.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Hide movie or tv show from my gallery: Tracked by these feature requests &lt;a href=&#34;https://features.jellyfin.org/posts/1072/let-the-user-hide-a-movie-or-tv-show&#34;&gt;1&lt;/a&gt; and &lt;a href=&#34;https://features.jellyfin.org/posts/116/add-hide-ignore-for-series-seasons-episodes-as-an-alternative-to-favorite&#34;&gt;2&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#jellyfin-desktop&#34;&gt;Introduce Jellyfin Desktop.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Download the latest deb package from the &lt;a href=&#34;https://github.com/jellyfin/jellyfin-media-player/releases&#34;&gt;releases page&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Install the dependencies&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;dpkg -i&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you&#39;re on a TV you may want to &lt;a href=&#34;https://github.com/jellyfin/jellyfin-media-player/issues/11&#34;&gt;enable the TV mode&lt;/a&gt; so that the remote keys work as expected. The play/pause/next/prev won&#39;t work until &lt;a href=&#34;https://github.com/jellyfin/jellyfin-media-player/issues/3&#34;&gt;this issue is solved&lt;/a&gt;, but it&#39;s not that bad to use the &#34;Ok&#34; and then navigate with the arrow keys.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#jellycon&#34;&gt;Introduce Jellycon.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;JellyCon is a lightweight Kodi add-on that lets you browse and play media files directly from your Jellyfin server within the Kodi interface. It can be thought of as a thin frontend for a Jellyfin server.&lt;/p&gt; &lt;p&gt;It&#39;s not very pleasant to use though.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#forgot-password.-please-try-again-within-your-home-network-to-initiate-the-password-reset-process.&#34;&gt;Forgot Password. Please try again within your home network to initiate the password reset process.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;re an external jellyfin user you can&#39;t reset your password unless you are part of the LAN. This is done because the reset password process is simple and insecure.&lt;/p&gt; &lt;p&gt;If you don&#39;t care about that and still think that the internet is a happy and safe place &lt;a href=&#34;https://wiki.jfa-go.com/docs/password-resets/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/hrfee/jellyfin-accounts/issues/12&#34;&gt;here&lt;/a&gt; are some instructions on how to bypass the security measure.&lt;/p&gt; &lt;p&gt;For more information also read &lt;a href=&#34;https://github.com/jellyfin/jellyfin/issues/2282&#34;&gt;1&lt;/a&gt; and &lt;a href=&#34;https://github.com/jellyfin/jellyfin/issues/2869&#34;&gt;2&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;kitty&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/kitty/&#34;&gt;Kitty&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/kitty/#fonts&#34;&gt;How to add fonts to kitty.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add your fonts to the &lt;code&gt;~/.local/share/fonts&lt;/code&gt; directory&lt;/li&gt; &lt;li&gt;Check they are available when you run &lt;code&gt;kitty +list-fonts&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Add them to your config:&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;font_family      Operator Mono Book
bold_font        Operator Mono Medium
italic_font      Operator Mono Book Italic
bold_italic_font Operator Mono Medium Italic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; feat(kitty#Screen not working on server with sudo): Troubleshoot the Screen not working on server with sudo issue&lt;/p&gt; &lt;p&gt;Make sure you&#39;re using the ssh alias below&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ssh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;kitty +kitten ssh&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;And then copy the &lt;code&gt;~/.terminfo&lt;/code&gt; into &lt;code&gt;/root&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;copy&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;~/.terminfo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;kodi&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/kodi/&#34;&gt;Kodi&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Kodi.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://kodi.tv/&#34;&gt;Kodi&lt;/a&gt; is a entertainment center software. It basically converts your device into a smart tv&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;koel&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/koel/&#34;&gt;Koel&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Koel.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://koel.dev/&#34;&gt;koel&lt;/a&gt; is a personal music streaming server.&lt;/p&gt; &lt;p&gt;Note: Use &lt;a href=&#34;https://lyz-code.github.io/blue-book/mopidy/&#34;&gt;&lt;code&gt;mopidy&lt;/code&gt;&lt;/a&gt; instead&lt;/p&gt; &lt;p&gt;There are &lt;a href=&#34;https://github.com/koel/docker&#34;&gt;docker-compose files&lt;/a&gt; to host the service. Although they behave a little bit weird&lt;/p&gt; &lt;p&gt;For example, you need to &lt;a href=&#34;https://github.com/koel/docker/issues/168&#34;&gt;specify the DB_PORT&lt;/a&gt;. It has had several PR to fix it but weren&#39;t merged &lt;a href=&#34;https://github.com/koel/docker/pull/165/files&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://github.com/koel/docker/pull/162/files&#34;&gt;2&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The API is &lt;a href=&#34;https://github.com/koel/koel/issues/535&#34;&gt;not very well documented&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/X-Ryl669/kutr/wiki/Communication-API#authentication&#34;&gt;Here you can see how to authenticate&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/koel/koel/blob/master/api-docs/api.yaml#L763&#34;&gt;Here are the api docs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;matrix&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/matrix/&#34;&gt;Matrix&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to install matrix.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-y&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;wget&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-transport-https
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;wget&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-O&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/usr/share/keyrings/element-io-archive-keyring.gpg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://packages.element.io/debian/element-io-archive-keyring.gpg
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;deb [signed-by=/usr/share/keyrings/element-io-archive-keyring.gpg] https://packages.element.io/debian/ default main&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/etc/apt/sources.list.d/element-io.list
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;element-desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mediatracker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mediatracker/&#34;&gt;Mediatracker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce MediaTracker.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bonukai/MediaTracker&#34;&gt;MediaTracker&lt;/a&gt; is a self hosted media tracker for movies, tv shows, video games, books and audiobooks&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bonukai/MediaTracker#installation&#34;&gt;Installation&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;With docker compose:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;3&#34;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mediatracker&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;container_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;mediatracker&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;7481:7481&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/home/YOUR_HOME_DIRECTORY/.config/mediatracker/data:/storage&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;assetsVolume:/assets&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;SERVER_LANG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;en&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TMDB_LANG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;en&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;AUDIBLE_LANG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;us&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;TZ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Europe/London&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;bonukai/mediatracker:latest&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;assetsVolume&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;null&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you attach more than one docker network the container becomes unreachable :S.&lt;/p&gt; &lt;p&gt;Install the jellyfin plugin:&lt;/p&gt; &lt;p&gt;They created a &lt;a href=&#34;https://github.com/bonukai/jellyfin-plugin-mediatracker&#34;&gt;Jellyfin plugin&lt;/a&gt; so that all scrobs are sent automatically to the mediatracker&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add new Repository in Jellyfin (Dashboard -&amp;gt; Plugins -&amp;gt; Repositories -&amp;gt; +) from url &lt;code&gt;https://raw.githubusercontent.com/bonukai/jellyfin-plugin-mediatracker/main/manifest.json&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Install MediaTracker plugin from Catalogue (Dashboard -&amp;gt; Plugins -&amp;gt; Catalogue)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Some tips on usage:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add the shows you want to watch to the watchlist so that it&#39;s easier to find them&lt;/li&gt; &lt;li&gt; &lt;p&gt;When you&#39;re ending an episode, click on the episode number on the watchlist element and then rate the episode itself.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You can create public lists to share with the rest of the users, the way to share it though &lt;a href=&#34;https://github.com/bonukai/MediaTracker/issues/527&#34;&gt;is a bit archaic so far&lt;/a&gt;, it&#39;s only through the list link, in the interface they won&#39;t be able to see it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/mediatracker/#alternatives&#34;&gt;Update ryot comparison with mediatracker.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IgnisDa/ryot&#34;&gt;Ryot&lt;/a&gt; has a better web design, it also has a &lt;a href=&#34;https://github.com/IgnisDa/ryot/pull/195&#34;&gt;jellyfin scrobbler&lt;/a&gt;, although it&#39;s not &lt;a href=&#34;https://github.com/IgnisDa/ryot/issues/187&#34;&gt;yet stable&lt;/a&gt;. There are other UI tweaks that is preventing me from migrating to ryot such as &lt;a href=&#34;https://github.com/IgnisDa/ryot/issues/284&#34;&gt;the easier media rating&lt;/a&gt; and &lt;a href=&#34;https://github.com/IgnisDa/ryot/issues/283&#34;&gt;the percentage over five starts rating system&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;retroarch&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/retroarch/&#34;&gt;retroarch&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Install retroarch instructions.&lt;/p&gt; &lt;p&gt;To add the stable branch to your system type:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;add-apt-repository&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ppa:libretro/stable
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update
sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;retroarch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Go to Main Menu/Online Updater and then update everything you can:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Update Core Info Files&lt;/li&gt; &lt;li&gt;Update Assets&lt;/li&gt; &lt;li&gt;Update controller Profiles&lt;/li&gt; &lt;li&gt;Update Databases&lt;/li&gt; &lt;li&gt;Update Overlays&lt;/li&gt; &lt;li&gt;Update GLSL Shaders&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rocketchat&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/rocketchat/&#34;&gt;Rocketchat&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Rocketchat integrations.&lt;/p&gt; &lt;p&gt;Rocket.Chat supports webhooks to integrate tools and services you like into the platform. Webhooks are simple event notifications via HTTP POST. This way, any webhook application can post a message to a Rocket.Chat instance and much more.&lt;/p&gt; &lt;p&gt;With scripts, you can point any webhook to Rocket.Chat and process the requests to print customized messages, define the username and avatar of the user of the messages and change the channel for sending messages, or you can cancel the request to prevent undesired messages.&lt;/p&gt; &lt;p&gt;Available integrations:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Incoming Webhook: Let an external service send a request to Rocket.Chat to be processed.&lt;/li&gt; &lt;li&gt;Outgoing Webhook: Let Rocket.Chat trigger and optionally send a request to an external service and process the response.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;By default, a webhook is designed to post messages only. The message is part of a JSON structure, which has the same format as that of a .&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.rocket.chat/use-rocket.chat/workspace-administration/integrations#incoming-webhook-script&#34;&gt;Incoming webhook script&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;To create a new incoming webhook:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Navigate to Administration &amp;gt; Workspace &amp;gt; Integrations.&lt;/li&gt; &lt;li&gt;Click +New at the top right corner.&lt;/li&gt; &lt;li&gt;Switch to the Incoming tab.&lt;/li&gt; &lt;li&gt;Turn on the Enabled toggle.&lt;/li&gt; &lt;li&gt;Name: Enter a name for your webhook. The name is optional; however, providing a name to manage your integrations easily is advisable.&lt;/li&gt; &lt;li&gt;Post to Channel: Select the channel (or user) where you prefer to receive the alerts. It is possible to override messages.&lt;/li&gt; &lt;li&gt;Post as: Choose the username that this integration posts as. The user must already exist.&lt;/li&gt; &lt;li&gt;Alias: Optionally enter a nickname that appears before the username in messages.&lt;/li&gt; &lt;li&gt;Avatar URL: Enter a link to an image as the avatar URL if you have one. The avatar URL overrides the default avatar.&lt;/li&gt; &lt;li&gt;Emoji: Enter an emoji optionally to use the emoji as the avatar. &lt;a href=&#34;https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md#computer&#34;&gt;Check the emoji cheat sheet&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Turn on the Script Enabled toggle.&lt;/li&gt; &lt;li&gt;Paste your script inside the Script field (check below for a sample script)&lt;/li&gt; &lt;li&gt;Save the integration.&lt;/li&gt; &lt;li&gt;Use the generated Webhook URL to post messages to Rocket.Chat.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The Rocket.Chat integration script should be written in ES2015 / ECMAScript 6. The script requires a global class named Script, which is instantiated only once during the first execution and kept in memory. This class contains a method called &lt;code&gt;process_incoming_request&lt;/code&gt;, which is called by your server each time it receives a new request. The &lt;code&gt;process_incoming_request&lt;/code&gt; method takes an object as a parameter with the request property and returns an object with a content property containing a valid Rocket.Chat message, or an object with an error property, which is returned as the response to the request in JSON format with a Code 400 status.&lt;/p&gt; &lt;p&gt;A valid Rocket.Chat message must contain a text field that serves as the body of the message. If you redirect the message to a channel other than the one indicated by the webhook token, you can specify a channel field that accepts room id or, if prefixed with &#34;#&#34; or &#34;@&#34;, channel name or user, respectively.&lt;/p&gt; &lt;p&gt;You can use the console methods to log information to help debug your script. More information about the console can be found &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Console/log&#34;&gt;here&lt;/a&gt;. . To view the logs, navigate to Administration &amp;gt; Workspace &amp;gt; View Logs.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/* exported Script */
/* globals console, _, s */

/** Global Helpers
 *
 * console - A normal console instance
 * _       - An underscore instance
 * s       - An underscore string instance
 */

class Script {
  /**
   * @params {object} request
   */
  process_incoming_request({ request }) {
    // request.url.hash
    // request.url.search
    // request.url.query
    // request.url.pathname
    // request.url.path
    // request.url_raw
    // request.url_params
    // request.headers
    // request.user._id
    // request.user.name
    // request.user.username
    // request.content_raw
    // request.content

    // console is a global helper to improve debug
    console.log(request.content);

    return {
      content:{
        text: request.content.text,
        icon_emoji: request.content.icon_emoji,
        channel: request.content.channel,
        // &#34;attachments&#34;: [{
        //   &#34;color&#34;: &#34;#FF0000&#34;,
        //   &#34;author_name&#34;: &#34;Rocket.Cat&#34;,
        //   &#34;author_link&#34;: &#34;https://open.rocket.chat/direct/rocket.cat&#34;,
        //   &#34;author_icon&#34;: &#34;https://open.rocket.chat/avatar/rocket.cat.jpg&#34;,
        //   &#34;title&#34;: &#34;Rocket.Chat&#34;,
        //   &#34;title_link&#34;: &#34;https://rocket.chat&#34;,
        //   &#34;text&#34;: &#34;Rocket.Chat, the best open source chat&#34;,
        //   &#34;fields&#34;: [{
        //     &#34;title&#34;: &#34;Priority&#34;,
        //     &#34;value&#34;: &#34;High&#34;,
        //     &#34;short&#34;: false
        //   }],
        //   &#34;image_url&#34;: &#34;https://rocket.chat/images/mockup.png&#34;,
        //   &#34;thumb_url&#34;: &#34;https://rocket.chat/images/mockup.png&#34;
        // }]
       }
    };

    // return {
    //   error: {
    //     success: false,
    //     message: &#39;Error example&#39;
    //   }
    // };
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To test if your integration works, use curl to make a POST request to the generated webhook URL.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-X&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;POST&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-H&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;--data&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;{&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;      &#34;icon_emoji&#34;: &#34;:smirk:&#34;,&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;      &#34;text&#34;: &#34;Example message&#34;&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;  }&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;https://your-webhook-url
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to send the message to another channel or user use the &lt;code&gt;channel&lt;/code&gt; argument with &lt;code&gt;@user&lt;/code&gt; or &lt;code&gt;#channel&lt;/code&gt;. Keep in mind that the user of the integration needs to be part of those channels if they are private.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-X&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;POST&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-H&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;--data&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;{&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;      &#34;icon_emoji&#34;: &#34;:smirk:&#34;,&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;      &#34;channel&#34;: &#34;#notifications&#34;,&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;      &#34;text&#34;: &#34;Example message&#34;&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;  }&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;https://your-webhook-url
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to do more complex things uncomment the part of the attachments.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sed&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sed/&#34;&gt;sed&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce sed snippets.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;tails&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/tails/&#34;&gt;Tails&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add interesting operations on tails.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://tails.net/upgrade/tails/index.en.html&#34;&gt;Upgrading a tails USB&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/tails/comments/qzruhv/changing_window_manager/&#34;&gt;Change the window manager&lt;/a&gt;: Don&#39;t do it, they say it it will break Tails although I don&#39;t understand why&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vdirsyncer&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vdirsyncer/&#34;&gt;vdirsyncer&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Use SHA256 for the verification.&lt;/p&gt; &lt;p&gt;Now SHA1 is not allowed&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Suggest more debuggin steps when connecting to google.&lt;/p&gt; &lt;p&gt;The code has changed and the fix is now different&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#configuration&#34;&gt;Configure nvim with lua.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Nvim moved away from vimscript and now needs to be configured in lua. You can access the config file in &lt;code&gt;~/.config/nvim/init.lua&lt;/code&gt;. It&#39;s not created by default so you need to do it yourself.&lt;/p&gt; &lt;p&gt;In the article it explains how to do the basic configuration with lua:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#configuration&#34;&gt;Set variables&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#key-bindings&#34;&gt;Set key bindings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#spelling&#34;&gt;Set spelling&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#testing&#34;&gt;Set test runners&lt;/a&gt;: With &lt;code&gt;neotest&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#buffer-and-file-management&#34;&gt;Set the buffer and file management&lt;/a&gt;: with &lt;code&gt;Telescope&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#plugin-managers&#34;&gt;Use Plugin managers&lt;/a&gt;: it evaluates the different solutions and then explains how to install and use &lt;code&gt;packer&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#treesitter&#34;&gt;What is and how to use &lt;code&gt;Treesitter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#git&#34;&gt;Set git integration&lt;/a&gt;: Evaluate the different solutions and configure &lt;code&gt;neogit&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#run-lua-snippets&#34;&gt;How to run lua snippets&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And some troubleshooting:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#deal-with-big-files&#34;&gt;How to deal with big files and telescope&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#the-leader-key&#34;&gt;Update the leader key section.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are different opinions on what key to use as the &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; key. The &lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt; is the most comfortable as it&#39;s always close to your thumbs, and it works well with both hands. Nevertheless, you can only use it in normal mode, because in insert &lt;code&gt;&amp;lt;space&amp;gt;&amp;lt;whatever&amp;gt;&lt;/code&gt; will be triggered as you write. An alternative is to use &lt;code&gt;;&lt;/code&gt; which is also comfortable (if you use the english key distribution) and you can use it in insert mode.&lt;/p&gt; &lt;p&gt;If you &lt;a href=&#34;https://stackoverflow.com/questions/30467660/can-we-define-more-than-one-leader-key-in-vimrc&#34;&gt;want to define more than one leader key&lt;/a&gt; you can either:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Change the &lt;code&gt;mapleader&lt;/code&gt; many times in your file: As the value of &lt;code&gt;mapleader&lt;/code&gt; is used at the moment the mapping is defined, you can indeed change that while plugins are loading. For that, you have to explicitly &lt;code&gt;:runtime&lt;/code&gt; the plugins in your &lt;code&gt;~/.vimrc&lt;/code&gt; (and count on the canonical include guard to prevent redefinition later):&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;let&lt;/span&gt; mapleader &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;,&#39;&lt;/span&gt;
runtime&lt;span class=&#34;p&#34;&gt;!&lt;/span&gt; plugin/NERD_commenter.&lt;span class=&#34;k&#34;&gt;vim&lt;/span&gt;
runtime&lt;span class=&#34;p&#34;&gt;!&lt;/span&gt; ...
&lt;span class=&#34;k&#34;&gt;let&lt;/span&gt; mapleader &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;\&#39;&lt;/span&gt;
runime&lt;span class=&#34;p&#34;&gt;!&lt;/span&gt; plugin/mark.&lt;span class=&#34;k&#34;&gt;vim&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; * Use the keys directly instead of using &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;c&#34;&gt;&#34; editing mappings&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;nnoremap&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;something&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;nnoremap&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;something &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;nnoremap&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;and something &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;&#34; window management mappings&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;nnoremap&lt;/span&gt; gw &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;something&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;nnoremap&lt;/span&gt; gb &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;something &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Defining &lt;code&gt;mapleader&lt;/code&gt; and/or using &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; may be useful if you change your mind often on what key to use a leader but it won&#39;t be of any use if your mappings are stable.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#follow-symbolic-links&#34;&gt;Configure Telescope to follow symbolic links.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;By default symbolic links are not followed either for files or directories, to enable it use&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class=&#34;nb&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;telescope&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setup&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pickers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;find_files&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;follow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#run-a-command-when-opening-vim&#34;&gt;Run a command when opening vim.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvim&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;:DiffViewOpen&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Update treesitter language definitions.&lt;/p&gt; &lt;p&gt;To do so you need to run:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;TSInstall &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To update the parsers run&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;TSUpdate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#telescope-changes-working-directory-when-opening-a-file&#34;&gt;Telescope changes working directory when opening a file.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In my case was due to a snippet I have to remember the folds:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vim.cmd[[
  augroup remember_folds
    autocmd!
    autocmd BufWinLeave * silent! mkview
    autocmd BufWinEnter * silent! loadview
  augroup END
]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;It looks that it had saved a view with the other working directory so when a file was loaded the &lt;code&gt;cwd&lt;/code&gt; changed. To solve it I created a new &lt;code&gt;mkview&lt;/code&gt; in the correct directory.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#concealment&#34;&gt;Concealment.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Some plugins allow the conceal of some text, for example in orgmode you will only see the text of the description of a link and not the content, making it more pleasant to read. To enable it set in your config:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;c1&#34;&gt;-- Conceal links&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- https://github.com/nvim-orgmode/orgmode#links-are-not-concealed&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;-- Use visual mode to navigate through the hidden text&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;opt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;conceallevel&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;vim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;opt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;concealcursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;nc&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;conceallevel&lt;/code&gt;: Determine how text with the &#34;conceal&#34; syntax attribute is shown:&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;0&lt;/code&gt;: Text is shown normally&lt;/p&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;1&lt;/code&gt;: Each block of concealed text is replaced with one character. If the syntax item does not have a custom replacement character defined the character defined in &#39;listchars&#39; is used (default is a space). It is highlighted with the &#34;Conceal&#34; highlight group.&lt;/li&gt; &lt;li&gt;&lt;code&gt;2&lt;/code&gt;: Concealed text is completely hidden unless it has a custom replacement character defined.&lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;3&lt;/code&gt;: Concealed text is completely hidden.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;concealcursor&lt;/code&gt;: Sets the modes in which text in the cursor line can also be concealed. When the current mode is listed then concealing happens just like in other lines.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;n&lt;/code&gt;: Normal mode&lt;/li&gt; &lt;li&gt;&lt;code&gt;v&lt;/code&gt;: Visual mode&lt;/li&gt; &lt;li&gt;&lt;code&gt;i&lt;/code&gt;: Insert mode&lt;/li&gt; &lt;li&gt;&lt;code&gt;c&lt;/code&gt;: Command line editing, for &#39;incsearch&#39;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A useful value is &lt;code&gt;nc&lt;/code&gt;. So long as you are moving around text is concealed, but when starting to insert text or selecting a Visual area the concealed text is displayed, so that you can see what you are doing.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#email-inside-nvim&#34;&gt;Email inside nvim.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The best looking one is himalaya&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://pimalaya.org/himalaya/index.html&#34;&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://git.sr.ht/%7Esoywod/himalaya-vim&#34;&gt;Nvim plugin&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/soywod/himalaya&#34;&gt;Source&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;yq&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/yq/&#34;&gt;yq&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce yq.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mikefarah/yq&#34;&gt;yq&lt;/a&gt; is a portable command-line YAML, JSON, XML, CSV, TOML and properties processor. It uses &lt;code&gt;jq&lt;/code&gt; like syntax but works with yaml files as well as json, xml, properties, csv and tsv. It doesn&#39;t yet support everything &lt;code&gt;jq&lt;/code&gt; does - but it does support the most common operations and functions, and more is being added continuously.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/yq/#find-and-update-items-in-an-array&#34;&gt;Find and update items in an array.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We have an array and we want to update the elements with a particular name.&lt;/p&gt; &lt;p&gt;Given a &lt;code&gt;sample.yaml&lt;/code&gt; file of:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Foo&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;numBuckets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Bar&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;numBuckets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then &lt;code&gt;yq &#39;(.[] | select(.name == &#34;Foo&#34;) | .numBuckets) |= . + 1&#39; sample.yaml&lt;/code&gt; will output:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Foo&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;numBuckets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Bar&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;numBuckets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/yq/#iterate-over-the-elements-of-a-query-with-a-bash-loop&#34;&gt;Iterate over the elements of a query with a bash loop.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;readarray&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;dependencies&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;yq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;j&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-I&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.roles[]&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;requirements.yaml&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;dependency&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dependency&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;yq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.src&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt; &lt;h4 id=&#34;grapheneos&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/grapheneos/&#34;&gt;GrapheneOS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/grapheneos/#split-the-screen&#34;&gt;Split the screen.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Go into app switcher, tap on the app icon above the active app and then select &#34;Split top&#34;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;libretube&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/libretube/&#34;&gt;LibreTube&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Libretube.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/libre-tube/LibreTube&#34;&gt;Libretube&lt;/a&gt; is an alternative frontend for YouTube, for Android.&lt;/p&gt; &lt;p&gt;YouTube has an extremely invasive privacy policy which relies on using user data in unethical ways. They store a lot of your personal data - ranging from ideas, music taste, content, political opinions, and much more than you think.&lt;/p&gt; &lt;p&gt;This project is aimed at improving the users&#39; privacy by being independent from Google and bypassing their data collection.&lt;/p&gt; &lt;p&gt;Therefore, the app is using the &lt;a href=&#34;https://github.com/TeamPiped/Piped&#34;&gt;Piped API&lt;/a&gt;, which uses proxies to circumvent Google&#39;s data collection and includes some other additional features.&lt;/p&gt; &lt;p&gt;Differences to NewPipe:&lt;/p&gt; &lt;p&gt;With NewPipe, the extraction is done locally on your phone, and all the requests sent towards YouTube/Google are done directly from the network you&#39;re connected to, which doesn&#39;t use a middleman server in between. Therefore, Google can still access information such as the user&#39;s IP address. Aside from that, subscriptions can only be stored locally.&lt;/p&gt; &lt;p&gt;LibreTube takes this one step further and proxies all requests via Piped (which uses the NewPipeExtractor). This prevents Google servers from accessing your IP address or any other personal data. Apart from that, Piped allows syncing your subscriptions between LibreTube and Piped, which can be used on desktop too.&lt;/p&gt; &lt;p&gt;If the NewPipeExtractor breaks, it only requires an update of Piped and not LibreTube itself. Therefore, fixes usually arrive faster than in NewPipe.&lt;/p&gt; &lt;p&gt;While LibreTube only supports YouTube, NewPipe also allows the use of other platforms like SoundCloud, PeerTube, Bandcamp and media.ccc.de. Both are great clients for watching YouTube videos. It depends on the individual&#39;s use case which one fits their needs better.&lt;/p&gt; &lt;p&gt;Other software that uses Piped:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/yattee/yattee&#34;&gt;Yattee&lt;/a&gt; - an alternative frontend for YouTube, for IOS.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/Hyperpipe/Hyperpipe&#34;&gt;Hyperpipe&lt;/a&gt; - an alternative privacy respecting frontend for YouTube Music.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/Bellisario/musicale&#34;&gt;Musicale&lt;/a&gt; - an alternative to YouTube Music, with style.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/n-ce/ytify&#34;&gt;ytify&lt;/a&gt; - a complementary minimal audio streaming frontend for YouTube.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/prateekmedia/pstube&#34;&gt;PsTube&lt;/a&gt; - Watch and download videos without ads on Android, Linux, Windows, iOS, and Mac OSX.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/mmjee/Piped-Material&#34;&gt;Piped-Material&lt;/a&gt; - A fork of Piped, focusing on better performance and a more usable design.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/NeeRaj-2401/ReacTube&#34;&gt;ReacTube&lt;/a&gt; - Privacy friendly &amp;amp; distraction free Youtube front-end using Piped API.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;happycow&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/happycow/&#34;&gt;HappyCow&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Happycow.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.happycow.net/&#34;&gt;Happycow&lt;/a&gt; is a web application and android app to search vegan restaurants nearby.&lt;/p&gt; &lt;p&gt;The android app requires google services to work :(.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;orgzly&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/orgzly/&#34;&gt;Orgzly&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Orgzly.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://orgzly.com/&#34;&gt;Orgzly&lt;/a&gt; is an android application to interact with &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgmode/&#34;&gt;orgmode&lt;/a&gt; files.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgzly/#avoid-the-conflicts-in-the-files-edited-in-two-places&#34;&gt;Avoid the conflicts in the files edited in two places.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you use syncthing you may be seeing conflicts in your files. This happens specially if you use the Orgzly widget to add tasks, this is because it doesn&#39;t synchronize the files to the directory when using the widget. If you have a file that changes a lot in a device, for example the &lt;code&gt;inbox.org&lt;/code&gt; of my mobile, it&#39;s interesting to have a specific file that&#39;s edited mainly in the mobile, and when you want to edit it elsewhere, you sync as specified below and then process with the editing. Once it&#39;s done manually sync the changes in orgzly again. The rest of the files synced to the mobile are for read only reference, so they rarely change.&lt;/p&gt; &lt;p&gt;If you want to sync reducing the chance of conflicts then:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Open Orgzly and press Synchronize&lt;/li&gt; &lt;li&gt;Open Syncthing.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If that&#39;s not enough &lt;a href=&#34;https://github.com/orgzly/orgzly-android/issues/8&#34;&gt;check these automated solutions&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://gist.github.com/fabian-thomas/6f559d0b0d26737cf173e41cdae5bfc8&#34;&gt;Orgzly auto syncronisation for sync tools like syncthing&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/doak/orgzly-watcher/-/blob/master/watch-for-orgzly?ref_type=heads&#34;&gt;watch-for-orgzly&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Other interesting solutions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/anoduck/org-orgzly&#34;&gt;org-orgzly&lt;/a&gt;: Script to parse a chosen org file or files, check if an entry meets required parameters, and if it does, write the entry in a new file located inside the folder you desire to sync with orgzly.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/orgzly/orgzly-android/issues/24&#34;&gt;Git synchronization&lt;/a&gt;: I find it more cumbersome than syncthing but maybe it&#39;s interesting for you.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/orgzly/#references&#34;&gt;Add new orgzly fork.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/orgzly-revived/orgzly-android-revived&#34;&gt;Alternative fork maintained by the community&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;seedvault&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/seedvault/&#34;&gt;Seedvault&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce seedvault.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://calyxinstitute.org/projects/seedvault-encrypted-backup-for-android&#34;&gt;Seedvault&lt;/a&gt; is an open-source encrypted backup app for inclusion in Android-based operating systems.&lt;/p&gt; &lt;p&gt;While every smartphone user wants to be prepared with comprehensive data backups in case their phone is lost or stolen, not every Android user wants to entrust their sensitive data to Google&#39;s cloud-based storage. By storing data outside Google&#39;s reach, and by using client-side encryption to protect all backed-up data, Seedvault offers users maximum data privacy with minimal hassle.&lt;/p&gt; &lt;p&gt;Seedvault allows Android users to store their phone data without relying on Google&#39;s proprietary cloud storage. Users can decide where their phone&#39;s backup will be stored, with options ranging from a USB flash drive to a remote self-hosted cloud storage alternative such as NextCloud. Seedvault also offers an Auto-Restore feature: instead of permanently losing all data for an app when it is uninstalled, Seedvault&#39;s Auto-Restore will restore all backed-up data for the app upon reinstallation.&lt;/p&gt; &lt;p&gt;Seedvault protects users&#39; private data by encrypting it on the device with a key known only to the user. Each Seedvault account is protected by client-side encryption (AES/GCM/NoPadding). This encryption is unlockable only with a 12-word randomly-generated key.&lt;/p&gt; &lt;p&gt;With Seedvault, backups run automatically in the background of the phone&#39;s operating system, ensuring that no data will be left behind if the device is lost or stolen. The Seedvault application requires no technical knowledge to operate, and does not require a rooted device.&lt;/p&gt; &lt;p&gt;In the article you&#39;ll also find:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;How to install it&lt;/li&gt; &lt;li&gt;How to store the backup remotely&lt;/li&gt; &lt;li&gt;How to restore a backup&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;signal&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/signal/&#34;&gt;Signal&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add installation steps.&lt;/p&gt; &lt;p&gt;These instructions only work for 64 bit Debian-based Linux distributions such as Ubuntu, Mint etc.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Install our official public software signing key&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-O-&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://updates.signal.org/desktop/apt/keys.asc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;gpg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--dearmor&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;signal-desktop-keyring.gpg
cat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;signal-desktop-keyring.gpg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/usr/share/keyrings/signal-desktop-keyring.gpg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Add our repository to your list of repositories&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;tee&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/etc/apt/sources.list.d/signal-xenial.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;Update your package database and install signal&lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;signal-desktop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;dancing&#34;&gt;Dancing&lt;/h3&gt; &lt;h4 id=&#34;shag&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/shag/&#34;&gt;Shag&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add awesome Shag videos.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Sandy Lewis and Martí Gasol:&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=CpaicCRacF0&#34;&gt;Warsaw Collegiate Shag Festival 2017&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=8iIEFtoro_Y&#34;&gt;Warsaw Collegiate Shag Festival 2016&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Cherry Moreno and Filip Gorski:&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=Rzi5MUYaRrM&#34;&gt;BCN Shag Festival 2018&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=Co94T2f3Pw4&#34;&gt;RTSF 2019&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Stephen and Chandrae:&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=dRQ-RsAXdEM&#34;&gt;Minor Swing&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[RTSF 2013](&lt;a href=&#34;https://yewtu.be/watch?v=uUGsLoZYXb4&#34;&gt;https://yewtu.be/watch?v=uUGsLoZYXb4&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=krEtvtJMbxg&#34;&gt;RTSF 2016 with Arnas and Egle&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=pUt3_ybtxoU&#34;&gt;MBSW 2013&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Warsaw Shag team&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=QGJAIKyW7r4&#34;&gt;Dragon Swing 2016&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=0DHUfThIrlA&#34;&gt;Warsaw Shag Festival 2018&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=6wasM8nF9gg&#34;&gt;Warsaw Shag Festival 2017&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;lindy-hop&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/lindy/&#34;&gt;Lindy Hop&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: New Charleston, lindy and solo jazz videos.&lt;/p&gt; &lt;p&gt;Charleston:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The DecaVita Sisters:&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OV6ZDuczkag&#34;&gt;Freestyle Lindy Hop &amp;amp; Charleston&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ciMFQnwfp50&#34;&gt;Moby &#34;Honey&#34;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Solo Jazz:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=pmxn2uIVuUY&#34;&gt;Pedro Vieira at Little Big Swing Camp 2022&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Lindy Hop:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The DecaVita Sisters:&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://youtu.be/3DhD2u5Eyv8?si=2WKisSvEB3Z8TVMy&#34;&gt;Compromise - agreement in the moment&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qkdxcdeicLE&#34;&gt;Lindy hop improv&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/lindy/#charleston&#34;&gt;Add Hellzapopping videos.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=ahoJReiCaPk&#34;&gt;Short version&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=aQia-42W-v8&#34;&gt;Long version&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;maker&#34;&gt;Maker&lt;/h3&gt; &lt;h4 id=&#34;vial&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vial/&#34;&gt;Vial&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Vial.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://get.vial.today/&#34;&gt;Vial&lt;/a&gt; is an open-source cross-platform (Windows, Linux and Mac) GUI and a QMK fork for configuring your keyboard in real time.&lt;/p&gt; &lt;p&gt;Even though you can use a &lt;a href=&#34;https://vial.rocks/&#34;&gt;web version&lt;/a&gt; you can install it locally through an &lt;a href=&#34;https://itsfoss.com/use-appimage-linux/&#34;&gt;AppImage&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Download &lt;a href=&#34;https://get.vial.today/download/&#34;&gt;the latest version&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Give it execution permissions&lt;/li&gt; &lt;li&gt;Add the file somewhere in your &lt;code&gt;$PATH&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;On linux you &lt;a href=&#34;https://get.vial.today/manual/linux-udev.html&#34;&gt;need to configure an &lt;code&gt;udev&lt;/code&gt; rule&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For a universal access rule for any device with Vial firmware, run this in your shell while logged in as your user (this will only work with sudo installed):&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;USER_GID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;id&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-g&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--preserve-env&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;USER_GID&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sh&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;echo &#34;KERNEL==\&#34;hidraw*\&#34;, SUBSYSTEM==\&#34;hidraw\&#34;, ATTRS{serial}==\&#34;*vial:f64c2b3c*\&#34;, MODE=\&#34;0660\&#34;, GROUP=\&#34;$USER_GID\&#34;, TAG+=\&#34;uaccess\&#34;, TAG+=\&#34;udev-acl\&#34;&#34; &amp;gt; /etc/udev/rules.d/99-vial.rules &amp;amp;&amp;amp; udevadm control --reload &amp;amp;&amp;amp; udevadm trigger&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This command will automatically create a &lt;code&gt;udev&lt;/code&gt; rule and reload the &lt;code&gt;udev&lt;/code&gt; system.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;video-gaming&#34;&gt;Video Gaming&lt;/h3&gt; &lt;h4 id=&#34;age-of-empires&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/age_of_empires/&#34;&gt;Age of Empires&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add guides on how to play.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=JsTNM7j6fs4&amp;amp;t=119&#34;&gt;Fast castle boom&lt;/a&gt;&lt;/li&gt; &lt;li&gt;How to play Arena: &lt;a href=&#34;https://piped.video/watch?v=8gXI4XGMPzQ&amp;amp;t=0&#34;&gt;Hera&#39;s guide&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=3qg4Xwm8CAo&amp;amp;t=1211&#34;&gt;Tatoh game in arena&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=DdK8QveBegw&amp;amp;t=652&#34;&gt;How to play Hideout&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1V_jsU9PF8Y&#34;&gt;How to play Blackforest&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Inside the mind of a pro player: &lt;a href=&#34;https://www.youtube.com/watch?v=54hRmrdzO-I&#34;&gt;Episode 1&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=sZCs6dwH5qk&amp;amp;t=1727&#34;&gt;Episode 2&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/age_of_empires/#-strategies-against-civilisations&#34;&gt;Strategies against civilisations.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;m using only the mongols, and so far I&#39;ve seen/heard from the pros the next strategies:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Aztecs:&lt;ul&gt; &lt;li&gt;Steppe lancers good against eagle warriors&lt;/li&gt; &lt;li&gt;Heavy scorpions against eagle warriors and skirms&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Cumans:&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=H9QUNtFII1g&amp;amp;t=0&#34;&gt;Scout, if it drops two TCs in feudal, tower rush into archers&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=R9qaFZzZgBY&amp;amp;t=1925&#34;&gt;Put initial pressure&lt;/a&gt;: Nice initial pressure&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Incas:&lt;ul&gt; &lt;li&gt;Steppe lancers good against eagle warriors&lt;/li&gt; &lt;li&gt;Heavy scorpions against eagle warriors and skirms&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Khmer: boom, map control, monks and albadiers&lt;/li&gt; &lt;li&gt;Mayans:&lt;ul&gt; &lt;li&gt;Steppe lancers good against eagle warriors&lt;/li&gt; &lt;li&gt;Heavy scorpions against eagle warriors and skirms&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Romans:&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=SA44-Y3XUy0&amp;amp;t=842&#34;&gt;Hera guide on how to beat them&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Tartars: heavy scorpions&lt;/li&gt; &lt;li&gt;Turks:&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AI_JRA_nCpw&amp;amp;t=3710&#34;&gt;How to defend against them in Arena&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/age_of_empires/#nice-games&#34;&gt;Nice games.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Tournaments:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;2023 Masters of Arena 7 Final Tatoh vs Vinchester:&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=3qg4Xwm8CAo&amp;amp;t=1211s&#34;&gt;Casted by T90&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AI_JRA_nCpw&amp;amp;t=8854&#34;&gt;Pov by Tatoh&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Showmatches:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AlKMRQNMVzo&amp;amp;t=4306&#34;&gt;Hera vs TheViper | Battlegrounds 3 | BO5&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5_p3TXasBHY&amp;amp;t=5319&#34;&gt;The Viper VS Tatoh PA7&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;1vs1 games:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=iZ7eWLLbh34&#34;&gt;Hindustanis vs Portuguese | Arabia | Hera vs Yo&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=tZyVLDwBfd4&#34;&gt;Dravidians vs Turks | African Clearing | Hera vs Yo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: How to fight Vietnamese with Mongols.&lt;/p&gt; &lt;p&gt;Gain early map control with scouts, then switch into steppe lancers and front siege, finally castle in the face when you clicked to imperial.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://yewtu.be/watch?v=20bktCBldcw&#34;&gt;Example Hera vs Mr.Yo in TCI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/age_of_empires/#references&#34;&gt;Added references.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@HeraAgeofEmpires2&#34;&gt;Hera channel&lt;/a&gt;: Awesome to learn to play&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@Hera-Gameplay&#34;&gt;Hera gameplay channel&lt;/a&gt;: Good 1&lt;sup&gt;st&lt;/sup&gt; person point of view games&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/@TaToHAoE&#34;&gt;Tatoh channel&lt;/a&gt;: Good spanish content.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;gardening&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gardening/&#34;&gt;Gardening&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gardening/#fertilizing-with-manure&#34;&gt;Fertilizing with manure.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Manure is one of the best organic fertilizers for plants. It&#39;s made by the accumulation of excrements of bats, sea birds and seals and it usually doesn&#39;t contain additives or synthetic chemical components.&lt;/p&gt; &lt;p&gt;This fertilizer is rich in nitrogen, phosphorus and potassium, which are key minerals for the growth of plants. These components help the regeneration of the soil, the enrichment in terms of nutrients and also acts as fungicide preventing plagues.&lt;/p&gt; &lt;p&gt;Manure is a fertilizer of slow absorption, which means that it&#39;s released to the plants in an efficient, controlled and slow pace. That way the plants take the nutrients when they need them.&lt;/p&gt; &lt;p&gt;The best moment to use it is at spring and depending on the type of plant you should apply it between each month and a half and three months. It&#39;s use in winter is not recommended, as it may burn the plant&#39;s roots.&lt;/p&gt; &lt;p&gt;Manure can be obtained in dust or liquid state. The first is perfect to scatter directly over the earth, while the second is better used on plant pots. You don&#39;t need to use much, in fact, with just a pair of spoons per pot is enough. Apply it around the base of the plant, avoiding it&#39;s touch with leaves, stem or exposed roots, as it may burn them. After you apply them remember to water them often, keep in mind that it&#39;s like a heavy greasy sandwich for the plants, and they need water to digest it.&lt;/p&gt; &lt;p&gt;For my indoor plants I&#39;m going to apply a small dose (one spoon per plant) at the start of Autumn (first days of September), and two spoons at the start of spring (first days of March).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;emojis&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/emojis/&#34;&gt;Emojis&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/emojis/#most-used&#34;&gt;Create a list of most used emojis.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;¯\(°_o)/¯

¯\_(ツ)_/¯

(╯°□°)╯ ┻━┻

＼\ ٩( ᐛ )و /／

(✿◠‿◠)

(/ﾟДﾟ)/

(¬º-°)¬

(╥﹏╥)

ᕕ( ᐛ )ᕗ

ʕ•ᴥ•ʔ

( ˘ ³˘)♥

❤
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add new emojis.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;(╥_╥)
(*≧▽≦)ﾉｼ))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;science&#34;&gt;Science&lt;/h2&gt; &lt;h3 id=&#34;math&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/math/&#34;&gt;Math&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/math/#videos&#34;&gt;Add 3Blue1Brown videos.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw&#34;&gt;3Blue1Brown&lt;/a&gt;. Recomended by &lt;a href=&#34;https://ncase.me/&#34;&gt;Nicky Case&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Update introduction.&lt;/p&gt; &lt;p&gt;The method was described by David Allen in a book with the same name. It&#39;s clear that the book is the corner stone of David&#39;s business. He is selling his method on every word, some times to the point of tiresome. It&#39;s also repeats the same ideas on different parts of the book, I guess that&#39;s good in terms of sticking an idea in the people&#39;s mind, but if you&#39;re already convinced and are trying to sum up the book it&#39;s like, hey, I have 90% of the valuable contents of this chapter already in my summary. It&#39;s obvious too the context of the writer, that the book was written a while ago and who does it write to. It talks quite often about assistants, bosses of high firm companies he&#39;s helped, preferring low-tech physical solutions over digital ones, a lot of references about parenting... If you&#39;re able to ignore all the above, it&#39;s actually a very good book. The guy has been polishing the method for more than 30 years, and has pretty nice ideas that can change how you manage your life.&lt;/p&gt; &lt;p&gt;My idea of this summary is to try to extract the useful ideas removing all those old-fashioned capitalist values from it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Guides on processing your inbox.&lt;/p&gt; &lt;p&gt;Remember to follow the next rules while processing the items:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Process the top item first: that way you treat each element equally, so the &#34;least&#34; important ones are not left dangling forever in your inbox thus thwarting it&#39;s purpose.&lt;/li&gt; &lt;li&gt;Process one item at a time.&lt;/li&gt; &lt;li&gt;Never put anything back into “in.”&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For each element you need to ask yourself: &#34;What&#39;s the next action?&#34;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: How to clarify your inbox items.&lt;/p&gt; &lt;p&gt;If you can do something about the element, you need to think which is the next physical, visible activity that would be required to move the situation towards closure. It&#39;s tricky, something like &#34;set meeting&#34; won&#39;t do because it&#39;s not descriptive of physical behaviour. There is still stuff to decide how, when, with whom, if you don&#39;t do it now you won&#39;t empty your head and the uncertainty will create a psychological gap that will make you procrastinate, so define the next action now. &#34;Decide what to do about X&#34; doesn&#39;t work either, you may need to gather more information on the topic, but deciding doesn&#39;t take time.&lt;/p&gt; &lt;p&gt;Once you have the next action, if it can be done in two minutes or less, do it when you first pick the item up. Even if it is not a high-priority one, do it now if you’re ever going to do it at all. The rationale for the two-minute rule is that it’s more or less the point where it starts taking longer to store and track an item than to deal with it the first time it’s in your hands. Two minutes is just a guideline. If you have a long open window of time in which to process your in-tray, you can extend the cutoff for each item to five or ten minutes. If you’ve got to get to the bottom of all your input rapidly, then you may want to shorten the time to one minute, or even thirty seconds, so you can get through everything a little faster.&lt;/p&gt; &lt;p&gt;There’s nothing you really need to track about your two-minute actions. Just do them. If, however, you take an action and don’t finish the project with that one action, you’ll need to clarify what’s next on it, and manage that according to the same criteria.&lt;/p&gt; &lt;p&gt;If the next action is going to take longer than two minutes, ask yourself, “Am I the best person to be doing it?” If not, hand it off to the appropriate person, in order of priority:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Send an e-mail.&lt;/li&gt; &lt;li&gt;Write a note or an over-note on paper and route it to that person.&lt;/li&gt; &lt;li&gt;Send it a instant message.&lt;/li&gt; &lt;li&gt;Add it as an agenda item on a list for your next real-time conversation with that person.&lt;/li&gt; &lt;li&gt;Talk with her directly, either face-to-face or by phone.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When you hand it off to someone else, and if you care at all whether something happens as a result, you’ll need to track it. Depending on how active you need to be it can go to your Waiting list or to your tickler.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate pydo.&lt;/p&gt; &lt;p&gt;I&#39;m happy with orgmode so far, so I&#39;m not going to continue it&#39;s development&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: UPGRADE FAILED: another operation (install/upgrade/rollback) is in progress.&lt;/p&gt; &lt;p&gt;This error can happen for few reasons, but it most commonly occurs when there is an interruption during the upgrade/install process as you already mentioned.&lt;/p&gt; &lt;p&gt;To fix this one may need to, first rollback to another version, then reinstall or helm upgrade again.&lt;/p&gt; &lt;p&gt;Try below command to list the available charts:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;helm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ls&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--namespace&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;namespace&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You may note that when running that command ,it may not show any columns with information. If that&#39;s the case try to check the history of the previous deployment&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;helm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;history&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;release&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--namespace&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;namespace&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This provides with information mostly like the original installation was never completed successfully and is pending state something like STATUS: &lt;code&gt;pending-upgrade&lt;/code&gt; state.&lt;/p&gt; &lt;p&gt;To escape from this state, use the rollback command:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;helm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rollback&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;release&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;revision&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--namespace&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;namespace&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;code&gt;revision&lt;/code&gt; is optional, but you should try to provide it.&lt;/p&gt; &lt;p&gt;You may then try to issue your original command again to upgrade or reinstall.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Ansible retry a failed job.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;/usr/bin/false&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;retries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;delay&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;3&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;result&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;until&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;result.rc == 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Bookwyrm.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://joinbookwyrm.com/&#34;&gt;Bookwyrm&lt;/a&gt; is a social network for tracking your reading, talking about books, writing reviews, and discovering what to read next. Federation allows BookWyrm users to join small, trusted communities that can connect with one another, and with other ActivityPub services like Mastodon and Pleroma.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Elastic security.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.elastic.co/security&#34;&gt;Elastic security&lt;/a&gt; is a program to protect, investigate, and respond to complex threats by unifying the capabilities of SIEM, endpoint security, and cloud security.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce RSS.&lt;/p&gt; &lt;p&gt;Note: This post is a shameless direct copy of &lt;a href=&#34;https://ncase.me/rss/&#34;&gt;Nicky beautiful post, read it there as it has beautiful illustrations&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ncase.me/rss/&#34;&gt;What is RSS (Really Simple Syndication)?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Imagine an open version of Twitter or Facebook News Feed, with no psy-op ads, owned by no oligopoly, manipulated by no algorithm, and all under your full control.&lt;/p&gt; &lt;p&gt;Imagine a version of the newsletter where you don&#39;t have to worry about them selling your email to scammers, labyrinth-like unsubscribe pages, or stuffing your inbox with ever more crap.&lt;/p&gt; &lt;p&gt;Now imagine this existed and was extremely popular 15 years ago. Then we got suckered by the shiny walled gardens.&lt;/p&gt; &lt;p&gt;Well, it&#39;s time to make like a tree and go back to the future, baby!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ncase.me/rss/&#34;&gt;How does RSS work?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Unlike newsletters where give each publisher your email (and they may abuse that trust), RSS works on a &#34;don&#39;t call me, I&#39;ll call you&#34; policy.&lt;/p&gt; &lt;p&gt;An RSS feed is a text file on a website. It&#39;s just a bunch of posts – no tracking or &#34;personalization&#34; – like a printed newspaper:&lt;/p&gt; &lt;p&gt;Then, whatever RSS reader app you use – you can use any app made by anyone – it&#39;ll call the websites for the feeds you specifically opted into, no more or less. The websites can&#39;t force it in the other direction.&lt;/p&gt; &lt;p&gt;Your app then shows you your posts in good ol&#39; reverse chronological order. (Some apps let you add extra filters, but unlike social media algorithms, you control &#39;em.) Apps also make the posts prettier than raw text:&lt;/p&gt; &lt;p&gt;Really Simple, indeed!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ncase.me/rss/&#34;&gt;Cool, how do I get started?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;First, you need a reader app. Such as the minimalist &lt;a href=&#34;https://www.inoreader.com/&#34;&gt;Inoreader&lt;/a&gt;, but &lt;a href=&#34;https://feedly.com/&#34;&gt;Feedly&lt;/a&gt; is the most popular, and folks use &lt;a href=&#34;https://theoldreader.com/&#34;&gt;The Old Reader&lt;/a&gt;. See this &lt;a href=&#34;https://zapier.com/blog/best-rss-feed-reader-apps/&#34;&gt;list of readers&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;To add a feed to your app, just paste a link to the blog/site, and your app will automatically find the feed! RSS also lets you follow creators on YouTube, Substack, Medium, and more.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ncase.me/rss/&#34;&gt;Tips for using RSS wisely&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Beware the hoarder instinct. No algorithm can save you from hoarding feeds &#34;just in case&#34;, then being overwhelmed. The only cure is to ruthlessly Marie Kondo that crap – if a feed doesn&#39;t consistently enrich your life, cut it.&lt;/li&gt; &lt;li&gt;Some feeds only give you the excerpt of a post, with a link to see the full post at their site. Don&#39;t follow those: they break you out of the RSS reading experience, and trick you into losing time on their site. (This is a harsh rule: I used to follow Quanta Magazine&#39;s feed, but they switched from full-text to excerpts, so I unsubscribed.)&lt;/li&gt; &lt;li&gt;Don&#39;t follow feeds that update more than once a day. Go for daily digests, or better yet, weekly digests.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ncase.me/rss/&#34;&gt;If RSS Was So Great, Why&#39;d It Die In The First Place&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Well, Google killed Google Reader in 2013, the #1 RSS reader at the time. This was to make way for Google Plus, which failed. The sacrificial lamb was for nothing.&lt;/p&gt; &lt;p&gt;But Google only did what nearly everyone – including yours truly – did in 2013: leave the open, decentralized Web 1.0 for the shiny new Web 2.0 platforms. Why? Well, it was more fun &amp;amp; convenient.&lt;/p&gt; &lt;p&gt;But now in 2021, for most of us, social media is very not fun and not convenient. That&#39;s why I went back to the future with RSS, and wrote this post encouraging you to do the same!&lt;/p&gt; &lt;p&gt;(Ok, RSS had two more problems: 1) Getting overwhelmed with feeds. As said above, the only cure is to trim ruthlessly. 2) RSS lets you serve text/link/image ads, but not the creepy user-tracking ads. In 2013 that was the &#34;best&#34; way make money on the web, but these days ad revenue is dying, and subscriptions like Patreon/Substack are thriving.)&lt;/p&gt; &lt;p&gt;And that&#39;s all, folks! Now you know how to escape the attention-draining, empathy-killing, critical-thought-suffocating siren song of the algorithms. And get your inbox less cluttered with newsletters.&lt;/p&gt; &lt;p&gt;Here&#39;s to a renaissance for a kinder, better web. &amp;lt;3&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the analysis of life process.&lt;/p&gt; &lt;p&gt;It&#39;s interesting to do analysis at representative moments of the year. It gives it an emotional weight. You can for example use the solstices or my personal version of the solstices:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Spring analysis (1&lt;sup&gt;st&lt;/sup&gt; of March): For me the spring is the real start of the year, it&#39;s when life explodes after the stillness of the winter. The sun starts to set later enough so that you have light in the afternoons, the climate gets warmer thus inviting you to be more outside, the nature is blooming new leaves and flowers. It is then a moment to build new projects and set the current year on track.&lt;/li&gt; &lt;li&gt;Summer analysis (1&lt;sup&gt;st&lt;/sup&gt; of June): I hate heat, so summer is a moment of retreat. Everyone temporarily stop their lives, we go on holidays and all social projects slow their pace. Even the news have even less interesting things to report. It&#39;s so hot outside that some of us seek the cold refuge of home or remote holiday places. Days are long and people love to hang out till late, so usually you wake up later, thus having less time to actually do stuff. Even in the moments when you are alone the heat drains your energy to be productive. It is then a moment to relax and gather forces for the next trimester. It&#39;s also perfect to develop &lt;em&gt;easy&lt;/em&gt; and &lt;em&gt;chill&lt;/em&gt; personal projects that have been forgotten in a drawer. Lower your expectations and just flow with what your body asks you.&lt;/li&gt; &lt;li&gt;Autumn analysis (1&lt;sup&gt;st&lt;/sup&gt; of September): September it&#39;s another key moment for many people. We have it hardcoded in our life since we were children as it was the start of school. People feel energized after the summer holidays and are eager to get back to their lives and stopped projects. You&#39;re already 6 months into the year, so it&#39;s a good moment to review your year plan and decide how you want to invest your energy reserves.&lt;/li&gt; &lt;li&gt;Winter analysis (1&lt;sup&gt;st&lt;/sup&gt; of December): December is the cue that the year is coming to an end. The days grow shorter and colder, they basically invite you to enjoy a cup of tea under a blanket. It is then a good time to get into your cave and do an introspection analysis on the whole year and prepare the ground for the coming year.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We see then that the year is divided in two sets of an expansion trimester and a retreat one. We can use this information to plan our tasks accordingly. In the expansion trimester we could invest more energies in the planning, and in the retreat ones we can do more throughout reviews.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: How to create a prometheus exporter with python.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/client_python&#34;&gt;prometheus-client&lt;/a&gt; is the official Python client for &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;Prometheus&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Installation:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;prometheus-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Here is a simple script:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;prometheus_client&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start_http_server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Summary&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;REQUEST_TIME&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Summary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;request_processing_seconds&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;Time spent processing request&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@REQUEST_TIME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process_request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;A dummy function that takes some time.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Start up the server to expose the metrics.&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;start_http_server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# Generate some requests.&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;process_request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then you can visit &lt;a href=&#34;http://localhost:8000/&#34;&gt;http://localhost:8000/&lt;/a&gt; to view the metrics.&lt;/p&gt; &lt;p&gt;From one easy to use decorator you get:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;request_processing_seconds_count&lt;/code&gt;: Number of times this function was called.&lt;/li&gt; &lt;li&gt;&lt;code&gt;request_processing_seconds_sum&lt;/code&gt;: Total amount of time spent in this function.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Prometheus&#39;s rate function allows calculation of both requests per second, and latency over time from this data.&lt;/p&gt; &lt;p&gt;In addition if you&#39;re on Linux the process metrics expose CPU, memory and other information about the process for free.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;aside class=&#34;md-source-file&#34;&gt; &lt;span class=&#34;md-source-file__fact&#34;&gt; &lt;span class=&#34;md-icon&#34; title=&#34;Last update&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M21 13.1c-.1 0-.3.1-.4.2l-1 1 2.1 2.1 1-1c.2-.2.2-.6 0-.8l-1.3-1.3c-.1-.1-.2-.2-.4-.2m-1.9 1.8-6.1 6V23h2.1l6.1-6.1zM12.5 7v5.2l4 2.4-1 1L11 13V7zM11 21.9c-5.1-.5-9-4.8-9-9.9C2 6.5 6.5 2 12 2c5.3 0 9.6 4.1 10 9.3-.3-.1-.6-.2-1-.2s-.7.1-1 .2C19.6 7.2 16.2 4 12 4c-4.4 0-8 3.6-8 8 0 4.1 3.1 7.5 7.1 7.9l-.1.2z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/span&gt; &lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-timeago&#34;&gt;&lt;span class=&#34;timeago&#34; datetime=&#34;2024-11-27T15:36:58+00:00&#34; locale=&#34;en&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-iso_date&#34;&gt;2024-11-27&lt;/span&gt; &lt;/span&gt; &lt;/aside&gt; &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2023/</link>
      <pubDate>2024-11-27 15:36:58+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/yearly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2023/</guid>
      
    </item>
    
    <item><title>2022</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt;  &lt;h2 id=&#34;introduction&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Add the donation information.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;projects&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/&#34;&gt;Projects&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add two more solutions to the voice recognition project.&lt;/p&gt; &lt;p&gt;For offline voice recognition, &lt;a href=&#34;https://github.com/alphacep/vosk-api&#34;&gt;vosk-api&lt;/a&gt; can be used. Or &lt;a href=&#34;https://github.com/maxkrieger/voiceliner/issues/37&#34;&gt;voiceliner&lt;/a&gt; once it supports offline voice recognition.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#faker-optional&#34;&gt;Deprecate faker-optional project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Wrapper over other Faker providers to return their value or &lt;code&gt;None&lt;/code&gt;. Useful to create data of type &lt;code&gt;Optional[Any]&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Not needed anymore as I use &lt;a href=&#34;https://lyz-code.github.io/blue-book/pydantic_factories/&#34;&gt;pydantic factories&lt;/a&gt; now.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#life-warnings&#34;&gt;Create the Life Warnings seed.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve always tackled the pursuit of the peace of mind by improving in task management, for example trying to predict when I have to do something in order to avoid a nuisance. Maybe it&#39;s more interesting to monitor and visibilice the warnings that are affecting you.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Merge Self host a routing web application seed with host my own map seedling.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#create-an-ordered-list-of-digital-gardens&#34;&gt;Create an ordered list of digital gardens.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Created &lt;a href=&#34;https://github.com/lyz-code/best-of-digital-gardens&#34;&gt;Best-of Digital Gardens&lt;/a&gt; a &lt;a href=&#34;https://github.com/best-of-lists/best-of&#34;&gt;best-of-lists&lt;/a&gt; compilation of awesome list of digital gardens.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#beancount-forecast&#34;&gt;Beancount forecast.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;d like to see a forecast of the evolution of my accounts given an amount of time. Maybe by doing seasonality analysis and forecast in time series as stated &lt;a href=&#34;https://medium.com/swlh/seasonality-analysis-and-forecast-in-time-series-b8fbba820327&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://towardsdatascience.com/finding-seasonal-trends-in-time-series-data-with-python-ce10c37aa861&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;It will also be interesting to see for a given account the evolution of the subaccounts.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#version-update-manager&#34;&gt;Version Update Manager.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Keeping software updated is not easy because:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;There are many technologies involved: package managers (apt, yum, pip, yarn, npm, ...), programming languages (python, java, ruby, ...), operative systems (Debian, Ubuntu, ...), deployment technologies (OS install, Docker, Kubernetes, Ansible, Helm), template software (cruft).&lt;/li&gt; &lt;li&gt;Each software maintainers use a different version system.&lt;/li&gt; &lt;li&gt;Even a small increase in a version may break everything.&lt;/li&gt; &lt;li&gt;Sometimes only the latest version is the supported version.&lt;/li&gt; &lt;li&gt;It&#39;s not easy to check if the update went well.&lt;/li&gt; &lt;li&gt;You not only need the desired package to be updated, but also it&#39;s dependencies.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I&#39;d like to find a solution that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Gives an overall insight of the update status of a system.&lt;/li&gt; &lt;li&gt;Automates the update process.&lt;/li&gt; &lt;li&gt;Support both single system installation or aggregator of multiple systems.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;activism&#34;&gt;Activism&lt;/h2&gt; &lt;h3 id=&#34;antifascism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascism/&#34;&gt;Antifascism&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascism/#magazines&#34;&gt;Add magazines and podcasts.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Magazines:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://hopenothate.org.uk&#34;&gt;Hope not Hate&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.searchlightmagazine.com/&#34;&gt;Searchlight&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Podcasts:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://hopenothate.org.uk/research/podcast/&#34;&gt;Hope not Hate&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascism/#how-to-fight-fascism&#34;&gt;How to fight fascism.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are many ways to fight it, the book &lt;a href=&#34;https://www.txalaparta.eus/es/libros/todo-el-mundo-puede-ser-antifa&#34;&gt;Todo el mundo puede ser Antifa: Manual practico para destruir el fascismo of Pol Andiñach&lt;/a&gt; gathers some of them.&lt;/p&gt; &lt;p&gt;One way we&#39;ve seen pisses them off quite much is when they are ridiculed and they evocate the image of incompetence. It&#39;s a fine line to go, because if it falls into a pity image then it may strengthen their victim role.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;antifascist-actions&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascist_actions/&#34;&gt;Antifascist Actions&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascist_actions/#an-open-data-initiative-to-map-spanish-fascist-icons&#34;&gt;An open data initiative to map spanish fascist icons.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The project &lt;a href=&#34;https://deberiadesaparecer.com&#34;&gt;DeberíaDesaparecer&lt;/a&gt; have created an open database of the remains of the spanish fascist regime icons. The visualization they&#39;ve created is astonishing, and they&#39;ve provided a &lt;a href=&#34;https://docs.google.com/forms/d/e/1FAIpQLSc8jY6y0vcjQKNJBougQG_gTOUSfZGBhponOiwij9xVIwIafA/viewform?embedded=true&#34;&gt;form&lt;/a&gt; so that anyone can contribute to the dataset.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascist_actions/#an-open-data-initiative-to-map-spanish-hate-crimes&#34;&gt;An open data initiative to map spanish hate crimes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The project &lt;a href=&#34;https://crimenesdeodio.info/es/&#34;&gt;Crimenes de Odio&lt;/a&gt; have created an open database of the hate crimes registered in the spanish state.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;feminism&#34;&gt;Feminism&lt;/h3&gt; &lt;h4 id=&#34;privileges&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/feminism/privileges/&#34;&gt;Privileges&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to reduce online racism.&lt;/p&gt; &lt;p&gt;Add article &lt;a href=&#34;https://www.websiteplanet.com/blog/how-to-reduce-online-racism&#34;&gt;How to reduce online racism by Mark Holden&lt;/a&gt;, a long essay with interesting tips and a lot of useful visualizations, I haven&#39;t checked the sources but it looks legit. (Thanks for the recommendation Laurie &lt;code&gt;:)&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;mentoring&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mentoring/&#34;&gt;Mentoring&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the concept and guidelines of mentorship.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Mentorship&#34;&gt;Mentoring&lt;/a&gt; is a process for the informal transmission of knowledge, social capital, and the psychosocial support perceived by the recipient as relevant to work, career, or professional development; mentoring entails informal communication, usually face-to-face and during a sustained period of time, between a person who is perceived to have greater relevant knowledge, wisdom, or experience (the mentor) and a person who is perceived to have less (the apprentice).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;environmentalism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/environmentalism/&#34;&gt;Environmentalism&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce carbon fingerprint calculation tools.&lt;/p&gt; &lt;p&gt;Measure the carbon footprint of your travels&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.carbonfootprint.com/&#34;&gt;https://www.carbonfootprint.com/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are also some calculators for events itself:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://co2.myclimate.org/en/event_calculators/new&#34;&gt;https://co2.myclimate.org/en/event_calculators/new&lt;/a&gt; &lt;a href=&#34;https://psci.princeton.edu/events-emissions-calculator&#34;&gt;https://psci.princeton.edu/events-emissions-calculator&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/environmentalism/#saving-water&#34;&gt;Saving water.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here are some small things I&#39;m doing to save some water each day:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Use the watering can or a bucket to gather the shower water until it&#39;s warm enough. I use this water to flush the toilet. It would be best if it were possible to fill up the toilet&#39;s deposit, but it&#39;s not easy.&lt;/li&gt; &lt;li&gt;Use a glass of water to wet the toothbrush and rinse my mouth instead of using running water.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;Life Management&lt;/h2&gt; &lt;h3 id=&#34;task-management&#34;&gt;Task Management&lt;/h3&gt; &lt;h4 id=&#34;openproject&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/roadmap_tools/&#34;&gt;OpenProject&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce OpenProject.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.openproject.org/&#34;&gt;OpenProject&lt;/a&gt; is an Open source project management software.&lt;/p&gt; &lt;p&gt;The benefits over other &lt;a href=&#34;https://lyz-code.github.io/blue-book/roadmap_tools/#web-based-task-manager&#34;&gt;similar software are&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It&#39;s popular: More than 6.2k stars on github, 1.7k forks.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/opf/openproject/pulse&#34;&gt;It&#39;s development is active&lt;/a&gt;: in the last week they&#39;ve merged 44 merged pull requests by 16 people.&lt;/li&gt; &lt;li&gt;They use their own software to &lt;a href=&#34;https://community.openproject.org/projects/openproject/&#34;&gt;track their bugs&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/opf/openproject-deploy&#34;&gt;Easy to install&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Easy to use&lt;/li&gt; &lt;li&gt;The community version is flexible enough to adapt to different workflows.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.openproject.org/docs/installation-and-operations/&#34;&gt;Good installation and operation&#39;s documentation&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Very good API documentation.&lt;/li&gt; &lt;li&gt;Supports LDAP&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The things I don&#39;t like are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Data can be exported as XML or CSV but it doesn&#39;t export everything. You have access to the database though, so if you&#39;d like a better extraction of the data you in theory can do a selective dump of whatever you need.&lt;/li&gt; &lt;li&gt;It doesn&#39;t yet have &lt;a href=&#34;https://community.openproject.org/projects/openproject/work_packages/32181/activity&#34;&gt;tag support&lt;/a&gt;. You can meanwhile add the strings you would use as tags in the description, and then filter by text in description.&lt;/li&gt; &lt;li&gt;There is no demo instance where you can try it. It&#39;s easy though to launch a &lt;a href=&#34;#proof-of-concept&#34;&gt;Proof of Concept environment yourself&lt;/a&gt; if you already know &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Even thought the &lt;a href=&#34;https://www.openproject.org/pricing/#features&#34;&gt;Community (free) version has many features&lt;/a&gt; the next aren&#39;t:&lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.openproject.org/docs/user-guide/agile-boards/#status-board&#34;&gt;Status boards&lt;/a&gt;: you can&#39;t have Kanban boards that show the state of the issues as columns. You can make it yourself through a Basic board and with the columns as the name of the state. But when you transition an issue from state, you need to move the issue and change the property yourself. I&#39;ve thought of creating a script that works with the API to do this automatically, maybe through the webhooks of the openproject, but it would make more sense to spend time on &lt;code&gt;pydo&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.openproject.org/docs/user-guide/agile-boards/#version-board&#34;&gt;Version boards&lt;/a&gt;: Useful to transition issues between sprints when you didn&#39;t finish them in time. Probably this is easily solved through bulk editing the issues.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.openproject.org/docs/system-admin-guide/manage-work-packages/custom-actions/&#34;&gt;Custom actions&lt;/a&gt; looks super cool, but as this gives additional value compared with the competitors, I understand it&#39;s a paid feature.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.openproject.org/docs/user-guide/work-packages/work-package-relations-hierarchies/#display-relations-in-work-package-list-premium-feature&#34;&gt;Display relations in the work package list&lt;/a&gt;: It would be useful to quickly see which tasks are blocked, by whom and why. Nothing critical though.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.openproject.org/docs/system-admin-guide/custom-fields/#create-a-multi-select-custom-field-premium-feature&#34;&gt;Multiselect custom fields&lt;/a&gt;: You can only do single valued fields. Can&#39;t understand why this is a paid feature.&lt;/li&gt; &lt;li&gt;2FA authentication is only an Enterprise feature.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.openproject.org/docs/system-admin-guide/authentication/openid-providers/&#34;&gt;OpenID and SAML&lt;/a&gt; are an enterprise feature.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Also included:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/openproject/#installation&#34;&gt;How to install it&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/openproject/#operation&#34;&gt;How to operate it&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/openproject/#tips&#34;&gt;Tips&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/roadmap_tools/#web-based-task-manager&#34;&gt;Web based task manager.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Life happened and the development of &lt;a href=&#34;https://lyz-code.github.io/pydo&#34;&gt;pydo&lt;/a&gt; has fallen behind in my priority list. I&#39;ve also reached a point where &lt;a href=&#34;#the-simplest-task-manager&#34;&gt;simplest one&lt;/a&gt; is no longer suitable for my workflow because:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I loose a lot of time in the reviews.&lt;/li&gt; &lt;li&gt;I loose a lot of time when doing the different plannings (year, trimester, month, week, day).&lt;/li&gt; &lt;li&gt;I find it hard to organize and refine the backlog.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;As &lt;code&gt;pydo&lt;/code&gt; is not ready yet and I need a solution that works &lt;em&gt;today&lt;/em&gt; better than the simplest task manager, I&#39;ve done an analysis of the state of the art of &lt;a href=&#34;https://github.com/awesome-selfhosted/awesome-selfhosted#software-development---project-management&#34;&gt;self-hosted applications&lt;/a&gt; of all of them the two that were more promising were &lt;a href=&#34;https://lyz-code.github.io/blue-book/roadmap_tools/#taiga&#34;&gt;Taiga&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/roadmap_tools/#openproject&#34;&gt;OpenProject&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Finally I chose &lt;a href=&#34;https://lyz-code.github.io/blue-book/openproject/&#34;&gt;OpenProject&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/openproject/#deal-with-big-number-of-tasks&#34;&gt;Deal with big number of tasks.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;As the number of tasks increase, the views of your work packages starts becoming more cluttered. As you &lt;a href=&#34;https://community.openproject.org/projects/openproject/work_packages/31918/activity&#34;&gt;can&#39;t fold the hierarchy trees&lt;/a&gt; it&#39;s difficult to efficiently manage your backlog.&lt;/p&gt; &lt;p&gt;I&#39;ve tried setting up a work package type that is only used for the subtasks so that they are filtered out of the view, but then you don&#39;t know if they are parent tasks unless you use the details window. It&#39;s inconvenient but having to collapse the tasks every time it&#39;s more cumbersome. You&#39;ll also need to reserve the selected subtask type (in my case &lt;code&gt;Task&lt;/code&gt;) for the subtasks.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/openproject/#sorting-work-package-views&#34;&gt;Sorting work package views.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;They are sorted alphabetically, so the only way to sort them is by prepending a number. You can do &lt;code&gt;0. Today&lt;/code&gt; instead of &lt;code&gt;Today&lt;/code&gt;. It&#39;s good to do big increments between numbers, so the next report could be &lt;code&gt;10. Backlog&lt;/code&gt;. That way if you later realize you want another report between Today and Backlog, you can use &lt;code&gt;5. New Report&lt;/code&gt; and not rename all the reports.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/openproject/#pasting-text-into-the-descriptions&#34;&gt;Pasting text into the descriptions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When I paste the content of the clipboard in the description, all new lines are removed (&lt;code&gt;\n&lt;/code&gt;), the workaround is to paste it inside a &lt;code&gt;code snippet&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;task-management-workflows&#34;&gt;&lt;a href=&#34;life_planning.md&#34;&gt;Task Management Workflows&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Update the task workflow of the month, and week plannings.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update the workflows.&lt;/p&gt; &lt;p&gt;To suggest to use a script to follow them&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;life-review&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/life_review/&#34;&gt;Life review&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to review your life.&lt;/p&gt; &lt;p&gt;Sometimes is good to stop, get into your cave and do an introspection on how is your life going.&lt;/p&gt; &lt;p&gt;I like to do this exercise the last week of the year. Although I&#39;d like to do it at least twice a year.&lt;/p&gt; &lt;p&gt;This article is the checklist I follow to do my life review, it may seem a lot to you or maybe very simple. You can take it as a base or maybe to get some ideas and then create your own that fits your needs.&lt;/p&gt; &lt;p&gt;The process then has many phases:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/life_review/#housekeeping&#34;&gt;Housekeeping&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/life_review/#analysis&#34;&gt;Analysis&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/life_review/#planning&#34;&gt;Planning&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;news-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/news_management/&#34;&gt;News Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce news management.&lt;/p&gt; &lt;p&gt;The information world of today is overwhelming. It can reach a point that you just want to disconnect so as to avoid the continuous bombardment, but that leads to loosing connection with what&#39;s happening in the world. Without knowing what&#39;s going on it&#39;s impossible to act to shape it better.&lt;/p&gt; &lt;p&gt;I&#39;ve started analyzing how to filter the content.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/news_management/#workflow&#34;&gt;News management workflow explained.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;calendar-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/calendar_management/&#34;&gt;Calendar Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Calendar Management.&lt;/p&gt; &lt;p&gt;Since the break of my taskwarrior instance I&#39;ve used a physical calendar to manage the tasks that have a specific date. Can&#39;t wait for the first version of &lt;a href=&#34;https://github.com/lyz-code/pydo&#34;&gt;&lt;code&gt;pydo&lt;/code&gt;&lt;/a&gt; to be finished.&lt;/p&gt; &lt;p&gt;The next factors made me search for a temporal solution:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It&#39;s taking longer than expected.&lt;/li&gt; &lt;li&gt;I&#39;ve started using a nextcloud calendar with some friends.&lt;/li&gt; &lt;li&gt;I frequently use Google calendar at work.&lt;/li&gt; &lt;li&gt;I&#39;m sick of having to log in Nexcloud and Google to get the day&#39;s appointments.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To fulfill my needs the solution needs to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Import calendar events from different sources, basically through the &lt;a href=&#34;http://en.wikipedia.org/wiki/CalDAV&#34;&gt;CalDAV&lt;/a&gt; protocol.&lt;/li&gt; &lt;li&gt;Have a usable terminal user interface&lt;/li&gt; &lt;li&gt;Optionally have a command line interface or python library so it&#39;s easy to make scripts.&lt;/li&gt; &lt;li&gt;Optionally it can be based in python so it&#39;s easy to contribute&lt;/li&gt; &lt;li&gt;Support having a personal calendar mixed with the shared ones.&lt;/li&gt; &lt;li&gt;Show all calendars in the same interface&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Looking at the available programs I found &lt;a href=&#34;https://lyz-code.github.io/blue-book/khal/&#34;&gt;&lt;code&gt;khal&lt;/code&gt;&lt;/a&gt;, which looks like it may be up to the task.&lt;/p&gt; &lt;p&gt;Go through the &lt;a href=&#34;https://lyz-code.github.io/blue-book/khal/#installation&#34;&gt;installation&lt;/a&gt; steps and configure the instance to have a local calendar.&lt;/p&gt; &lt;p&gt;If you want to sync your calendar events through CalDAV, you need to set &lt;a href=&#34;https://lyz-code.github.io/blue-book/vdirsyncer/&#34;&gt;vdirsyncer&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;food-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/food_management/&#34;&gt;Food Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce my food management workflow.&lt;/p&gt; &lt;p&gt;As humans diet is an important factor in our health, we need to eat daily around three times a day, as such, each week we need to invest time into managing how to get food in front of us. Tasks like thinking what do you want to eat, buying the ingredients and cooking them make use a non negligible amount of time. Also something to keep in mind, is that eating is one of the great pleasures in our lives, so doing it poorly is a waste. The last part of the equation is that to eat good you either need time or money.&lt;/p&gt; &lt;p&gt;This article explores my thoughts and findings on how to optimize the use of time, money and mental load in food management while keeping the desired level of quality to enjoy each meal, being healthy and following the principles of ecology and sustainability. I&#39;m no expert at all on either of these topics. I&#39;m learning and making my mind while writing these lines.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;grocy-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/grocy_management/&#34;&gt;Grocy Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce my grocy management workflow.&lt;/p&gt; &lt;p&gt;Buying stuff is an unpleasant activity that drains your energy and time, it&#39;s the main perpetrator of the broken capitalist system, but sadly we have to yield to survive.&lt;/p&gt; &lt;p&gt;This article explores my thoughts and findings on how to optimize the use of time, money and mental load in grocy management to have enough stuff stored to live, while following the principles of ecology and sustainability. I&#39;m no expert at all on either of these topics. I&#39;m learning and making my mind while writing these lines.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://grocy.info/&#34;&gt;grocy&lt;/a&gt; is a web-based self-hosted groceries &amp;amp; household management solution for your home.&lt;/p&gt; &lt;p&gt;It is really easy to deploy if you know how to use &lt;a href=&#34;https://en.wikipedia.org/wiki/Docker_%28software%29&#34;&gt;Docker&lt;/a&gt;. The hard part comes when you do the initial load, as you have to add all the:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;User attributes.&lt;/li&gt; &lt;li&gt;Product locations.&lt;/li&gt; &lt;li&gt;Product groups.&lt;/li&gt; &lt;li&gt;Quantity conversions.&lt;/li&gt; &lt;li&gt;Products.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;sleep&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/&#34;&gt;Sleep&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/#how-your-brain-generates-sleep&#34;&gt;How your brain generates sleep.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Brainwave activity of REM sleep looks similar to the one you have when you&#39;re awake. They cycle (going up and down) at a fast frequency of thirty or forty times per second in an unreliable pattern. This behaviour is explained by the fact that different parts of your waking brain are processing different pieces of information at different moments in time and in different ways.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;learning-to-code&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/code_learning/&#34;&gt;Learning to code&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce guidelines to learn how to code.&lt;/p&gt; &lt;p&gt;Learning to code is a never ending, rewarding, frustrating, enlightening task. In this article you can see what is the generic roadmap (in my personal opinion) of a developer. As each of us is different, probably a generic roadmap won&#39;t suit your needs perfectly, if you are new to coding, I suggest you find a &lt;a href=&#34;https://lyz-code.github.io/blue-book/mentoring/&#34;&gt;mentor&lt;/a&gt; so you can both tweak it to your case.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/code_learning/#git&#34;&gt;Suggest a workflow to learn Git.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/git/&#34;&gt;Git&lt;/a&gt; is a software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different systems).&lt;/p&gt; &lt;p&gt;Git is a tough nut to crack, no matter how experience you are you&#39;ll frequently get surprised. Sadly it&#39;s one of the main tools to develop your code, so you must master it as soon as possible.&lt;/p&gt; &lt;p&gt;I&#39;ve listed you some resources &lt;a href=&#34;https://lyz-code.github.io/blue-book/git/?h=git#learning-git&#34;&gt;here&lt;/a&gt; on how to start. From that article I think it&#39;s also interesting that you read about:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/git/?h=git#pull-request-process&#34;&gt;Pull Request process&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/git/?h=git#git-workflow&#34;&gt;Git workflow&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;frontend-developer&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/frontend_learning/&#34;&gt;Frontend developer&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce guidelines to learn how to become a frontend developer.&lt;/p&gt; &lt;p&gt;This section is the particularization of the &lt;a href=&#34;https://lyz-code.github.io/blue-book/code_learning/&#34;&gt;Development learning article&lt;/a&gt; for a frontend developer, in particular a &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/&#34;&gt;Vue&lt;/a&gt; developer.&lt;/p&gt; &lt;p&gt;A Front-End Developer is someone who creates websites and web applications. It&#39;s main responsibility is to create what the user sees.&lt;/p&gt; &lt;p&gt;The basic languages for Front-End Development are &lt;a href=&#34;https://lyz-code.github.io/blue-book/html/&#34;&gt;HTML&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/css/&#34;&gt;CSS&lt;/a&gt;, and &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/javascript/javascript/&#34;&gt;JavaScript&lt;/a&gt;. Nowadays writing interfaces with only the basic languages makes no sense as there are other languages and frameworks that make better and quicker solutions. One of them is &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/&#34;&gt;Vue&lt;/a&gt;, which is the one I learnt, so the whole document will be focused on this path, nevertheless there are others popular ones like: &lt;a href=&#34;https://www.w3schools.com/whatis/whatis_bootstrap.asp&#34;&gt;Bootstrap&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/react/react/&#34;&gt;React&lt;/a&gt;, &lt;a href=&#34;https://www.w3schools.com/jquery/default.asp&#34;&gt;jQuery&lt;/a&gt; or &lt;a href=&#34;https://www.w3schools.com/jquery/default.asp&#34;&gt;Angular&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The difference between Front-End and Back-End is that Front-End refers to how a web page looks, while back-end refers to how it works.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;languages&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/&#34;&gt;Languages&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Sum up the VueJS tutorial.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Cypress.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.cypress.io/&#34;&gt;Cypress&lt;/a&gt; is a next generation front end testing tool built for the modern web.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Vite.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://vitejs.dev/guide/&#34;&gt;Vite&lt;/a&gt; is a build tool that aims to provide a faster and leaner development experience for modern web projects. It consists of two major parts:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A dev server that provides rich feature enhancements over native ES modules, for example extremely fast Hot Module Replacement (HMR).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A build command that bundles your code with Rollup, pre-configured to output highly optimized static assets for production.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Vite is opinionated and comes with sensible defaults out of the box, but is also highly extensible via its Plugin API and JavaScript API with full typing support.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Vitest.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://vitest.dev/&#34;&gt;Vitest&lt;/a&gt; is a blazing fast unit-test framework powered by Vite.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vue_snippets/#display-time-ago-from-timestamp&#34;&gt;Display time ago from timestamp.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;a href=&#34;https://vue2-timeago.netlify.app/guide/timeago/timeago.html&#34;&gt;vue2-timeago&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Install with:&lt;/p&gt;  &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Vuetify.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://vuetifyjs.com/en/&#34;&gt;Vuetify&lt;/a&gt; is a Vue UI Library with beautifully handcrafted Material Components.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Sum up all Cypress documentation.&lt;/p&gt; &lt;p&gt;In particular how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Install it&lt;/li&gt; &lt;li&gt;Write tests&lt;/li&gt; &lt;li&gt;Setup the tests&lt;/li&gt; &lt;li&gt;Do component testing&lt;/li&gt; &lt;li&gt;Do visual regression testing&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vue_snippets/#truncate-text-given-a-height&#34;&gt;Truncate text given a height.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;By default css is able to truncate text with the size of the screen but only on one line, if you want to fill up a portion of the screen (specified in number of lines or height css parameter) and then truncate all the text that overflows, you need to use &lt;a href=&#34;https://vue-clamp.vercel.app/&#34;&gt;vue-clamp&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#environment-variables&#34;&gt;Environment variables.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;re using Vue 3 and Vite you can use &lt;a href=&#34;https://vitejs.dev/guide/env-and-mode.html&#34;&gt;the environment variables&lt;/a&gt; by defining them in &lt;code&gt;.env&lt;/code&gt; files.&lt;/p&gt; &lt;p&gt;You can specify environment variables by placing the following files in your project root:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;.env&lt;/code&gt;: Loaded in all cases.&lt;/li&gt; &lt;li&gt;&lt;code&gt;.env.local&lt;/code&gt;: Loaded in all cases, ignored by git.&lt;/li&gt; &lt;li&gt;&lt;code&gt;.env.[mode]&lt;/code&gt;: Only loaded in specified mode.&lt;/li&gt; &lt;li&gt;&lt;code&gt;.env.[mode].local&lt;/code&gt;: Only loaded in specified mode, ignored by git.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;An env file simply contains &lt;code&gt;key=value&lt;/code&gt; pairs of environment variables, by default only variables that start with &lt;code&gt;VITE_&lt;/code&gt; will be exposed.:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DB_PASSWORD=foobar
VITE_SOME_KEY=123
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Only &lt;code&gt;VITE_SOME_KEY&lt;/code&gt; will be exposed as &lt;code&gt;import.meta.env.VITE_SOME_KEY&lt;/code&gt; to your client source code, but &lt;code&gt;DB_PASSWORD&lt;/code&gt; will not. So for example in a component you can use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;export default {
  props: {},
  mounted() {
    console.log(import.meta.env.VITE_SOME_KEY)
  },
  data: () =&amp;gt; ({
  }),
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#deploying&#34;&gt;Deploy with docker.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;And fight to make the environment variables of the docker work, the problem is that these environment variables are set at build time, and can&#39;t be changed at runtime by default, so you can&#39;t offer a generic fronted Docker and particularize for the different cases. I&#39;ve literally cried for hours trying to find a solution for this until &lt;a href=&#34;https://medium.com/js-dojo/vue-js-runtime-environment-variables-807fa8f68665&#34;&gt;José Silva came to my rescue&lt;/a&gt;. The tweak is to use a docker entrypoint to inject the values we want.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#testing&#34;&gt;Testing.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I tried doing component tests with Jest, &lt;a href=&#34;https://lyz-code.github.io/blue-book/vitest/&#34;&gt;Vitest&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/cypress/&#34;&gt;Cypress&lt;/a&gt; and found no way of making component tests, they all fail one way or the other.&lt;/p&gt; &lt;p&gt;E2E tests worked with Cypress however, that&#39;s going to be my way of action till this is solved.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add Cypress commands.&lt;/p&gt; &lt;p&gt;For the functions you write a lot you can use commands in &lt;code&gt;/cypress/support/commands.ts&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;Cypress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Commands&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;getById&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`[data-cy=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;]`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;Cypress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Commands&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;getByIdLike&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`[data-cy*=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;]`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;Cypress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Commands&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;findById&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prevSubject&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;subject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`[data-cy=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;]`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;So you can now do &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;submit&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cypress/#select-by-position-in-list&#34;&gt;Add more ways to select elements.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Select by position in list&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Inside our list, we can select elements based on their position in the list, using &lt;code&gt;.first()&lt;/code&gt;, &lt;code&gt;.last()&lt;/code&gt; or &lt;code&gt;.eq()&lt;/code&gt; selector.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;li&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;first&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// select &#34;red&#34;&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;li&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// select &#34;violet&#34;&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;li&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;eq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// select &#34;yellow&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can also use &lt;code&gt;.next()&lt;/code&gt; and &lt;code&gt;.prev()&lt;/code&gt; to navigate through the elements.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Select elements by filtering&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Once you select multiple elements, you can filter within these based on another selector.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;li&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.primary&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// select all elements with the class .primary&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To do the exact opposite, you can use &lt;code&gt;.not()&lt;/code&gt; command.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;li&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;not&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.primary&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// select all elements without the class .primary&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cypress/#finding-elements&#34;&gt;Finding elements.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can specify your selector by first selecting an element you want to search within, and then look down the DOM structure to find a specific element you are looking for.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.list&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.violet&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// finds an element with class .violet inside .list element&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Instead of looking down the DOM structure and finding an element within another element, we can look up. In this example, we first select our list item, and then try to find an element with a &lt;code&gt;.list&lt;/code&gt; class.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.violet&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.list&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// finds an element with class .list that is above our .violet element&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cypress/#asserting-about-elements&#34;&gt;Assert on the content of an attribute.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;invoke&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;attr&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;href&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;should&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;eq&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;https://docs.cypress.io&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cypress/#use-the-content-of-a-fixture-set-in-a-hook-in-a-test&#34;&gt;Use the content of a fixture set in a hook in a test.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you store and access the fixture data using this test context object, make sure to use &lt;code&gt;function () { ... }&lt;/code&gt; callbacks both for the hook and the test. Otherwise the test engine will NOT have this pointing at the test context.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;describe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;User page&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;beforeEach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// &#34;this&#34; points at the test context object&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fixture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;user&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// &#34;this&#34; is still the test context object&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// the test callback is in &#34;function () { ... }&#34; form&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;has user&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// this.user exists&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;firstName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;equal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Jane&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cypress/#issues&#34;&gt;Run only failing tests.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Cypress doesn&#39;t &lt;a href=&#34;https://github.com/cypress-io/cypress/issues/4886&#34;&gt;Allow to rerun failed tests&lt;/a&gt; but you can use &lt;code&gt;it.only&lt;/code&gt; on the test you want to run.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#make-http-requests&#34;&gt;Make HTTP requests with Vue.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Compare &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#fetch-api&#34;&gt;Fetch API&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#axios&#34;&gt;Axios&lt;/a&gt; when doing http requests to external services.&lt;/p&gt; &lt;p&gt;Explain how to do them with both methods and arrive to the conclusion that if you’re working on multiple requests, you’ll find that Fetch requires you to write more code than Axios, even when taking into consideration the setup needed for it. Therefore, for simple requests, Fetch API and Axios are quite the same. However, for more complex requests, Axios is better as it allows you to configure multiple requests in one place.&lt;/p&gt; &lt;p&gt;If you&#39;re making a simple request use the Fetch API, for the other cases use axios because:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It allows you to configure multiple requests in one place&lt;/li&gt; &lt;li&gt;Code is shorter.&lt;/li&gt; &lt;li&gt;It allows you to &lt;a href=&#34;https://medium.com/bb-tutorials-and-thoughts/how-to-make-api-calls-in-vue-js-applications-43e017d4dc86&#34;&gt;place all the API calls under services so that these can be reused across components wherever they are needed&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;It&#39;s easy to set a timeout of the request.&lt;/li&gt; &lt;li&gt;It supports HTTP interceptors by befault&lt;/li&gt; &lt;li&gt;It does automatic JSON data transformation.&lt;/li&gt; &lt;li&gt;It&#39;s supported by old browsers, although you can bypass the problem with fetch too.&lt;/li&gt; &lt;li&gt;It has a progress indicator for large files.&lt;/li&gt; &lt;li&gt;Supports simultaneous requests by default.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Axios provides an easy-to-use API in a compact package for most of your HTTP communication needs. However, if you prefer to stick with native APIs, nothing stops you from implementing Axios features.&lt;/p&gt; &lt;p&gt;For more information read:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://medium.com/bb-tutorials-and-thoughts/how-to-make-api-calls-in-vue-js-applications-43e017d4dc86&#34;&gt;How To Make API calls in Vue.JS Applications by Bhargav Bachina&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://blog.logrocket.com/axios-vs-fetch-best-http-requests/&#34;&gt;Axios vs. fetch(): Which is best for making HTTP requests? by Faraz Kelhini&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cypress/#simulate-errors&#34;&gt;Simulate errors.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Errors&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;errorMsg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Oops! Try again later&#39;&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;simulates a server error&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;intercept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;**/search?query=cypress&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;getServerFailure&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;visit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;https://example.com/search&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;[data-cy=&#34;search-field&#34;]&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;should&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;be.visible&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;cypress{enter}&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;@getServerFailure&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;errorMsg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;should&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;be.visible&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;simulates a network failure&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;intercept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;**/search?query=cypressio&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;forceNetworkError&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;as&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;getNetworkFailure&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;visit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;https://example.com/search&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;[data-cy=&#34;search-field&#34;]&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;should&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;be.visible&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;cypressio{enter}&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;@getNetworkFailure&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;contais&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;errorMsg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;should&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;be.visible&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#handling-errors&#34;&gt;Handling errors doing requests to other endpoints.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To catch errors when doing requests you could use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;await&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;axios&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/my-api-route&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Work with the response...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// The client was given an error response (5xx, 4xx)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// The client never received a response, and the request was never left&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Anything else&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Error&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The differences in the &lt;code&gt;error&lt;/code&gt; object, indicate where the request encountered the issue.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;error.response&lt;/code&gt;: If your &lt;code&gt;error&lt;/code&gt; object has a &lt;code&gt;response&lt;/code&gt; property, it means that your server returned a 4xx/5xx error. This will assist you choose what sort of message to return to users.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;error.request&lt;/code&gt;: This error is caused by a network error, a hanging backend that does not respond instantly to each request, unauthorized or cross-domain requests, and lastly if the backend API returns an error.&lt;/p&gt; &lt;p&gt;This occurs when the browser was able to initiate a request but did not receive a valid answer for any reason.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Other errors: It&#39;s possible that the &lt;code&gt;error&lt;/code&gt; object does not have either a &lt;code&gt;response&lt;/code&gt; or &lt;code&gt;request&lt;/code&gt; object attached to it. In this case it is implied that there was an issue in setting up the request, which eventually triggered an error.&lt;/p&gt; &lt;p&gt;For example, this could be the case if you omit the URL parameter from the &lt;code&gt;.get()&lt;/code&gt; call, and thus no request was ever made.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#flex&#34;&gt;Use Flexbox with Vuetify.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Control the layout of flex containers with alignment, justification and more with responsive flexbox utilities.&lt;/p&gt; &lt;div class=&#34;admonition note&#34;&gt; &lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&#34;I suggest you use this page only as a reference, if it&#39;s the first time
you see this content, it&#39;s better to see it at the
[source](https://vuetifyjs.com/en/styles/flex) as you can see Flex in
action at the same time you read, which makes it much more easy to
understand.&#34;
&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;p&gt;Explain how to use:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#display-breakpoints&#34;&gt;Display breakpoints&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#flex-direction&#34;&gt;Flex direction&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#flex-justify&#34;&gt;Flex justify&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#flex-align&#34;&gt;Flex align&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#margins&#34;&gt;Margins&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#position-elements-with-flex&#34;&gt;Position elements with Flex&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#Keep-the-structure-even-if-some-components-are-hidden&#34;&gt;Keep the structure even if some components are hidden&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#illustrations&#34;&gt;Illustrations.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can get nice illustrations for your web on &lt;a href=&#34;https://drawkit.com&#34;&gt;Drawkit&lt;/a&gt;, for example I like to use the &lt;a href=&#34;https://drawkit.com/product/drawkit-classic&#34;&gt;Classic kit&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the way to test for an attribute of an html element.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;should&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;have.attr&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;href&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;https://docs.cypress.io&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;have.attr&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;target&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;_blank&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Test it&#39;s meant to be opened&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// another tab&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cypress/#sending-different-responses&#34;&gt;Sending different responses.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To return different responses from a single &lt;code&gt;GET /todos&lt;/code&gt; intercept, you can place all prepared responses into an array, and then use Array.prototype.shift to return and remove the first item.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;returns list with more items on page reload&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;replies&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fixture&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;articles.json&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;statusCode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;404&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;intercept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/api/inbox&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;reply&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;replies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;shift&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vue_snippets/#get-assets-url&#34;&gt;Get assets url.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;re using Vite, you can save the assets such as images or audios in the &lt;code&gt;src/assets&lt;/code&gt; directory, and you can get the url with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;getImage&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`../assets/pictures/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;active_id&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;.jpg`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;meta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This way it will give you the correct url whether you&#39;re in the development environment or in production.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vue_snippets/#play-audio-files&#34;&gt;Play audio files.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can get the file and save it into a &lt;code&gt;data&lt;/code&gt; element with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;getAudio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;audio&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Audio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`../assets/audio/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;active_id&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;.mp3`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;meta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can start playing with &lt;code&gt;this.audio.play()&lt;/code&gt;, and stop with &lt;code&gt;this.audio.pause()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#vue-router&#34;&gt;Vue Router.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Creating a Single-page Application with Vue + Vue Router feels natural, all we need to do is map our components to the routes and let Vue Router know where to render them.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#deploy-static-site-on-github-pages&#34;&gt;Deploy static site on github pages.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#themes&#34;&gt;Themes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Vuetify comes with two themes pre-installed, light and dark. To set the default theme of your application, use the &lt;code&gt;defaultTheme&lt;/code&gt; option.&lt;/p&gt; &lt;div class=&#34;admonition note&#34;&gt; &lt;p class=&#34;admonition-title&#34;&gt;File: &lt;code&gt;src/plugins/vuetify.js&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createApp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;vue&#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createVuetify&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;vuetify&#39;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createVuetify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;defaultTheme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;dark&#39;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;p&gt;Adding new themes is as easy as defining a new property in the &lt;code&gt;theme.themes&lt;/code&gt; object. A theme is a collection of colors and options that change the overall look and feel of your application. One of these options designates the theme as being either a light or dark variation. This makes it possible for Vuetify to implement Material Design concepts such as elevated surfaces having a lighter overlay color the higher up they are.&lt;/p&gt; &lt;div class=&#34;admonition note&#34;&gt; &lt;p class=&#34;admonition-title&#34;&gt;File: &lt;code&gt;src/plugins/vuetify.js&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createApp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;vue&#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createVuetify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ThemeDefinition&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;vuetify&#39;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createVuetify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;defaultTheme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;myCustomLightTheme&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;themes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myCustomLightTheme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;colors&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#FFFFFF&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;surface&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#FFFFFF&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;primary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#510560&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;primary-darken-1&#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#3700B3&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;secondary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#03DAC6&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;secondary-darken-1&#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#018786&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#B00020&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#2196F3&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#4CAF50&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;#FB8C00&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/div&gt; &lt;p&gt;To dynamically change theme during runtime.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;btn&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;toggleTheme&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toggle&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/v-btn&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/v-app&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/template&amp;gt;&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;useTheme&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;vuetify&#39;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;useTheme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toggleTheme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;global&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;global&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dark&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;light&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;dark&#39;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Most components support the &lt;code&gt;theme&lt;/code&gt; prop. When used, a new context is created for that specific component and all of its children. In the following example, the &lt;code&gt;v-btn&lt;/code&gt; uses the dark theme applied by its parent &lt;code&gt;v-card&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;card&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;dark&#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;button&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dark&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;btn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/v-btn&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/v-card&amp;gt;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/v-app&amp;gt;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#elements&#34;&gt;Add more elements.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#cards&#34;&gt;Cards&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuetify/#carousels&#34;&gt;Carousels&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vue_snippets/#apply-a-style-to-a-component-given-a-condition&#34;&gt;Apply a style to a component given a condition.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;if you use &lt;code&gt;:class&lt;/code&gt; you can write javascript code in the value, for example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;b-form-radio&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;user-retrieve-language p-2&#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;:class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;{&#39;font-weight-bold&#39;: selected === language.key}&#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;v-for&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;language in languages&#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;v-model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;selected&#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;:id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;language.key&#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;:checked&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;selected === language.key&#34;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;:value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;language.key&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/#debug-jest-tests&#34;&gt;Debug Jest tests.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;re not developing in Visual code, running a debugger is not easy in the middle of the tests, so to debug one you can use &lt;code&gt;console.log()&lt;/code&gt; statements and when you run them with &lt;code&gt;yarn test:unit&lt;/code&gt; you&#39;ll see the traces.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add the di library to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.adriangb.com/di/0.36.0/&#34;&gt;di&lt;/a&gt;: a modern dependency injection system, modeled around the simplicity of FastAPI&#39;s dependency injection.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add humanize library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-humanize/humanize&#34;&gt;humanize&lt;/a&gt;: This modest package contains various common humanization utilities, like turning a number into a fuzzy human-readable duration (&#34;3 minutes ago&#34;) or into a human-readable size or throughput.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add huey.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coleifer/huey&#34;&gt;huey&lt;/a&gt; is a little task queue for python.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python/#generators&#34;&gt;Generators.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Generator functions are a special kind of function that return a lazy iterator. These are objects that you can loop over like a list. However, unlike lists, lazy iterators do not store their contents in memory.&lt;/p&gt; &lt;p&gt;An example would be an infinite sequence generator&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;infinite_sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can use it as a list:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;infinite_sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;     &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34; &#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;21&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;26&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;27&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;33&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;34&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;35&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;36&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;37&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;38&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;39&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;40&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;41&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Instead of using a &lt;code&gt;for&lt;/code&gt; loop, you can also call &lt;code&gt;next()&lt;/code&gt; on the generator object directly. This is especially useful for testing a generator in the console:.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;infinite_sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#do-the-remainder-or-modulus-of-a-number&#34;&gt;Do the remainder or modulus of a number.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;expr&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/bash_snippets/#update-a-json-file-with-jq&#34;&gt;Update a json file with jq.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Save the next snippet to a file, for example &lt;code&gt;jqr&lt;/code&gt; and add it to your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nv&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;temp_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;mktemp&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;

jq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$query&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$temp_file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;

cmp&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$temp_file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-eq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/bin/rm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$temp_file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;/bin/mv&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$temp_file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$file&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Imagine you have the next json file:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;property&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;other_property&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;value&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then you can run:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jqr&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.property = false&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;status.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;And then you&#39;ll have:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;property&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;other_property&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;value&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python/#interesting-sources&#34;&gt;Interesting sources.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://musa-550-fall-2020.github.io/&#34;&gt;Musa 550&lt;/a&gt; looks like a nice way to learn how to process geolocation data.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pdm&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/&#34;&gt;PDM&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add asyncer as interesting library.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce PDM.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pdm.fming.dev/&#34;&gt;PDM&lt;/a&gt; is a modern Python package manager with &lt;a href=&#34;https://www.python.org/dev/peps/pep-0582/&#34;&gt;PEP 582&lt;/a&gt; support. It installs and manages packages in a similar way to npm that doesn&#39;t need to create a virtualenv at all!&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Note that &lt;code&gt;pdm update&lt;/code&gt; doesn&#39;t upgrade the constrains in &lt;code&gt;pyproject.toml&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add tutorial on how to use asyncio.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.roguelynn.com/words/asyncio-we-did-it-wrong/&#34;&gt;Roguelynn tutorial&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Version overriding now supports constrains.&lt;/p&gt; &lt;p&gt;Before you had to pin specific versions, which is not maintainable, now you can use constrains&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.pdm.overrides]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;asgiref&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;&amp;gt;=3.2.10&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pdm/#show-outdated-packages&#34;&gt;Show outdated packages.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdm&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;update&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--dry-run&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--unconstrained
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/javascript_snippets/#round-a-number&#34;&gt;Round a number.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/javascript_snippets/#remove-focus-from-element&#34;&gt;Remove focus from element.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;activeElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;blur&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/javascript_snippets/#concatenate-two-arrays&#34;&gt;Concatenate two arrays.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Cecilie&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Lone&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Emil&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Tobias&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Linus&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;children&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To join more arrays you can use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Cecilie&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Lone&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Emil&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Tobias&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Linus&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Robin&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;children&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;concat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;arr3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/javascript_snippets/#check-if-a-variable-is-not-undefined&#34;&gt;Check if a variable is not undefined.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ow&#34;&gt;typeof&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastname&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;undefined&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Hi. Variable is defined.&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; feat(vue_snippets#Run function in background): Run function in background&lt;/p&gt; &lt;p&gt;To achieve that you need to use &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/javascript/javascript/#timing-events&#34;&gt;the javascript method called &lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;. It’s a simple function that would repeat the same task over and over again. Here’s an example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;myFunction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setInterval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Hello world&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you add a call to this method for any button and click on it, it will print Hello world every 3 seconds (3000 milliseconds) until you close the page.&lt;/p&gt; &lt;p&gt;In Vue you could do something like:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;inbox_retry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}),&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;retryGetInbox&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;inbox_retry&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;setInterval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;showError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Retrying the fetch of the inbox&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Add your code here.&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;clearInterval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;inbox_retry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;30000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can call &lt;code&gt;this.retryGetInbox()&lt;/code&gt; whenever you want to start running the function periodically. Once &lt;code&gt;this.showError&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, we stop running the function with &lt;code&gt;clearInterval(this.inbox_retry)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/javascript_snippets/#set-variable-if-it&#39;s-undefined&#34;&gt;Set variable if it&#39;s undefined.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;===&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;your_default_value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pdm/#supporting-pre-releases&#34;&gt;Supporting pre-releases.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To help package maintainers, you can allow pre-releases to be validate candidates, that way you&#39;ll get the issues sooner. It will mean more time to maintain the broken CIs if you update your packages daily (as you should!), but it&#39;s the least you can do to help your downstream library maintainers&lt;/p&gt; &lt;p&gt;By default, &lt;code&gt;pdm&lt;/code&gt;&#39;s dependency resolver will ignore prereleases unless there are no stable versions for the given version range of a dependency. This behavior can be changed by setting allow_prereleases to true in &lt;code&gt;[tool.pdm]&lt;/code&gt; table:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.pdm]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;allow_prereleases&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pdm/#solve-circular-dependencies&#34;&gt;Solve circular dependencies.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes &lt;code&gt;pdm&lt;/code&gt; is not able to &lt;a href=&#34;https://github.com/pdm-project/pdm/issues/1354&#34;&gt;locate the best package combination&lt;/a&gt;, or it does too many loops, so to help it you can update your version constrains so that it has the minimum number of candidates.&lt;/p&gt; &lt;p&gt;To solve circular dependencies we first need to locate what are the conflicting packages, &lt;a href=&#34;https://github.com/pdm-project/pdm/issues/1354&#34;&gt;&lt;code&gt;pdm&lt;/code&gt; doesn&#39;t make it easy to detect them&lt;/a&gt;. Locate all the outdated packages by doing &lt;code&gt;pdm show&lt;/code&gt; on each package until &lt;a href=&#34;https://github.com/pdm-project/pdm/issues/1356&#34;&gt;this issue is solved&lt;/a&gt; and run &lt;code&gt;pdm update {package} --unconstrained&lt;/code&gt; for each of them. If you&#39;re already on the latest version, update your &lt;code&gt;pyproject.toml&lt;/code&gt; to match the latest state.&lt;/p&gt; &lt;p&gt;Once you have everything to the latest compatible version, you can try to upgrade the rest of the packages one by one to the latest with &lt;code&gt;--unconstrained&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;In the process of doing these steps you&#39;ll see some conflicts in the dependencies that can be manually solved by preventing those versions to be installed or maybe changing the &lt;code&gt;python-requires&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Suggest to use Asyncer.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://asyncer.tiangolo.com/tutorial/&#34;&gt;Asyncer&lt;/a&gt; looks very useful&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pdm/#solve-circular-dependencies&#34;&gt;Solve circular dependencies by manual constraining.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It also helps to run &lt;code&gt;pdm update&lt;/code&gt; with the &lt;code&gt;-v&lt;/code&gt; flag, that way you see which are the candidates that are rejected, and you can put the constrain you want. For example, I was seeing the next traceback:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdm.termui: Conflicts detected:
  pyflakes&amp;gt;=3.0.0 (from &amp;lt;Candidate autoflake 2.0.0 from https://pypi.org/simple/autoflake/&amp;gt;)
  pyflakes&amp;lt;2.5.0,&amp;gt;=2.4.0 (from &amp;lt;Candidate flake8 4.0.1 from unknown&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;So I added a new dependency to pin it:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[tool.pdm.dev-dependencies]
dependencies = [
    # Until flakeheaven supports flake8 5.x
    # https://github.com/flakeheaven/flakeheaven/issues/132
    &#34;flake8&amp;gt;=4.0.1,&amp;lt;5.0.0&#34;,
    &#34;pyflakes&amp;lt;2.5.0&#34;,
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If none of the above works, you can override them:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[tool.pdm.overrides]
&#34;importlib-metadata&#34; = &#34;&amp;gt;=3.10&#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Suggest to use pydeps.&lt;/p&gt; &lt;p&gt;If you get lost in understanding your dependencies, you can try using &lt;a href=&#34;https://github.com/thebjorn/pydeps&#34;&gt;&lt;code&gt;pydeps&lt;/code&gt;&lt;/a&gt; to get your head around it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;libraries&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/beautifulsoup/&#34;&gt;Libraries&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce BeautifulSoup and how to use it.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://beautiful-soup-4.readthedocs.io/en/latest/&#34;&gt;BeautifulSoup&lt;/a&gt; is a Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/beautifulsoup/#modifying-the-tree&#34;&gt;Modifying the tree.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;PageElement.replace_with()&lt;/code&gt; removes a tag or string from the tree, and replaces it with the tag or string of your choice:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;markup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&amp;lt;a href=&#34;http://example.com/&#34;&amp;gt;I linked to &amp;lt;i&amp;gt;example.com&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;markup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;a_tag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;new_tag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;soup&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;b&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;new_tag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;example.net&#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;a_tag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace_with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;a_tag&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Sometimes it doesn&#39;t work. If it doesn&#39;t use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a_tag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;a_tag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce python gnupg.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vsajip/python-gnupg&#34;&gt;python-gnupg&lt;/a&gt; is a Python library to interact with &lt;code&gt;gpg&lt;/code&gt; taking care of the internal details and allows its users to generate and manage keys, encrypt and decrypt data, and sign and verify messages.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vsajip/python-gnupg#installing-from-pypi&#34;&gt;Installation&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;python-gnupg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;a href=&#34;https://gnupg.readthedocs.io/en/latest/#getting-started&#34;&gt;Usage&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;```python gpg = gnupg.GPG(gnupghome=&#34;/path/to/home/directory&#34;)&lt;/p&gt; &lt;p&gt;gpg.decrypt(&#34;path/to/file&#34;)&lt;/p&gt; &lt;p&gt;public_keys = gpg.list_keys() private_keys = gpg.list_keys(True)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Use &lt;code&gt;decrypt_file&lt;/code&gt; instead of &lt;code&gt;decrypt&lt;/code&gt; for files.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;gpg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decrypt_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;path/to/file&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Note: You can&#39;t pass &lt;code&gt;Path&lt;/code&gt; arguments to &lt;code&gt;decrypt_file&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;configure-docker-to-host-the-application&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/&#34;&gt;Configure Docker to host the application&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#usage-of-ellipsis-on-tuple-type-hints&#34;&gt;Usage of ellipsis on &lt;code&gt;Tuple&lt;/code&gt; type hints.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The ellipsis is used to specify an arbitrary-length homogeneous tuples, for example &lt;code&gt;Tuple[int, ...]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#list-the-files-of-a-bucket&#34;&gt;List the files of a bucket.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Suggest to use &lt;code&gt;Sequence&lt;/code&gt; over &lt;code&gt;List&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Because using &lt;code&gt;List&lt;/code&gt; could lead to some unexpected errors when combined with type inference. For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;lst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Inferred type is List[A]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;new_lst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# inferred type is List[B]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;lst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_lst&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# mypy will complain about this, because List is invariant&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Possible strategies in such situations are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use an explicit type annotation:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;new_lst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;lst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_lst&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# OK&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Make a copy of the right hand side:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;lst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_lst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Also OK&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use immutable collections as annotations whenever possible:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;f_bad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;f_bad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_lst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# Fails&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;f_good&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;f_good&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new_lst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# OK&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#overloading-the-methods&#34;&gt;Overloading the methods.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes the types of several variables are related, such as “if x is type A, y is type B, else y is type C”. Basic type hints cannot describe such relationships, making type checking cumbersome or inaccurate. We can instead use &lt;code&gt;@typing.overload&lt;/code&gt; to represent type relationships properly.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;__future__&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;annotations&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;collections.abc&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sequence&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;overload&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@overload&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@overload&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This looks a bit weird at first glance—we are defining double three times! Let’s take it apart.&lt;/p&gt; &lt;p&gt;The first two &lt;code&gt;@overload&lt;/code&gt; definitions exist only for their type hints. Each definition represents an allowed combination of types. These definitions never run, so their bodies could contain anything, but it’s idiomatic to use Python’s &lt;code&gt;...&lt;/code&gt; (ellipsis) literal.&lt;/p&gt; &lt;p&gt;The third definition is the actual implementation. In this case, we need to provide type hints that union all the possible types for each variable. Without such hints, Mypy will skip type checking the function body.&lt;/p&gt; &lt;p&gt;When Mypy checks the file, it collects the &lt;code&gt;@overload&lt;/code&gt; definitions as type hints. It then uses the first non-&lt;code&gt;@overload&lt;/code&gt; definition as the implementation. All &lt;code&gt;@overload&lt;/code&gt; definitions must come before the implementation, and multiple implementations are not allowed.&lt;/p&gt; &lt;p&gt;When Python imports the file, the &lt;code&gt;@overload&lt;/code&gt; definitions create temporary double functions, but each is overridden by the next definition. After importing, only the implementation exists. As a protection against accidentally missing implementations, attempting to call an &lt;code&gt;@overload&lt;/code&gt; definition will raise a &lt;code&gt;NotImplementedError&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;@overload&lt;/code&gt; can represent arbitrarily complex scenarios. For a couple more examples, see the function overloading section of the &lt;a href=&#34;https://mypy.readthedocs.io/en/stable/more_types.html#function-overloading&#34;&gt;Mypy docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#start-request-repeated-too-quickly&#34;&gt;Debug the Start request repeated too quickly error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;journalctl -eu docker&lt;/code&gt; to debug&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update TypeVars nomenclature.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;UserT&lt;/code&gt; is &lt;a href=&#34;https://github.com/PyCQA/pylint/issues/6003&#34;&gt;not supported by pylint&lt;/a&gt;, use &lt;code&gt;UserT&lt;/code&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#ec2&#34;&gt;Add common ec2 functions.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#get-instance-types&#34;&gt;Get instance types&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#get-instance-prices&#34;&gt;Get instance prices&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#using-typing.cast&#34;&gt;Using &lt;code&gt;typing.cast&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes the type hints of your program don&#39;t work as you expect, if you&#39;ve given up on fixing the issue you can &lt;code&gt;# type: ignore&lt;/code&gt; it, but if you know what type you want to enforce, you can use &lt;a href=&#34;https://docs.python.org/3/library/typing.html#typing.cast&#34;&gt;&lt;code&gt;typing.cast()&lt;/code&gt;&lt;/a&gt; explicitly or implicitly from &lt;code&gt;Any&lt;/code&gt; with type hints. With casting we can force the type checker to treat a variable as a given type.&lt;/p&gt; &lt;p&gt;The main case to reach for &lt;code&gt;cast()&lt;/code&gt; are when the type hints for a module are either missing, incomplete, or incorrect. This may be the case for third party packages, or occasionally for things in the standard library.&lt;/p&gt; &lt;p&gt;Take this example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;dt&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cast&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;third_party&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_data&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;last_import_time&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;last_import_time&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Imagine &lt;code&gt;get_data()&lt;/code&gt; has a return type of &lt;code&gt;dict[str, Any]&lt;/code&gt;, rather than using stricter per-key types with a &lt;code&gt;TypedDict&lt;/code&gt;. From reading the documentation or source we might find that the &lt;code&gt;last_import_time&lt;/code&gt; key always contains a &lt;code&gt;datetime&lt;/code&gt; object. Therefore, when we access it, we can wrap it in a &lt;code&gt;cast()&lt;/code&gt;, to tell our type checker the real type rather than continuing with &lt;code&gt;Any&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;When we encounter missing, incomplete, or incorrect type hints, we can contribute back a fix. This may be in the package itself, its related stubs package, or separate stubs in Python’s typeshed. But until such a fix is released, we will need to use &lt;code&gt;cast()&lt;/code&gt; to make our code pass type checking.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#with-renovate&#34;&gt;Update dockers with Renovate.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/renovate/&#34;&gt;Renovate&lt;/a&gt; is a program that does automated dependency updates. Multi-platform and multi-language.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#connect-multiple-docker-compose-files&#34;&gt;Connect multiple docker compose files.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can connect services defined across multiple docker-compose.yml files.&lt;/p&gt; &lt;p&gt;In order to do this you’ll need to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Create an external network with &lt;code&gt;docker network create &amp;lt;network name&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;In each of your &lt;code&gt;docker-compose.yml&lt;/code&gt; configure the default network to use your externally created network with the networks top-level key.&lt;/li&gt; &lt;li&gt;You can use either the service name or container name to connect between containers.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#attach-a-docker-to-many-networks&#34;&gt;Attach a docker to many networks.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can&#39;t do it through the &lt;code&gt;docker run&lt;/code&gt; command, there you can only specify one network. However, you can attach a docker to a network with the command:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;network&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;attach&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;network-name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;docker-name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;click&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/&#34;&gt;Click&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/#file-system-isolation&#34;&gt;File System Isolation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For basic command line tools with file system operations, the &lt;code&gt;CliRunner.isolated_filesystem()&lt;/code&gt; method is useful for setting the current working directory to a new, empty folder.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;click.testing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CliRunner&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CliRunner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isolated_filesystem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;hello.txt&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;w&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Hello World!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;invoke&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;hello.txt&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exit_code&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Hello World!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Pass &lt;code&gt;temp_dir&lt;/code&gt; to control where the temporary directory is created. The directory will not be removed by Click in this case. This is useful to integrate with a framework like Pytest that manages temporary files.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_keep_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CliRunner&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;runner&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isolated_filesystem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;temp_dir&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;td&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dash&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pydantic_factories/&#34;&gt;Dash&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the type hints of the factory.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;Any&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;PersonFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ModelFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]):&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pydantic_factories/#issues&#34;&gt;Track issue when using with.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pydantic_factories/#creating-your-custom-factories&#34;&gt;Creating your custom factories.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If your model has an attribute that is not supported by &lt;code&gt;pydantic-factories&lt;/code&gt; and it depends on third party libraries, you can create your custom extension subclassing the &lt;code&gt;ModelFactory&lt;/code&gt;, and overriding the &lt;code&gt;get_mock_value&lt;/code&gt; method to add your logic.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;from pydantic_factories import ModelFactory

class CustomFactory(ModelFactory[Any]):
    &#34;&#34;&#34;Tweak the ModelFactory to add our custom mocks.&#34;&#34;&#34;

    @classmethod
    def get_mock_value(cls, field_type: Any) -&amp;gt; Any:
        &#34;&#34;&#34;Add our custom mock value.&#34;&#34;&#34;
        if str(field_type) == &#34;my_super_rare_datetime_field&#34;:
            return cls._get_faker().date_time_between()

        return super().get_mock_value(field_type)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where &lt;code&gt;cls._get_faker()&lt;/code&gt; is a &lt;code&gt;faker&lt;/code&gt; instance that you can use to build your returned value.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_code_styling/#w1514-set-encoding-on-open&#34;&gt;Solve W1514 pylint error.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;file.txt&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;encoding&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate in favour of Streamlit.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.streamlit.io/&#34;&gt;Streamlit&lt;/a&gt; is a much more easy, beautiful and clean library for the same purpose.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/#running-in-background&#34;&gt;Running process in background.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;By default, each running command blocks until completion. If you have a long-running command, you can put it in the background with the &lt;code&gt;_bg=True&lt;/code&gt; special kwarg:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;...3 seconds later&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_bg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;prints immediately!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;...and 3 seconds later&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You’ll notice that you need to call &lt;code&gt;RunningCommand.wait()&lt;/code&gt; in order to exit after your command exits.&lt;/p&gt; &lt;p&gt;Commands launched in the background ignore &lt;code&gt;SIGHUP&lt;/code&gt;, meaning that when their controlling process (the session leader, if there is a controlling terminal) exits, they will not be signalled by the kernel. But because &lt;code&gt;sh&lt;/code&gt; commands launch their processes in their own sessions by default, meaning they are their own session leaders, ignoring &lt;code&gt;SIGHUP&lt;/code&gt; will normally have no impact. So the only time ignoring &lt;code&gt;SIGHUP&lt;/code&gt; will do anything is if you use &lt;code&gt;_new_session=False&lt;/code&gt;, in which case the controlling process will probably be the shell from which you launched python, and exiting that shell would normally send a &lt;code&gt;SIGHUP&lt;/code&gt; to all child processes.&lt;/p&gt; &lt;p&gt;If you want to terminate the process use &lt;code&gt;p.kill()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/#output-callbacks&#34;&gt;Output callbacks.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In combination with &lt;code&gt;_bg=True&lt;/code&gt;, &lt;code&gt;sh&lt;/code&gt; can use callbacks to process output incrementally by passing a callable function to &lt;code&gt;_out&lt;/code&gt; and/or &lt;code&gt;_err&lt;/code&gt;. This callable will be called for each line (or chunk) of data that your command outputs:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sh&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tail&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tail&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;-f&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;/var/log/some_log_file.log&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;process_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_bg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To “quit” your callback, simply &lt;code&gt;return True&lt;/code&gt;. This tells the command not to call your callback anymore. This does not kill the process though see &lt;a href=&#34;#interactive-callbacks&#34;&gt;Interactive callbacks&lt;/a&gt; for how to kill a process from a callback.&lt;/p&gt; &lt;p&gt;The line or chunk received by the callback can either be of type str or bytes. If the output could be decoded using the provided encoding, a str will be passed to the callback, otherwise it would be raw bytes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;html&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_package_management/&#34;&gt;HTML&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Tweak Poetry evaluation and add PDM.&lt;/p&gt; &lt;p&gt;Check &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_package_management/#pdm&#34;&gt;PDM&#39;s&lt;/a&gt; review, it&#39;s awesome!&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Sum up the W3 HTML tutorial.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/html/#html-beautifier&#34;&gt;HTML beautifier.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you encounter html code that it&#39;s not well indented you can use &lt;a href=&#34;https://htmlbeautify.com&#34;&gt;html beautify&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;css&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/css/&#34;&gt;CSS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Sum up the W3 CSS tutorial.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/css/#flexbox-layout&#34;&gt;CSS Flexbox layout.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The Flexbox Layout aims at providing a more efficient way to lay out, align and distribute space among items in a container, even when their size is unknown and/or dynamic.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;javascript&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/&#34;&gt;Javascript&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#resolve-the-307-error&#34;&gt;Resolve the 307 error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Probably you&#39;ve introduced an ending &lt;code&gt;/&lt;/code&gt; to the endpoint, so instead of asking for &lt;code&gt;/my/endpoint&lt;/code&gt; you tried to do &lt;code&gt;/my/endpoint/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#resolve-the-422-error&#34;&gt;Resolve the 422 error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You&#39;re probably passing the wrong arguments to the POST request, to solve it see the &lt;code&gt;text&lt;/code&gt; attribute of the result. For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&#34;/source/add&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;body&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The error is telling us that the required &lt;code&gt;url&lt;/code&gt; parameter is missing.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#resolve-the-409-error&#34;&gt;Resolve the 409 error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Probably an exception was raised in the backend, use &lt;code&gt;pdb&lt;/code&gt; to follow the trace and catch where it happened.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Use ternary conditional operator.&lt;/p&gt; &lt;p&gt;It&#39;s defined by a condition followed by a question mark &lt;code&gt;?&lt;/code&gt;, then an expression to execute if the condition is truthy followed by a colon &lt;code&gt;:&lt;/code&gt;, and finally the expression to execute if the condition is falsy.&lt;/p&gt; &lt;p&gt;&lt;code&gt;condition ? exprIfTrue : exprIfFalse&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getFee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isMember&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isMember&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;$2.00&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;$10.00&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getFee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// expected output: &#34;$2.00&#34;&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getFee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// expected output: &#34;$10.00&#34;&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getFee&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// expected output: &#34;$10.00&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/javascript/javascript/#filter-the-contents-of-an-array&#34;&gt;Filter the contents of an array.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;filter()&lt;/code&gt; method creates a new array filled with elements that pass a test provided by a function.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;filter()&lt;/code&gt; method does not execute the function for empty elements.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;filter()&lt;/code&gt; method does not change the original array.&lt;/p&gt; &lt;p&gt;For example:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ages&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;33&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;checkAdult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;checkAdult&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/javascript/javascript/#interacting-with-html&#34;&gt;Interacting with HTML.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#add-endpoints-only-on-testing-environment&#34;&gt;Add endpoints only on testing environment.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes you want to have some API endpoints to populate the database for end to end testing the frontend. If your &lt;code&gt;app&lt;/code&gt; config has the &lt;code&gt;environment&lt;/code&gt; attribute, you could try to do:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;app&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FastAPI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@lru_cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Configure the program settings.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# no cover: the dependency are injected in the tests&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Loading the config&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# pragma: no cover&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environment&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;testing&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;/seed&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;201&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;seed_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Repository&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Depends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;num_articles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;num_sources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Add seed data for the end to end tests.&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;        Args:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;            repo: Repository to store the data.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        &#34;&#34;&#34;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_articles&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_articles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_sources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_sources&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;But the injection of the dependencies is only done inside the functions, so &lt;code&gt;get_config().environment&lt;/code&gt; will always be the default value. I ended up doing that check inside the endpoint, which is not ideal.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;@app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;/seed&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;201&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;seed_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Depends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Repository&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Depends&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;num_articles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;num_sources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Add seed data for the end to end tests.&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Args:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        repo: Repository to store the data.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environment&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;testing&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;HTTPException&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;404&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/javascript/javascript/#coalescent-operator&#34;&gt;Coalescent operator.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Is similar to the Logical &lt;code&gt;OR&lt;/code&gt; operator (&lt;code&gt;||&lt;/code&gt;), except instead of relying on truthy/falsy values, it relies on &#34;nullish&#34; values (there are only 2 nullish values, &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;This means it&#39;s safer to use when you treat falsy values like &lt;code&gt;0&lt;/code&gt; as valid.&lt;/p&gt; &lt;p&gt;Similar to Logical &lt;code&gt;OR&lt;/code&gt;, it functions as a control-flow operator; it evaluates to the first not-nullish value.&lt;/p&gt; &lt;p&gt;It was introduced in Chrome 80 / Firefox 72 / Safari 13.1. It has no IE support.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;??&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// 4, since neither value is nullish&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;??&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// 10, since &#39;null&#39; is nullish&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;undefined&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;??&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// 0, since &#39;undefined&#39; is nullish&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Here&#39;s a case where it differs from&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Logical OR (||):&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;??&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 0&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;qwik&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_profiling/&#34;&gt;Qwik&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Added memray profiling tool.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://bloomberg.github.io/memray/&#34;&gt;memray&lt;/a&gt; looks very promising.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Qwik.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://qwik.builder.io&#34;&gt;Qwik&lt;/a&gt; is a new kind of web framework that can deliver instantly load web applications at any size or complexity. Your sites and apps can boot with about 1kb of JS (regardless of application complexity), and achieve consistent performance at scale.&lt;/p&gt; &lt;p&gt;You can see a good overview in the &lt;a href=&#34;https://www.youtube.com/watch?v=0dC11DMR3fU&amp;amp;t=154s&#34;&gt;Qwik presentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;jwt&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/jwt/&#34;&gt;JWT&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce JWT.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/JSON_Web_Token&#34;&gt;JWT&lt;/a&gt; (JSON Web Token) is a proposed Internet standard for creating data with optional signature and/or optional encryption whose payload holds JSON that asserts some number of claims. The tokens are signed either using a private secret or a public/private key.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pytest_httpserver/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce &lt;code&gt;pytest-httpserver&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pytest-httpserver.readthedocs.io/en/latest/index.html&#34;&gt;pytest-httpserver&lt;/a&gt; is a python package which allows you to start a real HTTP server for your tests. The server can be configured programmatically to how to respond to requests.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/feedparser/#issues&#34;&gt;Add issue when using &lt;code&gt;updated_parser&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kurtmckee/feedparser/issues/151&#34;&gt;Deprecation warning when using &lt;code&gt;updated_parsed&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update the tmpdir_factory type hints.&lt;/p&gt; &lt;p&gt;You should now use &lt;code&gt;TempPathFactory&lt;/code&gt; instead of &lt;code&gt;TempdirFactory&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#global-usage&#34;&gt;Use &lt;code&gt;pytest-freezegun&lt;/code&gt; globally.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://medium.com/@boxed/flaky-tests-part-3-freeze-the-world-e4929a0da00e&#34;&gt;Most of the tests&lt;/a&gt; work with frozen time, so it&#39;s better to freeze it by default and unfreeze it on the ones that actually need time to move.&lt;/p&gt; &lt;p&gt;To do that set in your &lt;code&gt;tests/conftest.py&lt;/code&gt; a globally used fixture:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TYPE_CHECKING&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;freezegun.api&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FrozenDateTimeFactory&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;autouse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;frozen_time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Generator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;FrozenDateTimeFactory&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Freeze all tests time&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;freezegun&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;freeze_time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;freeze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;freeze&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Ignore a warning of a specific package.&lt;/p&gt; &lt;p&gt;In the &lt;code&gt;pyproject.toml&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;filterwarnings&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Until https://github.com/ktosiek/pytest-freezegun/issues/35 is merged&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;ignore::DeprecationWarning:pytest_freezegun.*&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#run-tests-in-a-random-order&#34;&gt;Run tests in a random order.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;pytest-random-order&lt;/code&gt; is a pytest plugin that randomises the order of tests. This can be useful to detect a test that passes just because it happens to run after an unrelated test that leaves the system in a favourable state.&lt;/p&gt; &lt;p&gt;To use it add the &lt;code&gt;--random-order&lt;/code&gt; to your pytest run.&lt;/p&gt; &lt;p&gt;It &lt;a href=&#34;https://github.com/jbasko/pytest-random-order/issues/46&#34;&gt;can&#39;t yet be used&lt;/a&gt; with &lt;code&gt;pytest-xdist&lt;/code&gt; though :(.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#enforce-serial-execution-of-related-tests&#34;&gt;Enforce serial execution of related tests.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Implement a &lt;code&gt;serial&lt;/code&gt; fixture with a session-scoped file &lt;code&gt;lock&lt;/code&gt; fixture using the &lt;code&gt;filelock&lt;/code&gt; package. You can add this to your &lt;code&gt;conftest.py&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;contextlib&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;filelock&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;session&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp_path_factory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;base_temp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp_path_factory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getbasetemp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;lock_file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base_temp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;serial.lock&#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;filelock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FileLock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lock_file&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lock_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;contextlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;suppress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;OSError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lock_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;serial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;acquire&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;poll_intervall&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then inject the &lt;code&gt;serial&lt;/code&gt; fixture in any test that requires serial execution. All tests that use the serial fixture are executed serially while any tests that do not use the fixture are executed in parallel.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#using-fixtures-at-class-level&#34;&gt;Using fixtures at class level.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes test functions do not directly need access to a fixture object. For example, tests may require to operate with an empty directory as the current working directory but otherwise do not care for the concrete directory.&lt;/p&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usefixtures&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;cleandir&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;TestDirectoryInit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; Due to the &lt;code&gt;usefixtures&lt;/code&gt; marker, the &lt;code&gt;cleandir&lt;/code&gt; fixture will be required for the execution of each test method, just as if you specified a &lt;code&gt;cleandir&lt;/code&gt; function argument to each of them.&lt;/p&gt; &lt;p&gt;You can specify multiple fixtures like this:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mark&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usefixtures&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;cleandir&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;anotherfixture&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Improve the snippet to run some tests in serial instead of parallel.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/feedparser/#parse-a-feed-from-a-string&#34;&gt;Parse a feed from a string.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;feedparser&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rawdata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&#34;&#34;&amp;lt;rss version=&#34;2.0&#34;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;lt;title&amp;gt;Sample Feed&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;lt;/rss&amp;gt;&#34;&#34;&#34;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;feedparser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rawdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;feed&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;title&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;sa&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Sample Feed&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Change log level of a dependency.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;caplog&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WARNING&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;urllib3&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#show-logging-messages-on-the-test-run&#34;&gt;Show logging messages on the test run.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add to your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.pytest.ini_options]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log_cli&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log_cli_level&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Or run it in the command itself &lt;code&gt;pytest -o log_cli=true --log-cli-level=10 func.py&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Remember you can change the log level of the different components in case it&#39;s too verbose.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#the-tmp_path-fixture&#34;&gt;The tmp_path fixture.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can use the &lt;code&gt;tmp_path&lt;/code&gt; fixture which will provide a temporary directory unique to the test invocation, created in the base temporary directory.&lt;/p&gt; &lt;p&gt;&lt;code&gt;tmp_path&lt;/code&gt; is a &lt;code&gt;pathlib.Path&lt;/code&gt; object. Here is an example test usage:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_create_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;sub&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;hello.txt&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CONTENT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CONTENT&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#the-tmpdir-fixture&#34;&gt;Deprecate the tmpdir fixture.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Warning: Don&#39;t use &lt;code&gt;tmpdir&lt;/code&gt; use &lt;code&gt;tmp_path&lt;/code&gt; instead because &lt;code&gt;tmpdir&lt;/code&gt; uses &lt;code&gt;py&lt;/code&gt; which is unmaintained and has unpatched vulnerabilities.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Remove warning that &lt;code&gt;pytest-random-order&lt;/code&gt; can&#39;t be used with &lt;code&gt;pytest-xdist&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The issue was fixed&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gettext&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_internationalization/&#34;&gt;Gettext&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce gettext.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/gettext.html&#34;&gt;Gettext&lt;/a&gt; is the defacto universal solution for &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_internationalization/&#34;&gt;internationalization&lt;/a&gt; (I18N) and localization (L10N), offering a set of tools that provides a framework to help other packages produce multi-lingual messages. It gives an opinionated way of how programs should be written to support translated message strings and a directory and file naming organisation for the messages that need to be translated.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Python Internationalization.&lt;/p&gt; &lt;p&gt;To make your code accessible to more people, you may want to support more than one language. It&#39;s not as easy as it looks as it&#39;s not enough to translate it but also it must look and feel local. The answer is internationalization.&lt;/p&gt; &lt;p&gt;Internationalization (numeronymed as i18n) can be defined as the design process that ensures a program can be adapted to various languages and regions without requiring engineering changes to the source code.&lt;/p&gt; &lt;p&gt;Common internationalization tasks include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Facilitating compliance with Unicode.&lt;/li&gt; &lt;li&gt;Minimizing the use of concatenated strings.&lt;/li&gt; &lt;li&gt;Accommodating support for double-byte languages (e.g. Japanese) and right-to-left languages (for example, Hebrew).&lt;/li&gt; &lt;li&gt;Avoiding hard-coded text.&lt;/li&gt; &lt;li&gt;Designing for independence from cultural conventions (e. g., date and time displays), limiting language, and character sets.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Localization (l10n) refers to the adaptation of your program, once internationalized, to the local language and cultural habits. In theory it looks simple to implement. In practice though, it takes time and effort to provide the best Internationalization and Localization experience for your global audience.&lt;/p&gt; &lt;p&gt;In Python, there is a specific bundled module for that and it’s called &lt;a href=&#34;https://lyz-code.github.io/blue-book/gettext/&#34;&gt;gettext&lt;/a&gt;, which consists of a public API and a set of tools that help extract and generate message catalogs from the source code.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/&#34;&gt;Python Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#how-to-raise-a-warning&#34;&gt;How to raise a warning.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Warning messages are typically issued in situations where it is useful to alert the user of some condition in a program, where that condition (normally) doesn’t warrant raising an exception and terminating the program. For example, one might want to issue a warning when a program uses an obsolete module.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;warnings&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;warnings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Message&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;DeprecationWarning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To test the function with pytest you can use &lt;a href=&#34;https://docs.pytest.org/en/stable/how-to/capture-warnings.html#warns&#34;&gt;&lt;code&gt;pytest.warns&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;warnings&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pytest&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_warning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;warns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;UserWarning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;my warning&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;warnings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;my warning&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;UserWarning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#parse-xml-file-with-beautifulsoup&#34;&gt;Parse XML file with beautifulsoup.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You need both &lt;code&gt;beautifulsoup4&lt;/code&gt; and &lt;code&gt;lxml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;bs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;lxml&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-a-traceback-from-an-exception&#34;&gt;Get a traceback from an exception.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;traceback&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;traceback_str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;traceback&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format_tb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__traceback__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#warning-categories&#34;&gt;Add the Warning categories.&lt;/a&gt;&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Class&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Warning&lt;/td&gt; &lt;td&gt;This is the base class of all warning category classes.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;UserWarning&lt;/td&gt; &lt;td&gt;The default category for warn().&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;DeprecationWarning&lt;/td&gt; &lt;td&gt;Warn other developers about deprecated features.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;FutureWarning&lt;/td&gt; &lt;td&gt;Warn other end users of applications about deprecated features.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SyntaxWarning&lt;/td&gt; &lt;td&gt;Warn about dubious syntactic features.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;RuntimeWarning&lt;/td&gt; &lt;td&gt;Warn about dubious runtime features.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;PendingDeprecationWarning&lt;/td&gt; &lt;td&gt;Warn about features that will be deprecated in the future (ignored by default).&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ImportWarning&lt;/td&gt; &lt;td&gt;Warn triggered during the process of importing a module (ignored by default).&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;UnicodeWarning&lt;/td&gt; &lt;td&gt;Warn related to Unicode.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;BytesWarning&lt;/td&gt; &lt;td&gt;Warn related to bytes and bytearray.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;ResourceWarning&lt;/td&gt; &lt;td&gt;Warn related to resource usage (ignored by default).&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#how-to-find-duplicates-in-a-list-in-python&#34;&gt;How to Find Duplicates in a List in Python.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;numbers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;duplicates&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numbers&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numbers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;unique_duplicates&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;duplicates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to count the number of occurrences of each duplicate, you can use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;collections&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Counter&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;numbers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;duplicates&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;counts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To remove the duplicates use a combination of &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;unique&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numbers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#how-to-decompress-a-gz-file&#34;&gt;How to decompress a gz file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;gzip&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;shutil&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gzip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;file.txt.gz&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;rb&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;file.txt&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;wb&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;shutil&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;copyfileobj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#how-to-compress/decompress-a-tar-file&#34;&gt;How to compress/decompress a tar file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;compress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tar_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    Adds files (`members`) to a tar_file and compress it&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tarfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tar_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;w:gz&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;member&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;member&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;tar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;decompress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tar_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    Extracts `tar_file` and puts the `members` to `path`.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    If members is None, all members on `tar_file` will be extracted.&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;tar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tarfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tar_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;r:gz&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getmembers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;member&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;members&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extract&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;member&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;tar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-attribute-of-an-attribute&#34;&gt;Get the attribute of an attribute when sorting.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To sort the list in place:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;ut&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To return a new list, use the &lt;code&gt;sorted()&lt;/code&gt; built-in function:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;newlist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ut&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lambda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#how-to-extend-a-dictionary&#34;&gt;How to extend a dictionary.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#how-to-close-a-subprocess-process&#34;&gt;How to close a subprocess process.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;terminate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#define-a-property-of-a-class&#34;&gt;Define a property of a class.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;re using Python 3.9 or above you can directly use the decorators:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;G&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;nd&#34;&gt;@classmethod&lt;/span&gt;
    &lt;span class=&#34;nd&#34;&gt;@property&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__doc__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;A doc for &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;!r}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you&#39;re not, the solutions are not that good.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#fix-sim113-use-enumerate&#34;&gt;Fix SIM113 Use enumerate.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;enumerate&lt;/code&gt; to get a running number over an iterable.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;el&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iterable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;el&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;enumerate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#parse-an-rfc2822-date&#34;&gt;Parse an RFC2822 date.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Interesting to test the accepted format of &lt;a href=&#34;https://www.rssboard.org/rss-validator/docs/error/InvalidRFC2822Date.html&#34;&gt;RSS dates&lt;/a&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;email.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parsedate_to_datetime&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datestr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;Sun, 09 Mar 1997 13:45:00 -0500&#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parsedate_to_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datestr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1997&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;45&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tzinfo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timedelta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;68400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#convert-a-datetime-to-rfc2822&#34;&gt;Convert a datetime to RFC2822.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Interesting as it&#39;s the accepted format of &lt;a href=&#34;https://www.rssboard.org/rss-validator/docs/error/InvalidRFC2822Date.html&#34;&gt;RSS dates&lt;/a&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;email&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;utils&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nowdt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;utils&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;format_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nowdt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&#39;Tue, 10 Feb 2020 10:06:53 -0000&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#encode-url&#34;&gt;Encode url.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;urllib.parse&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AnyHttpUrl&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_normalize_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AnyHttpUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Encode url to make it compatible with AnyHttpUrl.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cast&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;AnyHttpUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;urllib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;quote&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;:/&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The &lt;code&gt;:/&lt;/code&gt; is needed when you try to parse urls that have the protocol, otherwise &lt;code&gt;https://www.&lt;/code&gt; gets transformed into &lt;code&gt;https%3A//www.&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#initialize-a-dataclass-with-kwargs&#34;&gt;Initialize a dataclass with kwargs.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you care about accessing attributes by name, or if you can&#39;t distinguish between known and unknown arguments during initialisation, then your last resort without rewriting &lt;code&gt;__init__&lt;/code&gt; (which pretty much defeats the purpose of using dataclasses in the first place) is writing a &lt;code&gt;@classmethod&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;dataclasses&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dataclass&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;inspect&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;signature&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@dataclass&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Container&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@classmethod&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;from_kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# fetch the constructor&#39;s signature&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;cls_fields&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;signature&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parameters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# split the kwargs into native ones and new ones&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;native_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cls_fields&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;native_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;new_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# use the native ones to create the class ...&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;native_args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# ... and add the new ones by hand&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_value&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
            &lt;span class=&#34;nb&#34;&gt;setattr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Usage:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;user_id&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;body&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;baz&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;amount&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Container&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# still doesn&#39;t work, raises a TypeError&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Container&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;from_kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# prints: &#39;baz&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#replace-a-substring-of-a-string&#34;&gt;Replace a substring of a string.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;I like bananas&#34;&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;bananas&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;apples&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#create-random-number&#34;&gt;Create random number.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#check-if-local-port-is-available-or-in-use&#34;&gt;Check if local port is available or in use.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Create a temporary socket and then try to bind to the port to see if it&#39;s available. Close the socket after validating that the port is available.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;port_in_use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Test if a local port is used.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;suppress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;OSError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;0.0.0.0&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sock&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#fix-r1728:-consider-using-a-generator&#34;&gt;Fix R1728: Consider using a generator.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Removing &lt;code&gt;[]&lt;/code&gt; inside calls that can use containers or generators should be considered for performance reasons since a generator will have an upfront cost to pay. The performance will be better if you are working with long lists or sets.&lt;/p&gt; &lt;p&gt;Problematic code:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))])&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# [consider-using-generator]&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))])&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# [consider-using-generator]&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))])&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# [consider-using-generator]&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))])&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# [consider-using-generator]&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))])&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# [consider-using-generator]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Correct code:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;tuple&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#fix-w1510:-using-subprocess.run-without-explicitly-set-check-is-not-recommended&#34;&gt;Fix W1510: Using subprocess.run without explicitly set check is not recommended.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;run&lt;/code&gt; call in the example will succeed whether the command is successful or not. This is a problem because we silently ignore errors.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;proc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;ls&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;proc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;When we pass &lt;code&gt;check=True&lt;/code&gt;, the behavior changes towards raising an exception when the return code of the command is non-zero.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#convert-bytes-to-string&#34;&gt;Convert bytes to string.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;byte_var&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#use-pipes-with-subprocess&#34;&gt;Use pipes with subprocess.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To use pipes with subprocess you need to use the flag &lt;code&gt;check=True&lt;/code&gt; which is &lt;a href=&#34;https://github.com/duo-labs/dlint/blob/master/docs/linters/DUO116.md&#34;&gt;a bad idea&lt;/a&gt;. Instead you should use two processes and link them together in python:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;ps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Popen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;ps&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-A&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PIPE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;grep&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;process_name&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ps&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#pass-input-to-the-stdin-of-a-subprocess&#34;&gt;Pass input to the stdin of a subprocess.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;subprocess&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;myapp&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;data_to_write&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#copy-and-paste-from-clipboard&#34;&gt;Copy and paste from clipboard.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can use &lt;a href=&#34;https://www.delftstack.com/howto/python/python-copy-to-clipboard/&#34;&gt;many libraries&lt;/a&gt; to do it, but if you don&#39;t want to add any other dependencies you can use &lt;code&gt;subprocess run&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To copy from the &lt;code&gt;selection&lt;/code&gt; clipboard, assuming you&#39;ve got &lt;code&gt;xclip&lt;/code&gt; installed, you could do:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;xclip&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-selection&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;clipboard&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-i&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;text to be copied&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To paste it:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;subprocess&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;check_output&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;xclip&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-o&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-selection&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;clipboard&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Good luck testing that in the CI xD&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-an-instance-of-an-enum-by-value&#34;&gt;Get an instance of an Enum by value.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want to initialize a pydantic model with an &lt;code&gt;Enum&lt;/code&gt; but all you have is the value of the &lt;code&gt;Enum&lt;/code&gt; then you need to create a method to get the correct Enum. Otherwise &lt;code&gt;mypy&lt;/code&gt; will complain that the type of the assignation is &lt;code&gt;str&lt;/code&gt; and not &lt;code&gt;Enum&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;So if the model is the next one:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ServiceStatus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Model the docker status of a service.&#34;&#34;&#34;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Environment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can&#39;t do &lt;code&gt;ServiceStatus(name=&#39;test&#39;, environment=&#39;production&#39;)&lt;/code&gt;. you need to add the &lt;code&gt;get_by_value&lt;/code&gt; method to the &lt;code&gt;Enum&lt;/code&gt; class:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Environment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Enum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Set the possible environments.&#34;&#34;&#34;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;STAGING&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;staging&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;PRODUCTION&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;production&#34;&lt;/span&gt;

    &lt;span class=&#34;nd&#34;&gt;@classmethod&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_by_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Enum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Return the Enum element that meets a value&#34;&#34;&#34;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;member&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;member&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;member&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Now you can do:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;ServiceStatus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;test&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Environment&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_by_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;production&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#print-datetime-with-a-defined-format&#34;&gt;Print datetime with a defined format.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;today&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;We are the &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;, %b %Y&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where the datetime format is a string built from &lt;a href=&#34;#parse-a-datetime-from-a-string&#34;&gt;these directives&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#print-string-with-asciiart&#34;&gt;Print string with asciiart.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pyfiglet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pyfiglet&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;figlet_format&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;figlet_format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;09 : 30&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want to change the default width of 80 caracteres use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pyfiglet&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Figlet&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Figlet&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;font&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;standard&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;renderText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;aaaaaaaaaaaaaaaaa&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#print-specific-time-format&#34;&gt;Print specific time format.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;now&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strftime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;%Y-%m-&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;T%H:%M:%S&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Code Meaning Example %a Weekday as locale’s abbreviated name. Mon %A Weekday as locale’s full name. Monday %w Weekday as a decimal number, where 0 is Sunday and 6 is Saturday. 1 %d Day of the month as a zero-padded decimal number. 30 %-d Day of the month as a decimal number. (Platform specific) 30 %b Month as locale’s abbreviated name. Sep %B Month as locale’s full name. September %m Month as a zero-padded decimal number. 09 %-m Month as a decimal number. (Platform specific) 9 %y Year without century as a zero-padded decimal number. 13 %Y Year with century as a decimal number. 2013 %H Hour (24-hour clock) as a zero-padded decimal number. 07 %-H Hour (24-hour clock) as a decimal number. (Platform specific) 7 %I Hour (12-hour clock) as a zero-padded decimal number. 07 %-I Hour (12-hour clock) as a decimal number. (Platform specific) 7 %p Locale’s equivalent of either AM or PM. AM %M Minute as a zero-padded decimal number. 06 %-M Minute as a decimal number. (Platform specific) 6 %S Second as a zero-padded decimal number. 05 %-S Second as a decimal number. (Platform specific) 5 %f Microsecond as a decimal number, zero-padded on the left. 000000 %z UTC offset in the form +HHMM or -HHMM (empty string if the object is naive). %Z Time zone name (empty string if the object is naive). %j Day of the year as a zero-padded decimal number. 273 %-j Day of the year as a decimal number. (Platform specific) 273 %U Week number of the year (Sunday as the first day of the week) as a zero padded decimal number. All days in a new year preceding the first Sunday are considered to be in week 0. 39 %W Week number of the year (Monday as the first day of the week) as a decimal number. All days in a new year preceding the first Monday are considered to be in week 0. %c Locale’s appropriate date and time representation. Mon Sep 30 07:06:05 2013 %x Locale’s appropriate date representation. 09/30/13 %X Locale’s appropriate time representation. 07:06:05 %% A literal &#39;%&#39; character. %&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate tmpdir in favour of tmp_path.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#pad-integer-with-zeros&#34;&gt;Pad integer with zeros.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;length = &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;03&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;001&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#pathlib-make-parent-directories-if-they-don&#39;t-exist&#34;&gt;Pathlib make parent directories if they don&#39;t exist.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;pathlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;/tmp/sub1/sub2&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exist_ok&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;From the &lt;a href=&#34;https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir&#34;&gt;docs&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;parents&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, any missing parents of this path are created as needed; they are created with the default permissions without taking mode into account (mimicking the POSIX &lt;code&gt;mkdir -p&lt;/code&gt; command).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;parents&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default), a missing parent raises &lt;code&gt;FileNotFoundError&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;exist_ok&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default), &lt;code&gt;FileExistsError&lt;/code&gt; is raised if the target directory already exists.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If &lt;code&gt;exist_ok&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;FileExistsError&lt;/code&gt; exceptions will be ignored (same behavior as the POSIX &lt;code&gt;mkdir -p&lt;/code&gt; command), but only if the last path component is not an existing non-directory file.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#pathlib-touch-a-file&#34;&gt;Pathlib touch a file.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Create a file at this given path.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;pathlib&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;/tmp/file.txt&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;touch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exist_ok&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If the file already exists, the function succeeds if &lt;code&gt;exist_ok&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (and its modification time is updated to the current time), otherwise &lt;code&gt;FileExistsError&lt;/code&gt; is raised.&lt;/p&gt; &lt;p&gt;If the parent directory doesn&#39;t exist you need to create it first.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;global_conf_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xdg_home&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;autoimport&#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;config.toml&#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;global_conf_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;global_conf_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;touch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exist_ok&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#pad-a-string-with-spaces&#34;&gt;Pad a string with spaces.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;John&#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ljust&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&#39;John           &#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-hostname-of-the-machine&#34;&gt;Get hostname of the machine.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Any of the next three options:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;platform&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;platform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;socket&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gethostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-common-elements-of-two-lists&#34;&gt;Get common elements of two lists.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;d&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#recursively-find-files&#34;&gt;Recursively find files.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pathlib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;src&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rglob&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;*.c&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#using-the-logging-module&#34;&gt;Print an exception using the logging module.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Logging an exception can be done with the module-level function &lt;code&gt;logging.exception()&lt;/code&gt; like so:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;logging&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;BaseException&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;An exception was thrown!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ERROR:root:An exception was thrown!
Traceback (most recent call last):
File &#34;.../Desktop/test.py&#34;, line 4, in &amp;lt;module&amp;gt;
    1/0
ZeroDivisionError: division by zero
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Notes&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The function &lt;code&gt;logging.exception()&lt;/code&gt; should only be called from an exception handler.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The logging module should not be used inside a logging handler to avoid a &lt;code&gt;RecursionError&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It&#39;s also possible to log the exception with another log level but still show the exception details by using the keyword argument &lt;code&gt;exc_info=True&lt;/code&gt;, like so:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;critical&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;An exception was thrown!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;An exception was thrown!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;warning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;An exception was thrown!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;An exception was thrown!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;An exception was thrown!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;An exception was thrown!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exc_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#with-the-traceback-module&#34;&gt;Print an exception with the traceback module.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;traceback&lt;/code&gt; module provides methods for formatting and printing exceptions and their tracebacks, e.g. this would print exception like the default handler does:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;traceback&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;traceback&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print_exc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;Traceback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;most&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;recent&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;last&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;File&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;C:\scripts\divide_by_zero.py&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;ne&#34;&gt;ZeroDivisionError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;division&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zero&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ics&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ics/&#34;&gt;ICS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce ICS.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://icspy.readthedocs.io/en/stable/index.html&#34;&gt;ics&lt;/a&gt; is a pythonic iCalendar library. Its goals are to read and write ics data in a developer-friendly way.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;maison&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/maison/&#34;&gt;Maison&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Maison.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dbatten5/maison&#34;&gt;Maison&lt;/a&gt; is a Python library to read configuration settings from configuration files using &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;&lt;code&gt;pydantic&lt;/code&gt;&lt;/a&gt; behind the scenes.&lt;/p&gt; &lt;p&gt;It&#39;s useful to parse TOML config files.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Use mypy pydantic&#39;s plugin.&lt;/p&gt; &lt;p&gt;If you use &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/&#34;&gt;mypy&lt;/a&gt; I highly recommend you to &lt;a href=&#34;https://pydantic-docs.helpmanual.io/mypy_plugin/#configuring-the-plugin&#34;&gt;activate the pydantic plugin&lt;/a&gt; by adding to your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.mypy]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;pydantic.mypy&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;[tool.pydantic-mypy]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;init_forbid_extra&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;init_typed&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;warn_required_dynamic_aliases&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;warn_untyped_fields&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#ignore-a-field-when-representing-an-object&#34;&gt;Ignore a field when representing an object.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;repr=False&lt;/code&gt;. This is useful for properties that don&#39;t return a value quickly, for example if you save an &lt;code&gt;sh&lt;/code&gt; background process.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Temp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;boo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;repr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;elasticsearch&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/&#34;&gt;Elasticsearch&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#delete-snapshot-repository&#34;&gt;Delete snapshot repository.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-XDELETE&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;url&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;/_snapshot/&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;backup_path&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#searching-documents&#34;&gt;Searching documents.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;We use HTTP requests to talk to ElasticSearch. A HTTP request is made up of several components such as the URL to make the request to, HTTP verbs (GET, POST etc) and headers. In order to succinctly and consistently describe HTTP requests the ElasticSearch documentation uses cURL command line syntax. This is also the standard practice to describe requests made to ElasticSearch within the user community.&lt;/p&gt; &lt;p&gt;An example HTTP request using CURL syntax looks like this:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-XPOST&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://localhost:9200/_search&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-d&lt;span class=&#34;s1&#34;&gt;&#39; { &#34;query&#34;: { &#34;match_all&#34;: {} }&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;}&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#get-documents-that-match-a-string&#34;&gt;Get documents that match a string.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;-H&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;-XPOST&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://localhost:9200/_search&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;-d&lt;span class=&#34;s1&#34;&gt;&#39; { &#34;query&#34;: { &#34;query_string&#34;: {&#34;query&#34;: &#34;test company&#34;} }}&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce python elasticsearch library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://elasticsearch-py.readthedocs.io/en/latest/&#34;&gt;Python elasticsearch&lt;/a&gt; is the Official low-level client for Elasticsearch. Its goal is to provide common ground for all Elasticsearch-related code in Python; because of this it tries to be opinion-free and very extendable.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://elasticsearch-py.readthedocs.io/en/latest/#installation&#34;&gt;Installation&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;elasticsearch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Usage:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;elasticsearch&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Elasticsearch&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Elasticsearch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;http://localhost:9200&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;resp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;test-index&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;match_all&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}})&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;documents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;hits&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;hits&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;partial_document&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;value&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;resp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INDEX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-mysql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/sql/sql/&#34;&gt;Python Mysql&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/sql/sql/#list-all-tables&#34;&gt;List all tables using different databases.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Mysql:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Postgresql:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Sqlite:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tables&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pythonping&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pythonping/&#34;&gt;pythonping&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce pythonping.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alessandromaggio/pythonping&#34;&gt;pythonping&lt;/a&gt; is simple way to ping in Python. With it, you can send ICMP Probes to remote devices like you would do from the terminal.&lt;/p&gt; &lt;p&gt;Warning: Since using &lt;code&gt;pythonping&lt;/code&gt; requires root permissions or granting &lt;code&gt;cap_net_raw&lt;/code&gt; capability to the python interpreter, try to measure the latency to a server by other means such as using &lt;code&gt;requests&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-vlc&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_vlc/&#34;&gt;Python VLC&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce python&#39;s vlc library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://wiki.videolan.org/Python_bindings/&#34;&gt;Python VLC&lt;/a&gt; is a library to control &lt;code&gt;vlc&lt;/code&gt; from python.&lt;/p&gt; &lt;p&gt;There is not usable online documentation, you&#39;ll have to go through the &lt;code&gt;help(&amp;lt;component&amp;gt;)&lt;/code&gt; inside the python console.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;questionary&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/&#34;&gt;questionary&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/#exit-when-using-control-+-c&#34;&gt;Exit when using control + c.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want the question to exit when it receives a &lt;code&gt;KeyboardInterrupt&lt;/code&gt; event, use &lt;code&gt;unsafe_ask&lt;/code&gt; instead of &lt;code&gt;ask&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rich&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/&#34;&gt;rich&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/#live-display-text&#34;&gt;Live display text.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.live&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Live&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Live&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Test&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;live&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;row&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;live&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Test &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you don&#39;t want the text to have the default colors, you can embed it all in a &lt;code&gt;Text&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;selenium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/&#34;&gt;Selenium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#click-on-element&#34;&gt;Click on element.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once you&#39;ve opened the page you want to interact with &lt;code&gt;driver.get()&lt;/code&gt;, you need to get the Xpath of the element to click on. You can do that by using your browser inspector, to select the element, and once on the code if you right click there is a &#34;Copy XPath&#34;&lt;/p&gt; &lt;p&gt;Once that is done you should have something like this when you paste it down.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;//*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;@id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;react&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;”&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;section&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;article&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Similarly it is the same process for the input fields for username, password, and login button.&lt;/p&gt; &lt;p&gt;We can go ahead and do that on the current page. We can store these xpaths as strings in our code to make it readable.&lt;/p&gt; &lt;p&gt;We should have three xpaths from this page and one from the initial login.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;first_login&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;//*[@id=”react-root”]/section/main/article/div[2]/div[2]/p/a&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;username_input&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;//*[@id=&#34;react-root&#34;]/section/main/div/article/div/div[1]/div/form/div[2]/div/label/input&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;password_input&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;//*[@id=&#34;react-root&#34;]/section/main/div/article/div/div[1]/div/form/div[3]/div/label/input&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;login_submit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;//*[@id=&#34;react-root&#34;]/section/main/div/article/div/div[1]/div/form/div[4]/button/div&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Now that we have the xpaths defined we can now tell Selenium webdriver to click and send some keys over for the input fields.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;selenium.webdriver.common.by&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;By&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;By&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XPATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first_login&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;By&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XPATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username_input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;By&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XPATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password_input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;password&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find_element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;By&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XPATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;login_submit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#bypass-selenium-detectors&#34;&gt;Bypass Selenium detectors.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes web servers react differently if they notice that you&#39;re using selenium. Browsers can be detected through different ways and some commonly used mechanisms are as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Implementing captcha / recaptcha to detect the automatic bots.&lt;/li&gt; &lt;li&gt;Non-human behaviour (browsing too fast, not scrolling to the visible elements, ...)&lt;/li&gt; &lt;li&gt;Using an IP that&#39;s flagged as suspicious (VPN, VPS, Tor...)&lt;/li&gt; &lt;li&gt;Detecting the term HeadlessChrome within headless Chrome UserAgent&lt;/li&gt; &lt;li&gt;Using Bot Management service from &lt;a href=&#34;http://www.distilnetworks.com/&#34;&gt;Distil Networks&lt;/a&gt;, &lt;a href=&#34;https://www.akamai.com/us/en/products/security/bot-manager.jsp&#34;&gt;Akamai&lt;/a&gt;, &lt;a href=&#34;https://datadome.co/product/&#34;&gt;Datadome&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;They do it through different mechanisms:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#use-undetected-chromedriver&#34;&gt;Use undetected-chromedriver&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#use-selenium-stealth&#34;&gt;Use Selenium stealth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#rotate-the-user-agent&#34;&gt;Rotate the user agent&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#changing-browser-properties&#34;&gt;Changing browser properties&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#predefined-javascript-variables&#34;&gt;Predefined Javascript variables&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#dont-use-selenium&#34;&gt;Don&#39;t use selenium&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you&#39;ve already been detected, you might get blocked for a plethora of other reasons even after using these methods. So you may have to try accessing the site that was detecting you using a VPN, different user-agent, etc.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#open-a-url&#34;&gt;Basic Selenium commands.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Open a URL:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;https://duckduckgo.com/&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Get page source:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;page_source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Get current url:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_url&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#disable-loading-of-images&#34;&gt;Disable loading of images.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can pass &lt;code&gt;options&lt;/code&gt; to the initialization of the chromedriver to tweak how does the browser behave. To get a list of the actual &lt;code&gt;prefs&lt;/code&gt; you can go to &lt;code&gt;chrome://prefs-internals&lt;/code&gt;, there you can get the code you need to tweak.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ChromeOptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_experimental_option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&#34;prefs&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&#34;profile.default_content_setting_values.images&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sqlite3&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/&#34;&gt;sqlite3&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/#get-a-list-of-the-tables&#34;&gt;Get a list of the tables.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;sql_query&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;&#34;&#34;SELECT name FROM sqlite_master&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;  WHERE type=&#39;table&#39;;&#34;&#34;&#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sqliteConnection&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sql_query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cursor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fetchall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sh&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/&#34;&gt;sh&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/#avoid-exception-logging-when-killing-a-background-process&#34;&gt;Avoid exception logging when killing a background process.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In order to catch this exception execute your process with &lt;code&gt;_bg_exec=False&lt;/code&gt; and execute &lt;code&gt;p.wait()&lt;/code&gt; if you want to handle the exception. Otherwise don&#39;t use the &lt;code&gt;p.wait()&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_bg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_bg_exc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SignalException_SIGKILL&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;typer&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/typer/&#34;&gt;Typer&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Typer.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://typer.tiangolo.com/&#34;&gt;Typer&lt;/a&gt; is a library for building CLI applications that users will love using and developers will love creating. Based on Python 3.6+ type hints.&lt;/p&gt; &lt;p&gt;The key features are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;Intuitive to write&lt;/em&gt;: Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.&lt;/li&gt; &lt;li&gt;&lt;em&gt;Easy to use&lt;/em&gt;: It&#39;s easy to use for the final users. Automatic help, and automatic completion for all shells.&lt;/li&gt; &lt;li&gt;&lt;em&gt;Short&lt;/em&gt;: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.&lt;/li&gt; &lt;li&gt;&lt;em&gt;Start simple&lt;/em&gt;: The simplest example adds only 2 lines of code to your app: 1 import, 1 function call.&lt;/li&gt; &lt;li&gt;&lt;em&gt;Grow large&lt;/em&gt;: Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/typer/#get-the-command-line-application-directory&#34;&gt;Get the command line application directory.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can get the application directory where you can, for example, save configuration files with &lt;code&gt;typer.get_app_dir()&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pathlib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typer&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;APP_NAME&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;my-super-cli-app&#34;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Define the main command line interface.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;app_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_app_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;APP_NAME&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;config_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;app_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;config.json&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;config_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Config file doesn&#39;t exist yet&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;__main__&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;typer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;It will give you a directory for storing configurations appropriate for your CLI program for the current user in each operating system.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/typer/#exiting-with-an-error-code&#34;&gt;Exiting with an error code.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;typer.Exit()&lt;/code&gt; takes an optional code parameter. By default, code is &lt;code&gt;0&lt;/code&gt;, meaning there was no error.&lt;/p&gt; &lt;p&gt;You can pass a code with a number other than &lt;code&gt;0&lt;/code&gt; to tell the terminal that there was an error in the execution of the program:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typer&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;root&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;The root user is reserved&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;New user created: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;__main__&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;typer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/typer/#create-a---version-command-&#34;&gt;Create a &lt;code&gt;--version&lt;/code&gt; command.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You could use a callback to implement a &lt;code&gt;--version&lt;/code&gt; CLI option.&lt;/p&gt; &lt;p&gt;It would show the version of your CLI program and then it would terminate it. Even before any other CLI parameter is processed.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typer&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;__version__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;0.1.0&#34;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;version_callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Print the version of the program.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Awesome CLI Version: &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__version__&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;raise&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;--version&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;version_callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is_eager&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;__main__&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;typer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/typer/#testing&#34;&gt;Testing.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Testing is similar to &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/#testing-click-applications&#34;&gt;&lt;code&gt;click&lt;/code&gt; testing&lt;/a&gt;, but you import the &lt;code&gt;CliRunner&lt;/code&gt; directly from &lt;code&gt;typer&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typer.testing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CliRunner&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;generic-coding-practices&#34;&gt;Generic Coding Practices&lt;/h3&gt; &lt;h4 id=&#34;use-warnings-to-evolve-your-code&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/use_warnings/&#34;&gt;Use warnings to evolve your code&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Using warnings to evolve your package.&lt;/p&gt; &lt;p&gt;Regardless of the &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/&#34;&gt;versioning system&lt;/a&gt; you&#39;re using, once you reach your first stable version, the commitment to your end users must be that you give them time to adapt to the changes in your program. So whenever you want to introduce a breaking change release it under a new interface, and in parallel, start emitting &lt;code&gt;DeprecationWarning&lt;/code&gt; or &lt;code&gt;UserWarning&lt;/code&gt; messages whenever someone invokes the old one. Maintain this state for a defined period (for example six months), and communicate explicitly in the warning message the timeline for when users have to migrate.&lt;/p&gt; &lt;p&gt;This gives everyone time to move to the new interface without breaking their system, and then the library may remove the change and get rid of the old design chains forever. As an added benefit, only people using the old interface will ever see the warning, as opposed to affecting everyone (as seen with the semantic versioning major version bump).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Change signature of method if you can.&lt;/p&gt; &lt;p&gt;You can take the chance of the deprecation to change the signature of the function, so that if the user is using the old argument, it uses the old behaviour and gets the warning, and if it&#39;s using the new argument, it uses the new. The advantage of changing the signature is that you don&#39;t need to do another deprecation for the temporal argument flag.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/use_warnings/#use-environmental-variables&#34;&gt;Use environmental variables to evolve your packages.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A cleaner way to handle the package evolve is with environmental variables, that way you don&#39;t need to change the signature of the function twice. I&#39;ve learned this from &lt;a href=&#34;https://github.com/boto/botocore/issues/2705&#34;&gt;boto&lt;/a&gt; where they informed their users this way:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If you wish to test the new feature we have created a new environment variable &lt;code&gt;BOTO_DISABLE_COMMONNAME&lt;/code&gt;. Setting this to &lt;code&gt;true&lt;/code&gt; will suppress the warning and use the new functionality.&lt;/li&gt; &lt;li&gt;If you are concerned about this change causing disruptions, you can pin your version of &lt;code&gt;botocore&lt;/code&gt; to &lt;code&gt;&amp;lt;1.28.0&lt;/code&gt; until you are ready to migrate.&lt;/li&gt; &lt;li&gt; &lt;p&gt;If you are only concerned about silencing the warning in your logs, use &lt;code&gt;warnings.filterwarnings&lt;/code&gt; when instantiating a new service client.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;warnings&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;warnings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filterwarnings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;ignore&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;category&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;FutureWarning&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;botocore.client&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;abstract-syntax-trees&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/abstract_syntax_trees/&#34;&gt;Abstract Syntax Trees&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce abstract syntax trees.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Abstract_syntax_tree&#34;&gt;Abstract syntax trees&lt;/a&gt; (AST) is a tree representation of the abstract syntactic structure of text (often source code) written in a formal language. Each node of the tree denotes a construct occurring in the text.&lt;/p&gt; &lt;p&gt;The syntax is &#34;abstract&#34; in the sense that it does not represent every detail appearing in the real syntax, but rather just the structural or content-related details. For instance, grouping parentheses are implicit in the tree structure, so these do not have to be represented as separate nodes. Likewise, a syntactic construct like an if-condition-then statement may be denoted by means of a single node with three branches.&lt;/p&gt; &lt;p&gt;This distinguishes abstract syntax trees from concrete syntax trees, traditionally designated parse trees. Parse trees are typically built by a parser during the source code translation and compiling process. Once built, additional information is added to the AST by means of subsequent processing, e.g., contextual analysis.&lt;/p&gt; &lt;p&gt;Abstract syntax trees are also used in program analysis and program transformation systems.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyparsing/pyparsing/&#34;&gt;&lt;code&gt;pyparsing&lt;/code&gt;&lt;/a&gt; looks to be a good candidate to &lt;a href=&#34;https://stackoverflow.com/questions/1721553/how-to-construct-an-abstract-syntax-tree&#34;&gt;construct an AST&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;frontend-development&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/frontend_development/&#34;&gt;Frontend Development&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/frontend_development/#newbie-tips&#34;&gt;Newbie tips.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve recently started learning how to make web frontends, I feel completely lost xD. I don&#39;t know even how to search well what I need, it&#39;s like going back to programming 101. So I&#39;m seeing things that you don&#39;t see when you already are proficient in a language, so here are some tips.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/frontend_development/#dont-resize-your-browser-window&#34;&gt;Don&#39;t resize your browser window&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/frontend_development/#your-frontend-probably-doesnt-talk-to-your-backend&#34;&gt;Your frontend probably doesn&#39;t talk to your backend&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/frontend_development/#write-testable-code&#34;&gt;Write testable code&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/frontend_development/#ux-design&#34;&gt;UX design.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The most popular tool out there is &lt;code&gt;Figma&lt;/code&gt; but it&#39;s closed sourced, the alternative (quite popular in github) is &lt;a href=&#34;https://penpot.app/&#34;&gt;&lt;code&gt;penpot&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;git&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/git/&#34;&gt;Git&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce git and how to learn it.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Git&#34;&gt;Git&lt;/a&gt; is a software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different systems).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/git/#change&#39;s-controversy&#34;&gt;Master to main branch change&#39;s controversy.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The change is not free of controversy, for example in the &lt;a href=&#34;https://github.com/pdm-project/pdm/pull/1064&#34;&gt;PDM project&lt;/a&gt; some people are not sure that it&#39;s needed for many reasons. Let&#39;s see each of them:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;The reason people are implementing the change is because other people are doing it&lt;/em&gt;: After a quick search I found that the first one to do the change was &lt;a href=&#34;https://sfconservancy.org/news/2020/jun/23/gitbranchname/&#34;&gt;the software freedom conservancy with the Git project&lt;/a&gt;. You can also see &lt;a href=&#34;https://github.com/python/cpython/issues/78786&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://github.com/django/django/pull/2692&#34;&gt;Django&lt;/a&gt;, &lt;a href=&#34;https://github.com/redis/redis/issues/3185&#34;&gt;Redis&lt;/a&gt;, &lt;a href=&#34;https://www.drupal.org/node/2275877&#34;&gt;Drupal&lt;/a&gt;, &lt;a href=&#34;https://issues.apache.org/jira/browse/COUCHDB-2248&#34;&gt;CouchDB&lt;/a&gt; and &lt;a href=&#34;https://www.theserverside.com/feature/Why-GitHub-renamed-its-master-branch-to-main&#34;&gt;Github&lt;/a&gt;&#39;s statements.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;As we&#39;re not part of the deciding organisms of the collectives doing the changes, all we can use are their statements and discussions to guess what are the reasons behind their support of the change. Despite that some of them do use the argument that other communities do support the change to emphasize the need of the change, all of them mention that the main reason is that the term is offensive to some people.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;I don&#39;t see an issue using the term master&lt;/em&gt;: If you relate to this statement it can be because you&#39;re not part of the communities that suffer the oppression tied to the term, and that makes you blind to the issue. It&#39;s a lesson I learned on my own skin throughout the years. There are thousand of situations, gestures, double meaning words and sentences that went unnoticed by me until I started discussing it with the people that are suffering them (women, racialized people, LGTBQI+, ...). Throughout my experience I&#39;ve seen that the more privileged you are, the blinder you become. You can read more on privileged blindness &lt;a href=&#34;https://iveybusinessjournal.com/fighting-privilege-blindness/&#34;&gt;here&lt;/a&gt;, &lt;a href=&#34;https://dojustice.crcna.org/article/becoming-aware-my-privilege&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;https://www.mindful.org/the-research-on-white-privilege-blindness/&#34;&gt;here&lt;/a&gt; (I&#39;ve skimmed through the articles, and are the first articles I&#39;ve found, there are probably better references).&lt;/p&gt; &lt;p&gt;I&#39;m not saying that privileged people are not aware of the issues or that they can even raise them. We can do so and more we read, discuss and train ourselves, the better we&#39;ll detect them. All I&#39;m saying is that a non privileged person will always detect more because they suffer them daily.&lt;/p&gt; &lt;p&gt;I understand that for you there is no issue using the word &lt;em&gt;master&lt;/em&gt;, there wasn&#39;t an issue for me either until I saw these projects doing the change, again I was blinded to the issue as I&#39;m not suffering it. That&#39;s because change is not meant for us, as we&#39;re not triggered by it. The change is targeted to the people that do perceive that &lt;code&gt;master&lt;/code&gt; is an offensive term. What we can do is empathize with them and follow this tiny tiny tiny gesture. It&#39;s the least we can do.&lt;/p&gt; &lt;p&gt;Think of a term that triggers you, such as &lt;em&gt;heil hitler&lt;/em&gt;, imagine that those words were being used to define the main branch of your code, and that everyday you sit in front of your computer you see them. You&#39;ll probably be reminded of the historic events, concepts, feelings that are tied to that term each time you see it, and being them quite negative it can slowly mine you. Therefore it&#39;s legit that you wouldn&#39;t want to be exposed to that negative effects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;I don&#39;t see who will benefit from this change&lt;/em&gt;: Probably the people that belongs to communities that are and have been under constant oppression for a very long time, in this case, specially the racialized ones which have suffered slavery.&lt;/p&gt; &lt;p&gt;Sadly you will probably won&#39;t see many the affected people speak in these discussions, first because there are not that many, sadly the IT world is dominated by middle aged, economically comfortable, white, cis, hetero, males. Small changes like this are meant to foster diversity in the community by allowing them being more comfortable. Secondly because when they see these debates they move on as they are so fed up on teaching privileged people of their privileges. They not only have to suffer the oppression, we also put the burden on their shoulders to teach us.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;As and ending thought, if you see yourself being specially troubled by the change, having a discomfort feeling and strong reactions. In my experience these signs are characteristic of privileged people that feel that their privileges are being threatened, I&#39;ve felt them myself countless times. When I feel it, +I usually do two things, fight them as strong as I can, or embrace them, analyze them, and go to the root of them. Depending on how much energy I have I go with the easy or the hard one. I&#39;m not saying that it&#39;s you&#39;re case, but it could be.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/git/&#34;&gt;Update the git flow to match my current one.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/git/#revert-a-commit&#34;&gt;Revert a commit.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;revert&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;commit_id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/git/#get-interesting-stats-of-the-repo&#34;&gt;Get interesting stats of the repo.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/31190474/how-to-count-git-commits-per-user-in-a-date-range&#34;&gt;Number of commits of the last year per user&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;shortlog&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-sne&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--since&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;31 Dec 2020&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--before&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;31 Dec 2021&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can also use &lt;a href=&#34;https://github.com/casperdcl/git-fame#usage&#34;&gt;&lt;code&gt;git-fame&lt;/code&gt;&lt;/a&gt; to extract a more detailed report:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;git-fame&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--since&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;.year&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--cost&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;hour&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--loc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ins&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-w&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-C

&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Author&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;hrs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;loc&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;coms&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;fils&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;distribution&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;:----------------&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;------:&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;------:&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-------:&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;-------:&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;:----------------&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Lyz&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28933&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;112&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;238&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;.1/33.3/75.8&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;GitHub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Action&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16194&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;220&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;73&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;35&lt;/span&gt;.9/65.5/23.2&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Alexander&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Gil&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.0/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.3/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.3&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;n0rt3y5ur&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.0/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.3/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.3&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Guilherme&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Danno&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.0/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.3/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.3&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;lyz-code&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.0/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.3/&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.0&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can use &lt;code&gt;pipx install git-fame&lt;/code&gt; to install it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;park-programming&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/park_programming/&#34;&gt;Park programming&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the park programming concept.&lt;/p&gt; &lt;p&gt;Park programming is as you may guess, programming in parks. It includes guidelines on:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;How to park program&lt;/li&gt; &lt;li&gt;Finding the best spots&lt;/li&gt; &lt;li&gt;Finding the best times&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sponsor&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sponsor/&#34;&gt;Sponsor&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce sponsorship analysis.&lt;/p&gt; &lt;p&gt;It may arrive the moment in your life where &lt;a href=&#34;https://github.com/lyz-code/yamlfix/issues/185#issuecomment-1329276169&#34;&gt;someone wants to sponsor you&lt;/a&gt;. There are many sponsoring platforms you can use, each has their advantages and disadvantages.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Liberapay.&lt;/li&gt; &lt;li&gt;Ko-fi.&lt;/li&gt; &lt;li&gt;Buy me a coffee.&lt;/li&gt; &lt;li&gt;Github Sponsor.&lt;/li&gt; &lt;/ul&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;th&gt;[Liberapay][3]&lt;/th&gt; &lt;th&gt;[Ko-fi][4]&lt;/th&gt; &lt;th&gt;[Buy Me a Coffee][6]&lt;/th&gt; &lt;th&gt;[Github Sponsor][7]&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Non-profit&lt;/td&gt; &lt;td&gt;[Yes][1]&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;No! (Microsoft!)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Monthly fee&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Donation Commission&lt;/td&gt; &lt;td&gt;0%&lt;/td&gt; &lt;td&gt;0%&lt;/td&gt; &lt;td&gt;5%&lt;/td&gt; &lt;td&gt;Not clear&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Paid plan&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;[Yes][5]&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Payment Processors&lt;/td&gt; &lt;td&gt;Stripe, Paypal&lt;/td&gt; &lt;td&gt;Stripe, Paypal&lt;/td&gt; &lt;td&gt;Stripe, Standard Payout&lt;/td&gt; &lt;td&gt;Stripe&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;One time donations&lt;/td&gt; &lt;td&gt;[Possible but not user friendly][2]&lt;/td&gt; &lt;td&gt;Yes&lt;/td&gt; &lt;td&gt;Yes&lt;/td&gt; &lt;td&gt;Yes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Membership&lt;/td&gt; &lt;td&gt;Yes&lt;/td&gt; &lt;td&gt;Yes&lt;/td&gt; &lt;td&gt;Yes&lt;/td&gt; &lt;td&gt;Yes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Shop/Sales&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;Yes&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Based in&lt;/td&gt; &lt;td&gt;France&lt;/td&gt; &lt;td&gt;?&lt;/td&gt; &lt;td&gt;United States&lt;/td&gt; &lt;td&gt;United States?&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;+&lt;/td&gt; &lt;td&gt;Pay delay&lt;/td&gt; &lt;td&gt;Instant&lt;/td&gt; &lt;td&gt;Instant&lt;/td&gt; &lt;td&gt;Instant&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;User friendliness&lt;/td&gt; &lt;td&gt;OK&lt;/td&gt; &lt;td&gt;Good&lt;/td&gt; &lt;td&gt;Good&lt;/td&gt; &lt;td&gt;Good&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;&lt;a href=&#34;https://en.liberapay.com&#34;&gt;Liberapay&lt;/a&gt; is the only &lt;a href=&#34;https://en.liberapay.com/about/faq#differences&#34;&gt;non-profit&lt;/a&gt; recurrent donations platform. It&#39;s been the most recommended platform from the people I know from the open-source, activist environment.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://ko-fi.com/&#34;&gt;Ko-fi&lt;/a&gt; would be my next choice, as they don&#39;t do commissions on the donations and they support more features (that I don&#39;t need right now) than Liberapay.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ombi/&#34;&gt;DevOps&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Ombi.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://ombi.io/&#34;&gt;Ombi&lt;/a&gt; is a self-hosted web application that automatically gives your shared Jellyfin users the ability to request content by themselves! Ombi can be linked to multiple TV Show and Movie DVR tools to create a seamless end-to-end experience for your users.&lt;/p&gt; &lt;p&gt;If Ombi is not for you, you may try &lt;a href=&#34;https://overseerr.dev/&#34;&gt;Overseerr&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;gitea&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gitea/&#34;&gt;Gitea&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce gitea.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://gitea.io/en-us/&#34;&gt;Gitea&lt;/a&gt; is a community managed lightweight code hosting solution written in Go. It&#39;s the best self hosted Github alternative in my opinion.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;helmfile&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/&#34;&gt;Helmfile&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Tweak the update process to make it more resilient.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Check that all the helm deployments are well deployed with &lt;code&gt;helm list -A | grep -v deployed&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Change the context to the production cluster before running the production steps&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#cannot-patch-x-field-is-immutable&#34;&gt;Fix Cannot patch X field is immutable error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You may think that deleting the resource, usually a deployment or daemonset will fix it, but &lt;code&gt;helmfile apply&lt;/code&gt; will end without any error, the resource won&#39;t be recreated , and if you do a &lt;code&gt;helm list&lt;/code&gt;, the deployment will be marked as failed.&lt;/p&gt; &lt;p&gt;The solution we&#39;ve found is disabling the resource in the chart&#39;s values so that it&#39;s uninstalled an install it again.&lt;/p&gt; &lt;p&gt;This can be a problem with the resources that have persistence. To patch it, edit the volume resource with &lt;code&gt;kubectl edit pv -n namespace volume_pvc&lt;/code&gt;, change the &lt;code&gt;persistentVolumeReclaimPolicy&lt;/code&gt; to &lt;code&gt;Retain&lt;/code&gt;, apply the changes to uninstall, and when reinstalling configure the chart to use that volume (easier said than done).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ansible-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/&#34;&gt;Ansible Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#stop-running-docker-containers&#34;&gt;Stop running docker containers.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Get running containers&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;docker_host_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;yes&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;docker_info&lt;/span&gt;

&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Stop running containers&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;docker_container&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;stopped&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;loop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;docker_info.containers&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;map(attribute=&#39;Id&#39;)&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#moving-a-file-remotely&#34;&gt;Moving a file remotely.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#speed-up-the-stat-module&#34;&gt;Speed up the stat module.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;stat&lt;/code&gt; module calculates the checksum and the md5 of the file in order to get the required data. If you just want to check if the file exists use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Verify swapfile status&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;common_swapfile_location&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;}}&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;get_checksum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;no&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;get_md5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;no&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;get_mime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;no&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;get_attributes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;no&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;register&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;swap_status&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;changed_when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;not swap_status.stat.exists&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ansible_snippets/#get-the-hosts-of-a-dynamic-ansible-inventory&#34;&gt;Get the hosts of a dynamic ansible inventory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ansible-inventory&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-i&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;environments/production&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--graph
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You can also use the &lt;code&gt;--list&lt;/code&gt; flag to get more info of the hosts.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-solutions&#34;&gt;Infrastructure Solutions&lt;/h3&gt; &lt;h4 id=&#34;krew&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aws_snippets/&#34;&gt;Krew&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/aws_snippets/#find-if-external-ip-belongs-to-you&#34;&gt;Find if external IP belongs to you.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can list the network interfaces that match the IP you&#39;re searching for&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;aws&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ec2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;describe-network-interfaces&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--filters&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;association.public-ip,Values&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;{{ your_ip_address}}&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce krew.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/krew&#34;&gt;Krew&lt;/a&gt; is a tool that makes it easy to use kubectl plugins. Krew helps you discover plugins, install and manage them on your machine. It is similar to tools like apt, dnf or brew.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;aws-savings-plan&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl_commands/&#34;&gt;AWS Savings plan&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl_commands/#create-a-configmap-from-a-file&#34;&gt;Create a configmap from a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;create&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;configmap&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;configmap_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--from-file&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;path/to/file&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl_commands/#restart-pods-without-taking-the-service-down&#34;&gt;Restart pods without taking the service down.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rollout&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;deployment&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;deployment_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Ksniff.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eldadru/ksniff&#34;&gt;Ksniff&lt;/a&gt; is a Kubectl plugin to ease sniffing on kubernetes pods using tcpdump and wireshark.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce AWS Savings plan.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/savingsplans/latest/userguide/what-is-savings-plans.html&#34;&gt;Saving plans&lt;/a&gt; offer a flexible pricing model that provides savings on AWS usage. You can save up to 72 percent on your AWS compute workloads.&lt;/p&gt; &lt;p&gt;!!! note &#34;Please don&#39;t make Jeff Bezos even richer, try to pay as less money to AWS as you can.&#34;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mizu&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mizu/&#34;&gt;Mizu&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce mizu.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://getmizu.io/&#34;&gt;Mizu&lt;/a&gt; is an API Traffic Viewer for Kubernetes, think &lt;code&gt;TCPDump&lt;/code&gt; and Chrome Dev Tools combined.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;kubectl&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl/&#34;&gt;Kubectl&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl/#port-forward-/-tunnel-to-an-internal-service&#34;&gt;Port forward / Tunnel to an internal service.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have a service running in kubernetes and you want to directly access it instead of going through the usual path, you can use &lt;code&gt;kubectl port-forward&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;kubectl port-forward&lt;/code&gt; allows using resource name, such as a pod name, service replica set or deployment, to select the matching resource to port forward to. For example, the next commands are equivalent:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;port-forward&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;mongo-75f59d57f4-4nd6q&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28015&lt;/span&gt;:27017
kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;port-forward&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;deployment/mongo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28015&lt;/span&gt;:27017
kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;port-forward&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;replicaset/mongo-75f59d57f4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28015&lt;/span&gt;:27017
kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;port-forward&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;service/mongo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;28015&lt;/span&gt;:27017
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The output is similar to this:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Forwarding&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;from&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;.0.0.1:28015&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;27017&lt;/span&gt;
Forwarding&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;from&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;::1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:28015&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;27017&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you don&#39;t need a specific local port, you can let &lt;code&gt;kubectl&lt;/code&gt; choose and allocate the local port and thus relieve you from having to manage local port conflicts, with the slightly simpler syntax:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$:&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;port-forward&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;deployment/mongo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;:27017

Forwarding&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;from&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127&lt;/span&gt;.0.0.1:63753&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;27017&lt;/span&gt;
Forwarding&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;from&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;::1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;:63753&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;27017&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl/#run-a-command-against-a-specific-context&#34;&gt;Run a command against a specific context.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have multiple contexts and you want to be able to run commands against a context that you have access to but is not your active context you can use the &lt;code&gt;--context&lt;/code&gt; global option for all &lt;code&gt;kubectl&lt;/code&gt; commands:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pods&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--context&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;context_B&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To get a list of available contexts use &lt;code&gt;kubectl config get-contexts&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;eks&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/aws/eks/&#34;&gt;EKS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/aws/eks/#pod-limit-per-node&#34;&gt;Pod limit per node.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;AWS EKS supports native VPC networking with the Amazon VPC Container Network Interface (CNI) plugin for Kubernetes. Using this plugin allows Kubernetes Pods to have the same IP address inside the pod as they do on the VPC network.&lt;/p&gt; &lt;p&gt;This is a great feature but it introduces a limitation in the number of Pods per EC2 Node instance. Whenever you deploy a Pod in the EKS worker Node, EKS creates a new IP address from VPC subnet and attach to the instance.&lt;/p&gt; &lt;p&gt;The formula for defining the maximum number of pods per instance is as follows:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;N * (M-1) + 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Where:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;N&lt;/code&gt; is the number of Elastic Network Interfaces (ENI) of the instance type.&lt;/li&gt; &lt;li&gt;&lt;code&gt;M&lt;/code&gt; is the number of IP addresses of a single ENI.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;So, for &lt;code&gt;t3.small&lt;/code&gt;, this calculation is &lt;code&gt;3 * (4-1) + 2 = 11&lt;/code&gt;. For a list of all the instance types and their limits see &lt;a href=&#34;https://github.com/awslabs/amazon-eks-ami/blob/master/files/eni-max-pods.txt&#34;&gt;this document&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;debugging&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/kubernetes_debugging/&#34;&gt;Debugging&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to debug kubernetes network traffic.&lt;/p&gt; &lt;p&gt;Sometimes you need to monitor the network traffic that goes between pods to solve an issue. There are different ways to see it:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mizu/&#34;&gt;Using Mizu&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/kubernetes_debugging/#running-tcpdump-against-a-running-container&#34;&gt;Running tcpdump against a running container&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ksniff/&#34;&gt;Using ksniff&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/kubernetes_debugging/#using-ephemeral-debug-containers&#34;&gt;Using ephemeral debug containers&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Of all the solutions, the cleaner and easier is to use &lt;a href=&#34;https://lyz-code.github.io/blue-book/mizu/&#34;&gt;Mizu&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;waf&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aws_waf/&#34;&gt;WAF&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to extract information from AWS WAF.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/waf/&#34;&gt;AWS WAF&lt;/a&gt; is a web application firewall that helps protect your web applications or APIs against common web exploits and bots that may affect availability, compromise security, or consume excessive resources. AWS WAF gives you control over how traffic reaches your applications by enabling you to create security rules that control bot traffic and block common attack patterns, such as SQL injection or cross-site scripting. You can also customize rules that filter out specific traffic patterns.&lt;/p&gt; &lt;p&gt;In the article there are many queries you can do on it&#39;s data and a workflow to understand your traffic.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mdformat/&#34;&gt;Continuous Integration&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce MDFormat.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://mdformat.readthedocs.io/en/stable/&#34;&gt;MDFormat&lt;/a&gt; is an opinionated Markdown formatter that can be used to enforce a consistent style in Markdown files. Mdformat is a Unix-style command-line tool as well as a Python library.&lt;/p&gt; &lt;p&gt;The features/opinions of the formatter include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Consistent indentation and whitespace across the board&lt;/li&gt; &lt;li&gt;Always use ATX style headings&lt;/li&gt; &lt;li&gt;Move all link references to the bottom of the document (sorted by label)&lt;/li&gt; &lt;li&gt;Reformat indented code blocks as fenced code blocks&lt;/li&gt; &lt;li&gt;Use 1. as the ordered list marker if possible, also for noninitial list items.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;It&#39;s based on the &lt;a href=&#34;https://markdown-it-py.readthedocs.io/en/latest/index.html&#34;&gt;&lt;code&gt;markdown-it-py&lt;/code&gt;&lt;/a&gt; Markdown parser, which is a Python implementation of &lt;a href=&#34;https://github.com/markdown-it/markdown-it&#34;&gt;&lt;code&gt;markdown-it&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/mdformat/#issues&#34;&gt;Issues.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It doesn&#39;t yet &lt;a href=&#34;https://github.com/executablebooks/mdformat/issues/309&#34;&gt;support admonitions&lt;/a&gt;&lt;/li&gt; &lt;li&gt;You can&#39;t &lt;a href=&#34;https://github.com/executablebooks/mdformat/issues/359&#34;&gt;ignore some files&lt;/a&gt;, nor &lt;a href=&#34;https://github.com/executablebooks/mdformat/issues/53&#34;&gt;some part of the file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;drone&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/flakeheaven/&#34;&gt;Drone&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Deprecate flakehell in favour of flakeheaven.&lt;/p&gt; &lt;p&gt;It&#39;s a fork maintained by the community, instead of an absent code dictator.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Flakeheaven.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/flakeheaven/flakeheaven&#34;&gt;Flakeheaven&lt;/a&gt; is a &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/flake8/&#34;&gt;Flake8&lt;/a&gt; wrapper to make it cool. The community maintained fork of flakehell.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Drone.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.drone.io/&#34;&gt;Drone&lt;/a&gt; is a modern Continuous Integration platform that empowers busy teams to automate their build, test and release workflows using a powerful, cloud native pipeline engine.&lt;/p&gt; &lt;p&gt;Check how to install it &lt;a href=&#34;https://lyz-code.github.io/blue-book/drone/#installation&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cruft&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/&#34;&gt;cruft&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/#issues&#34;&gt;Unable to interpret changes between current project and cookiecutter template as unicode.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Typically a result of hidden binary files in project folder. Maybe you have a hook that initializes the &lt;code&gt;.git&lt;/code&gt; directory, don&#39;t do that.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Use &lt;code&gt;skip&lt;/code&gt; to avoid problems with &lt;code&gt;.git&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Since &lt;code&gt;2.10.0&lt;/code&gt; you can add a &lt;code&gt;skip&lt;/code&gt; category inside the &lt;code&gt;.cruft.json&lt;/code&gt;, so that it doesn&#39;t check that directory:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;template&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;xxx&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;commit&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;xxx&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;checkout&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;context&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;cookiecutter&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;directory&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;skip&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;.git&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;renovate&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/renovate/&#34;&gt;renovate&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Renovate.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.renovatebot.com/&#34;&gt;Renovate&lt;/a&gt; is a program that does automated dependency updates. Multi-platform and multi-language.&lt;/p&gt; &lt;p&gt;Why use Renovate?&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Get pull requests to update your dependencies and lock files.&lt;/li&gt; &lt;li&gt;Reduce noise by scheduling when Renovate creates PRs.&lt;/li&gt; &lt;li&gt;Renovate finds relevant package files automatically, including in monorepos.&lt;/li&gt; &lt;li&gt;You can customize the bot&#39;s behavior with configuration files.&lt;/li&gt; &lt;li&gt;Share your configuration with ESLint-like config presets.&lt;/li&gt; &lt;li&gt;Get replacement PRs to migrate from a deprecated dependency to the community suggested replacement (npm packages only).&lt;/li&gt; &lt;li&gt;Open source.&lt;/li&gt; &lt;li&gt;Popular (more than 9.7k stars and 1.3k forks)&lt;/li&gt; &lt;li&gt;Beautifully integrate with main Git web applications (Gitea, Gitlab, Github).&lt;/li&gt; &lt;li&gt;It supports most important languages: Python, Docker, Kubernetes, Terraform, Ansible, Node, ...&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;storage&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/storage/&#34;&gt;Storage&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce storage.&lt;/p&gt; &lt;p&gt;I have a server at home to host some services for my closest ones. The server is an &lt;a href=&#34;https://www.intel.com/content/www/us/en/products/details/nuc.html&#34;&gt;Intel NUC&lt;/a&gt; which is super awesome in terms of electric consumption, CPU and RAM versus cost. The downside is that it has no hard drive to store the services data. It does have some USB ports to connect external hard drives though. As the data kept growing I started buying bigger drives. While it was affordable I purchased two so as to have one to store the backup of the data. The problem came when it became unaffordable for me. Then I took the &lt;em&gt;good idea&lt;/em&gt; to assume that I could only have one drive of 16TB with my data. Obviously the inevitable happened. The hard drive died and those 10TB of data that were not stored in any backup were lost.&lt;/p&gt; &lt;p&gt;Luckily enough, it was not unique data like personal photos. The data could be regenerated by manual processes at the cost of precious time (I&#39;m still suffering this &lt;code&gt;:(&lt;/code&gt;). But every cloud has a silver lining, this failure gave me the energy and motivation to improve my home architecture. To prevent this from happening again, the solution needs to be:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Robust: If disks die I will have time to replace them before data is lost.&lt;/li&gt; &lt;li&gt;Flexible: It needs to expand as the data grows.&lt;/li&gt; &lt;li&gt;Not very expensive.&lt;/li&gt; &lt;li&gt;Easy to maintain.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There are two types of solutions to store data:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;On one host: All disks are attached to a server and the storage capacity is shared to other devices by the local network.&lt;/li&gt; &lt;li&gt;Distributed: The disks are attached to many servers and they work together to provide the storage through the local network.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/&#34;&gt;NAS&lt;/a&gt; server represents the first solution, while systems like &lt;a href=&#34;https://ceph.io/en/&#34;&gt;Ceph&lt;/a&gt; or &lt;a href=&#34;https://www.gluster.org/&#34;&gt;GlusterFS&lt;/a&gt; over &lt;a href=&#34;https://www.odroid.co.uk/ODROID-HC4&#34;&gt;Odroid HC4&lt;/a&gt; fall into the second.&lt;/p&gt; &lt;p&gt;Both are robust and flexible but I&#39;m more inclined towards building a &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/&#34;&gt;NAS&lt;/a&gt; because it can hold the amount of data that I need, it&#39;s easier to maintain and the underlying technology has been more battle proven throughout the years.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;nas&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/&#34;&gt;NAS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce NAS.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Network-attached_storage&#34;&gt;Network-attached storage&lt;/a&gt; or NAS, is a computer data storage server connected to a computer network providing data access to many other devices. Basically a computer where you can attach many hard drives.&lt;/p&gt; &lt;p&gt;I&#39;ve done an analysis to choose what solution I&#39;m going to build in terms of:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Software: Whether to use &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#truenas&#34;&gt;TrueNAS&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#unraid&#34;&gt;Unraid&lt;/a&gt; or &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#debian-with-zfs&#34;&gt;Debian with ZFS&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#disks&#34;&gt;Disks&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;More will come in the next days.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#ram&#34;&gt;Analyze RAM to buy.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Most &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/&#34;&gt;ZFS&lt;/a&gt; resources suggest using ECC RAM. The provider gives me two options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Kingston Server Premier DDR4 3200MHz 16GB CL22&lt;/li&gt; &lt;li&gt;Kingston Server Premier DDR4 2666MHz 16GB CL19&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I&#39;ll go with two modules of 3200MHz CL22 because it has a smaller &lt;a href=&#34;https://lyz-code.github.io/blue-book/ram/#speed&#34;&gt;RAM latency&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#motherboard&#34;&gt;Analyze motherboard to buy.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;After reading these reviews(&lt;a href=&#34;https://reviewsgarage.com/best-motherboards-for-nas/&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://pcper.com/2020/03/asrock-x570m-pro4-micro-atx-motherboard-review/&#34;&gt;2&lt;/a&gt;) I&#39;ve come to the decision to purchase the &lt;a href=&#34;https://www.asrock.com/MB/AMD/X570M%20Pro4/index.asp&#34;&gt;ASRock X570M Pro4&lt;/a&gt; because, It supports:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;8 x SATA3 disks&lt;/li&gt; &lt;li&gt;2 x M.2 disks&lt;/li&gt; &lt;li&gt;4 x DDR4 RAM slots with speeds up to 4200+ and ECC support&lt;/li&gt; &lt;li&gt;1 x AMD AM4 Socket Ryzen™ 2000, 3000, 4000 G-Series, 5000 and 5000 G-Series Desktop Processors&lt;/li&gt; &lt;li&gt;Supports NVMe SSD as boot disks&lt;/li&gt; &lt;li&gt;Micro ATX Form Factor.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And it gives me room enough to grow:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It supports PCI 4.0 for the M.2 which is said to be capable of perform twice the speed compared to previous 3&lt;sup&gt;rd&lt;/sup&gt; generation. the chosen M2 are of 3&lt;sup&gt;rd&lt;/sup&gt; generation, so if I need more speed I can change them.&lt;/li&gt; &lt;li&gt;I&#39;m only going to use 2 slots of RAM giving me 32GB, but I could grow 32 more easily.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#cpu&#34;&gt;Analyze CPU to buy.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;After doing some &lt;a href=&#34;https://lyz-code.github.io/blue-book/cpu/&#34;&gt;basic research&lt;/a&gt; I&#39;m between:&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Property&lt;/th&gt; &lt;th&gt;Ryzen 7 5800x&lt;/th&gt; &lt;th&gt;Ryzen 5 5600x&lt;/th&gt; &lt;th&gt;Ryzen 7 5700x&lt;/th&gt; &lt;th&gt;Ryzen 5 5600G&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Cores&lt;/td&gt; &lt;td&gt;8&lt;/td&gt; &lt;td&gt;6&lt;/td&gt; &lt;td&gt;8&lt;/td&gt; &lt;td&gt;6&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Threads&lt;/td&gt; &lt;td&gt;16&lt;/td&gt; &lt;td&gt;12&lt;/td&gt; &lt;td&gt;16&lt;/td&gt; &lt;td&gt;12&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Clock&lt;/td&gt; &lt;td&gt;3.8&lt;/td&gt; &lt;td&gt;3.7&lt;/td&gt; &lt;td&gt;3.4&lt;/td&gt; &lt;td&gt;3.9&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Socket&lt;/td&gt; &lt;td&gt;AM4&lt;/td&gt; &lt;td&gt;AM4&lt;/td&gt; &lt;td&gt;AM4&lt;/td&gt; &lt;td&gt;AM4&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;PCI&lt;/td&gt; &lt;td&gt;4.0&lt;/td&gt; &lt;td&gt;4.0&lt;/td&gt; &lt;td&gt;4.0&lt;/td&gt; &lt;td&gt;3.0&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Thermal&lt;/td&gt; &lt;td&gt;Not included&lt;/td&gt; &lt;td&gt;Wraith Stealth&lt;/td&gt; &lt;td&gt;Not included&lt;/td&gt; &lt;td&gt;Wraith Stealth&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Default TDP&lt;/td&gt; &lt;td&gt;105W&lt;/td&gt; &lt;td&gt;65W&lt;/td&gt; &lt;td&gt;65W&lt;/td&gt; &lt;td&gt;65W&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;System Mem spec&lt;/td&gt; &lt;td&gt;&amp;gt;= 3200 MHz&lt;/td&gt; &lt;td&gt;&amp;gt;= 3200 MHz&lt;/td&gt; &lt;td&gt;&amp;gt;= 3200 MHz&lt;/td&gt; &lt;td&gt;&amp;gt;= 3200 MHz&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Mem type&lt;/td&gt; &lt;td&gt;DDR4&lt;/td&gt; &lt;td&gt;DDR4&lt;/td&gt; &lt;td&gt;DDR4&lt;/td&gt; &lt;td&gt;DDR4&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Price&lt;/td&gt; &lt;td&gt;315&lt;/td&gt; &lt;td&gt;232&lt;/td&gt; &lt;td&gt;279&lt;/td&gt; &lt;td&gt;179&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;The data was extracted from &lt;a href=&#34;https://www.amd.com/en/products/specifications/compare/processors/10466,11826,10471,11176&#34;&gt;AMD&#39;s official page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;They all support the chosen RAM and the motherboard.&lt;/p&gt; &lt;p&gt;I&#39;m ruling out Ryzen 7 5800x because it&#39;s too expensive both on monetary and power consumption terms. Also ruling out Ryzen 5 5600G because it has comparatively bad properties.&lt;/p&gt; &lt;p&gt;Between Ryzen 5 5600x and Ryzen 7 5700x, after checking these comparisons (&lt;a href=&#34;https://nanoreview.net/en/cpu-compare/amd-ryzen-7-5700x-vs-amd-ryzen-5-5600x&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://www.amd.com/en/products/specifications/compare/processors/10466,11826,10471,11176&#34;&gt;2&lt;/a&gt;) it looks like:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Single core performance is similar.&lt;/li&gt; &lt;li&gt;7 wins when all cores are involved.&lt;/li&gt; &lt;li&gt;7 is more power efficient.&lt;/li&gt; &lt;li&gt;7 is better rated.&lt;/li&gt; &lt;li&gt;7 is newer (1.5 years).&lt;/li&gt; &lt;li&gt;7 has around 3.52 GB/s (7%) higher theoretical RAM memory bandwidth&lt;/li&gt; &lt;li&gt;They have the same cache&lt;/li&gt; &lt;li&gt;7 has 5 degrees less of max temperature&lt;/li&gt; &lt;li&gt;They both support ECC&lt;/li&gt; &lt;li&gt;5 has a greater market share&lt;/li&gt; &lt;li&gt;5 is 47$ cheaper&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I think that for 47$ it&#39;s work the increase on cores and theoretical RAM memory bandwidth.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#cpu-cooler&#34;&gt;Analyze CPU coolers to buy.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It looks that the &lt;a href=&#34;https://lyz-code.github.io/blue-book/cpu/#quick-shopping-tips&#34;&gt;Ryzen CPUs don&#39;t require a cooler to work well&lt;/a&gt;. Usually it adds another 250W to the consumption. I don&#39;t plan to overclock it and I&#39;ve heard that ZFS doesn&#39;t use too much CPU, so I&#39;ll start without it and monitor the temperature.&lt;/p&gt; &lt;p&gt;If I were to take one, I&#39;d go with air cooling with something like the &lt;a href=&#34;https://www.bequiet.com/en/cpucooler/1376&#34;&gt;Dark Rock 4&lt;/a&gt; but I&#39;ve also read that Noctua are a good provider.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/nas/#server-case&#34;&gt;Analyze server cases to buy.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;m ruling out the next ones:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.fractal-design.com/products/cases/define/define-r6/blackout/&#34;&gt;Fractal Design R6&lt;/a&gt;: More expensive than the Node 804 and it doesn&#39;t have hot swappable disks.&lt;/li&gt; &lt;li&gt;Silverstone Technology SST-CS381: Even though it&#39;s gorgeous it&#39;s too expensive.&lt;/li&gt; &lt;li&gt;Silverstone DS380: It only supports Mini-ITX which I don&#39;t have.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The remaining are:&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Model&lt;/th&gt; &lt;th&gt;Fractal Node 804&lt;/th&gt; &lt;th&gt;Silverstone CS380&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Form factor&lt;/td&gt; &lt;td&gt;Micro - ATX&lt;/td&gt; &lt;td&gt;Mid tower&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Motherboard&lt;/td&gt; &lt;td&gt;Micro ATX&lt;/td&gt; &lt;td&gt;Micro ATX&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Drive bays&lt;/td&gt; &lt;td&gt;8 x 3.5&#34;, 2 x 2.5&#34;&lt;/td&gt; &lt;td&gt;8 x 3.5&#34;, 2 x 5.25&#34;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Hot-swap&lt;/td&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;yes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Expansion Slots&lt;/td&gt; &lt;td&gt;5&lt;/td&gt; &lt;td&gt;7&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;CPU cooler height&lt;/td&gt; &lt;td&gt;160mm&lt;/td&gt; &lt;td&gt;146 mm&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;PSU compatibility&lt;/td&gt; &lt;td&gt;ATX&lt;/td&gt; &lt;td&gt;ATX&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Fans&lt;/td&gt; &lt;td&gt;Front: 4, Top: 4, Rear 3&lt;/td&gt; &lt;td&gt;Side: 2, Rear: 1&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Price&lt;/td&gt; &lt;td&gt;115&lt;/td&gt; &lt;td&gt;184&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Size&lt;/td&gt; &lt;td&gt;34 x 31 x 39 cm&lt;/td&gt; &lt;td&gt;35 x 28 x 21 cm&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;I like the Fractal Node 804 better and it&#39;s cheaper.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Choose the Power Supply Unit and CPU cooler.&lt;/p&gt; &lt;p&gt;After doing some &lt;a href=&#34;https://lyz-code.github.io/blue-book/cpu/#cpu-coolers&#34;&gt;basic research&lt;/a&gt; I&#39;ve chosen the &lt;a href=&#34;https://www.bequiet.com/en/cpucooler/1376&#34;&gt;Dark Rock 4&lt;/a&gt; but just because the &lt;a href=&#34;https://www.enermaxeu.com/products/cpu-cooling/air-cooling/ets-t50-axe/&#34;&gt;Enermax ETS-T50 AXE Silent Edition&lt;/a&gt; doesn&#39;t fit my case :(.&lt;/p&gt; &lt;p&gt;Using &lt;a href=&#34;https://pcpartpicker.com/list/&#34;&gt;PCPartPicker&lt;/a&gt; I&#39;ve seen that with 4 disks it consumes approximately 264W, when I have the 8 disks, it will consume up to 344W, if I want to increase the ram then it will reach 373W. So in theory I can go with a 400W power supply unit.&lt;/p&gt; &lt;p&gt;You need to make sure that it has enough wires to connect to all the disks. Although that usually is not a problem as there are adapters:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/CB-44SATA-Individually-Sleeved-Connector-Premium/dp/B0036ORCIA/ref=sr_1_13?ie=UTF8&amp;amp;qid=1409942557&amp;amp;sr=8-13&amp;amp;keywords=sleeved+molex+to+sata&amp;amp;tag=linus21-20&#34;&gt;Molex to sata&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://www.amazon.com/dp/B0086OGN9E/ref=wl_it_dp_o_pd_nS_ttl?_encoding=UTF8&amp;amp;colid=2IW6VX45YF9B0&amp;amp;coliid=I1QUIF5VMSN2SG&amp;amp;psc=1&amp;amp;tag=linus21-20&#34;&gt;Sata to sata&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;After an &lt;a href=&#34;https://lyz-code.github.io/blue-book/psu/&#34;&gt;analysis on the different power supply units&lt;/a&gt;, I&#39;ve decided to go with &lt;a href=&#34;https://www.bequiet.com/en/powersupply/1251&#34;&gt;Be Quiet! Straight Power 11 450W Gold&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;openzfs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/&#34;&gt;OpenZFS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#learning&#34;&gt;Learning.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve found that learning about ZFS was an interesting, intense and time consuming task. If you want a quick overview check &lt;a href=&#34;https://yewtu.be/watch?v=MsY-BafQgj4&#34;&gt;this video&lt;/a&gt;. If you prefer to read, head to the awesome &lt;a href=&#34;https://pthree.org/2012/04/17/install-zfs-on-debian-gnulinux/&#34;&gt;Aaron Toponce&lt;/a&gt; articles and read all of them sequentially, each is a jewel. The &lt;a href=&#34;https://openzfs.github.io/openzfs-docs/&#34;&gt;docs&lt;/a&gt; on the other hand are not that pleasant to read. For further information check &lt;a href=&#34;https://jrs-s.net/category/open-source/zfs/&#34;&gt;JRS articles&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#storage-planning&#34;&gt;Storage planning.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are many variables that affect the number and type of disks, you first need to have an idea of what kind of data you want to store and what use are you going to give to that data.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#robustness&#34;&gt;Robustness&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#preventing-concurrent-disk-failures&#34;&gt;Preventing concurrent disk failures&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#choosing-the-disks-to-hold-data&#34;&gt;Choosing the disks to hold data.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Analysis on how to choose the disks taking into account:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#data-disk-speed&#34;&gt;Disk speed&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#data-disk-load&#34;&gt;Disk load&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#data-disk-type&#34;&gt;Disk type&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#data-disk-homogeneity&#34;&gt;Disk homogeneity&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#data-disk-warranty&#34;&gt;Disk Warranty&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#data-disk-brand&#34;&gt;Disk Brands&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The conclusions are that I&#39;m more interested on the 5400 RPM drives, but of all the NAS disks available to purchase only the WD RED of 8TB use it, and they use the SMR technology, so they aren&#39;t a choice.&lt;/p&gt; &lt;p&gt;The disk prices offered by my cheapest provider are:&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Disk&lt;/th&gt; &lt;th&gt;Size&lt;/th&gt; &lt;th&gt;Price&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Seagate IronWolf&lt;/td&gt; &lt;td&gt;8TB&lt;/td&gt; &lt;td&gt;225$&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Seagate IronWolf Pro&lt;/td&gt; &lt;td&gt;8TB&lt;/td&gt; &lt;td&gt;254$&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;WD Red Plus&lt;/td&gt; &lt;td&gt;8TB&lt;/td&gt; &lt;td&gt;265$&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Seagate Exos 7E8&lt;/td&gt; &lt;td&gt;8TB&lt;/td&gt; &lt;td&gt;277$&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;WD Red Pro&lt;/td&gt; &lt;td&gt;8TB&lt;/td&gt; &lt;td&gt;278$&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;WD Red Plus has 5,640 RPM which is different than the rest, so it&#39;s ruled out. Between the IronWolf and IronWolf Pro, they offer 180MB/s and 214MB/s respectively. The Seagate Exos 7E8 provides much better performance than the WD Red Pro so I&#39;m afraid that WD is out of the question.&lt;/p&gt; &lt;p&gt;There are three possibilities in order to have two different brands. Imagining we want 4 disks:&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Combination&lt;/th&gt; &lt;th&gt;Total Price&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;IronWolf + IronWolf Pro&lt;/td&gt; &lt;td&gt;958$&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;IronWolf + Exos 7E8&lt;/td&gt; &lt;td&gt;1004$ (+46$ +4.5%)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;IronWolf Pro + Exos 7E8&lt;/td&gt; &lt;td&gt;1062$ (+54$ +5.4%)&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;In terms of:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Consumption: both IronWolfs are equal, the Exos uses 2.7W more on normal use and uses 0.2W less on rest.&lt;/li&gt; &lt;li&gt;Warranty: IronWolf has only 3 years, the others 5.&lt;/li&gt; &lt;li&gt;Speed: Ironwolf has 210MB/s, much less than the Pro (255MB/s) and Exos (249MB/s), which are more similar.&lt;/li&gt; &lt;li&gt;Sostenibility: The Exos disks are much more robust (more workload, MTBF and Warranty).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I&#39;d say that for 104$ it makes sense to go with the IronWolf Pro + Exos 7E8 combination.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#choosing-the-disks-for-the-cache&#34;&gt;Choosing the disks for the cache.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using a ZLOG greatly improves the &lt;a href=&#34;https://www.servethehome.com/exploring-best-zfs-zil-slog-ssd-intel-optane-nand/&#34;&gt;writing speed&lt;/a&gt;, equally using an SSD disk for the L2ARC cache improves the read speeds and improves the health of the rotational disks.&lt;/p&gt; &lt;p&gt;The best M.2 NVMe SSD for NAS caching are the ones that have enough capacity to actually make a difference to overall system performance. It also requires a good endurance rating for better reliability and longer lifespan, and you should look for a drive with a specific NAND technology if possible.&lt;/p&gt; &lt;p&gt;I&#39;ve made an analysis based on:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#cache-disk-nand-technology&#34;&gt;Cache disk NAND technology&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#dwpd&#34;&gt;DWPD&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;As conclusion, I’d recommend the Western Digital Red SN700, which has a good 1 DWPD endurance rating, is available in sizes up to 4TB, and is using SLC NAND technology, which is great for enhancing reliability through heavy caching workloads. A close second place goes to the Seagate IronWolf 525, which has similar specifications to the SN700 but utilizes TLC.&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Disk&lt;/th&gt; &lt;th&gt;Size&lt;/th&gt; &lt;th&gt;Speed&lt;/th&gt; &lt;th&gt;Endurance&lt;/th&gt; &lt;th&gt;Warranty&lt;/th&gt; &lt;th&gt;Tech&lt;/th&gt; &lt;th&gt;Price&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;WD Red SN700&lt;/td&gt; &lt;td&gt;500 GB&lt;/td&gt; &lt;td&gt;3430MB/s&lt;/td&gt; &lt;td&gt;1 DWPD&lt;/td&gt; &lt;td&gt;5 years&lt;/td&gt; &lt;td&gt;SLC&lt;/td&gt; &lt;td&gt;73$&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SG IronWolf 525&lt;/td&gt; &lt;td&gt;500 GB&lt;/td&gt; &lt;td&gt;5000MB/s&lt;/td&gt; &lt;td&gt;0.8 DWPD&lt;/td&gt; &lt;td&gt;5 years&lt;/td&gt; &lt;td&gt;TLC&lt;/td&gt; &lt;td&gt;?&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;WD Red SN700&lt;/td&gt; &lt;td&gt;1 TB&lt;/td&gt; &lt;td&gt;3430MB/s&lt;/td&gt; &lt;td&gt;1 DWPD&lt;/td&gt; &lt;td&gt;5 years&lt;/td&gt; &lt;td&gt;SLC&lt;/td&gt; &lt;td&gt;127$&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;SG IronWolf 525&lt;/td&gt; &lt;td&gt;1 TB&lt;/td&gt; &lt;td&gt;5000MB/s&lt;/td&gt; &lt;td&gt;0.8 DWPD&lt;/td&gt; &lt;td&gt;5 years&lt;/td&gt; &lt;td&gt;TLC&lt;/td&gt; &lt;td&gt;?&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/#choosing-the-cold-spare-disks&#34;&gt;Choosing the cold spare disks.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&#39;s good to think how much time you want to have your raids to be inconsistent once a drive has failed.&lt;/p&gt; &lt;p&gt;In my case, for the data I want to restore the raid as soon as I can, therefore I&#39;ll buy another rotational disk. For the SSDs I have more confidence that they won&#39;t break so I don&#39;t feel like having a spare one.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;prometheus&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;Prometheus&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/#accessing-prometheus-metrics-through-python&#34;&gt;Accessing Prometheus metrics through python.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;requests&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requests&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&#34;http://127.0.0.1:9090/api/v1/query&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;container_cpu_user_seconds_total&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;alertmanager&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/alertmanager/&#34;&gt;AlertManager&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/alertmanager/#silences&#34;&gt;Use regular expressions in silences.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To silence an alert with a regular expression use the matcher &lt;code&gt;alertname=~&#34;.*Condition&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt; &lt;h4 id=&#34;cpu&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cpu/&#34;&gt;CPU&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce CPU, attributes and how to buy it.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Central_processing_unit&#34;&gt;A central processing unit or CPU&lt;/a&gt;, also known as the brain of the server, is the electronic circuitry that executes instructions comprising a computer program. The CPU performs basic arithmetic, logic, controlling, and input/output (I/O) operations specified by the instructions in the program.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cpu/#market-analysis&#34;&gt;Add the market analysis.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cpu/#cpu-coolers&#34;&gt;Analyze the cpu coolers.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cpu/#cpu-thermal-paste&#34;&gt;Analyze the use of cpu thermal paste.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Thermal paste is designed to minimize microscopic air gaps and irregularities between the surface of the cooler and the CPU&#39;s IHS (integrated heat spreader), the piece of metal which is built into the top of the processor.&lt;/p&gt; &lt;p&gt;Good thermal paste can have a profound impact on your performance, because it will allow your processor to transfer more of its waste heat to your cooler, keeping your processor running cool.&lt;/p&gt; &lt;p&gt;Most pastes are comprised of ceramic or metallic materials suspended within a proprietary binder which allows for easy application and spread as well as simple cleanup.&lt;/p&gt; &lt;p&gt;These thermal pastes can be electrically conductive or non-conductive, depending on their specific formula. Electrically conductive thermal pastes can carry current between two points, meaning that if the paste squeezes out onto other components, it can cause damage to motherboards and CPUs when you switch on the power. A single drop out of place can lead to a dead PC, so extra care is imperative.&lt;/p&gt; &lt;p&gt;Liquid metal compounds are almost always electrically conductive, so while these compounds provide better performance than their paste counterparts, they require more focus and attention during application. They are very hard to remove if you get some in the wrong place, which would fry your system.&lt;/p&gt; &lt;p&gt;In contrast, traditional thermal paste compounds are relatively simple for every experience level. Most, but not all, traditional pastes are electrically non-conductive.&lt;/p&gt; &lt;p&gt;Most cpu coolers come with their own thermal paste, so check yours before buying another one.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Add GPU advice on shopping tips.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Check that the CPU has GPU if you don&#39;t want to use an external graphic card. Otherwise the BIOS won&#39;t start.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cpu/#installation&#34;&gt;Installation tips for CPU.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When installing an AM4 CPU in the motherboard, rotate the CPU so that the small arrow on one of the corners of the chip matches the arrow on the corner of the motherboard socket.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ram&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ram/&#34;&gt;RAM&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce RAM, it&#39;s properties and how to buy it.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Random-access_memory&#34;&gt;RAM&lt;/a&gt; is a form of computer memory that can be read and changed in any order, typically used to store working data and machine code.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;power-supply-unit&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/psu/&#34;&gt;Power Supply Unit&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Power Supply Unit.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://linuxhint.com/pc-power-supply-unit/&#34;&gt;Power supply unit&lt;/a&gt; is the component of the computer that sources power from the primary source (the power coming from your wall outlet) and delivers it to its motherboard and all its components. Contrary to the common understanding, the PSU does not supply power to the computer; it instead converts the AC (Alternating Current) power from the source to the DC (Direct Current) power that the computer needs.&lt;/p&gt; &lt;p&gt;There are two types of PSU: Linear and Switch-mode. Linear power supplies have a built-in transformer that steps down the voltage from the main to a usable one for the individual parts of the computer. The transformer makes the Linear PSU bulky, heavy, and expensive. Modern computers have switched to the switch-mode power supply, using switches instead of a transformer for voltage regulation. They’re also more practical and economical to use because they’re smaller, lighter, and cheaper than linear power supplies.&lt;/p&gt; &lt;p&gt;PSU need to deliver at least the amount of power that each component requires, if it needs to deliver more, it simply won&#39;t work.&lt;/p&gt; &lt;p&gt;Another puzzling question for most consumers is, “Does a PSU supply constant wattage to the computer?” The answer is a flat No. The wattage you see on the PSUs casing or labels only indicates the maximum power it can supply to the system, theoretically. For example, by theory, a 500W PSU can supply a maximum of 500W to the computer. In reality, the PSU will draw a small portion of the power for itself and distributes power to each of the PC components according to its need. The amount of power the components need varies from 3.3V to 12V. If the total power of the components needs to add up to 250W, it would only use 250W of the 500W, giving you an overhead for additional components or future upgrades.&lt;/p&gt; &lt;p&gt;Additionally, the amount of power the PSU supplies varies during peak periods and idle times. When the components are pushed to their limits, say when a video editor maximizes the GPU for graphics-intensive tasks, it would require more power than when the computer is used for simple tasks like web-browsing. The amount of power drawn from the PSU would depend on two things; the amount of power each component requires and the tasks that each component performs.&lt;/p&gt; &lt;p&gt;I&#39;ve also added the next sections:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/psu/#power-supply-efficiency&#34;&gt;Power supply efficiency&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/psu/#power-supply-shopping-tips&#34;&gt;Power supply shopping tips&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/psu/#market-analysis&#34;&gt;Market analysis&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pedal-pc&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pedal_pc/&#34;&gt;Pedal PC&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Pedal PC.&lt;/p&gt; &lt;p&gt;The Pedal PC idea gathers crazy projects that try to use the energy of your pedaling while you are working on your PC. The most interesting is &lt;a href=&#34;https://www.pedalpc.com/&#34;&gt;PedalPC&lt;/a&gt;, but still crazy.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://pedal-power.com/&#34;&gt;Pedal-Power&lt;/a&gt; is another similar project, although it looks unmaintained.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operating-systems&#34;&gt;Operating Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;linux-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/&#34;&gt;Linux Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#clean-up-system-space&#34;&gt;Clean up system space on debian based hosts.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#install-one-package-from-debian-unstable&#34;&gt;Install one package from Debian unstable.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#monitor-outgoing-traffic&#34;&gt;Monitor outgoing traffic.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#clean-snap-data&#34;&gt;Clean snap data.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;re using &lt;code&gt;snap&lt;/code&gt; you can clean space by:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Reduce the number of versions kept of a package with &lt;code&gt;snap set system refresh.retain=2&lt;/code&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Remove the old versions with &lt;code&gt;clean_snap.sh&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Removes old revisions of snaps&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#CLOSE ALL SNAPS BEFORE RUNNING THIS&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-eu
&lt;span class=&#34;nv&#34;&gt;LANG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;en_US.UTF-8&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;snap&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;list&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--all&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;awk&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/disabled/{print $1, $3}&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;snapname&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;revision&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;snap&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;remove&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$snapname&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--revision&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$revision&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#clean-journalctl-data&#34;&gt;Clean journalctl data.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Check how much space it&#39;s using: &lt;code&gt;journalctl --disk-usage&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Rotate the logs: &lt;code&gt;journalctl --rotate&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Then you have three ways to reduce the data:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Clear journal log older than X days: &lt;code&gt;journalctl --vacuum-time=2d&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Restrict logs to a certain size: &lt;code&gt;journalctl --vacuum-size=100M&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Restrict number of log files: &lt;code&gt;journactl --vacuum-files=5&lt;/code&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The operations above will affect the logs you have right now, but it won&#39;t solve the problem in the future. To let &lt;code&gt;journalctl&lt;/code&gt; know the space you want to use open the &lt;code&gt;/etc/systemd/journald.conf&lt;/code&gt; file and set the &lt;code&gt;SystemMaxUse&lt;/code&gt; to the amount you want (for example &lt;code&gt;1000M&lt;/code&gt; for a gigabyte). Once edited restart the service with &lt;code&gt;sudo systemctl restart systemd-journald&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#set-up-docker-logs-rotation&#34;&gt;Set up docker logs rotation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;By default, the stdout and stderr of the container are written in a JSON file located in &lt;code&gt;/var/lib/docker/containers/[container-id]/[container-id]-json.log&lt;/code&gt;. If you leave it unattended, it can take up a large amount of disk space.&lt;/p&gt; &lt;p&gt;If this JSON log file takes up a significant amount of the disk, we can purge it using the next command.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;truncate&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;lt;logfile&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;We could setup a cronjob to purge these JSON log files regularly. But for the long term, it would be better to setup log rotation. This can be done by adding the following values in &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;log-driver&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;json-file&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;log-opts&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;max-size&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;10m&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;max-file&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;10&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#clean-old-kernels&#34;&gt;Clean old kernels.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The full command is&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dpkg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-l&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;linux-*&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;awk&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/^ii/{ print $2}&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-v&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;uname&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cut&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f1,2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-d&lt;span class=&#34;s2&#34;&gt;&#34;-&#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;-9&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-E&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;(image|headers)&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;xargs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-y&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;purge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To test what packages will it remove use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dpkg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-l&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;linux-*&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;awk&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;/^ii/{ print $2}&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-v&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;uname&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cut&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f1,2&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-d&lt;span class=&#34;s2&#34;&gt;&#34;-&#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-e&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;-9&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;grep&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-E&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;(image|headers)&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;xargs&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--dry-run&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;remove
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Remember that your running kernel can be obtained by &lt;code&gt;uname -r&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#clean-old-kernels&#34;&gt;Clean old kernels warning.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I don&#39;t recommend using this step, rely on &lt;code&gt;apt-get autoremove&lt;/code&gt;, it&#39;s safer.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#create-basic-auth-header&#34;&gt;Create Basic Auth header.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-n&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;user:password&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;base64
&lt;span class=&#34;nv&#34;&gt;dXNlcjpwYXNzd29yZA&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Without the &lt;code&gt;-n&lt;/code&gt; it won&#39;t work well.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#check-vulnerabilities-in-node.js-applications&#34;&gt;Check vulnerabilities in Node.js applications.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With &lt;code&gt;yarn audit&lt;/code&gt; you&#39;ll see the vulnerabilities, with &lt;code&gt;yarn outdated&lt;/code&gt; you can see the packages that you need to update.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#check-vulnerabilities-in-rails-dependencies&#34;&gt;Check vulnerabilities in rails dependencies.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gem&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;bundler-audit
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;project_with_gem_lock
bundler-audit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#trim-silences-of-sound-files&#34;&gt;Trim silences of sound files.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To trim all silence longer than 2 seconds down to only 2 seconds long.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sox&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;.wav&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;out6.wav&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;silence&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-l&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;.1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;%&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;.0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Note that SoX does nothing to bits of silence shorter than 2 seconds.&lt;/p&gt; &lt;p&gt;If you encounter the &lt;code&gt;sox FAIL formats: no handler for file extension &#39;mp3&#39;&lt;/code&gt; error you&#39;ll need to install the &lt;code&gt;libsox-fmt-all&lt;/code&gt; package.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#adjust-the-replay-gain-of-many-sound-files&#34;&gt;Adjust the replay gain of many sound files.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;apt-get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;python-rgain
replaygain&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;*.mp3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#create-qr-code&#34;&gt;Create QR code.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;qrencode&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;qrcode.png&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Hello World!&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#git-checkout-to-main-with-master-as-a-fallback&#34;&gt;Git checkout to main with master as a fallback.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I usually use the alias &lt;code&gt;gcm&lt;/code&gt; to change to the main branch of the repository, given the change from &lt;a href=&#34;https://lyz-code.github.io/blue-book/git/#renaming-from-master-to-main&#34;&gt;main to master&lt;/a&gt; now I have some repos that use one or the other, but I still want &lt;code&gt;gcm&lt;/code&gt; to go to the correct one. The solution is to use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;gcm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;git checkout &#34;$(git symbolic-ref refs/remotes/origin/HEAD | cut -d&#39;&lt;/span&gt;/&lt;span class=&#34;s1&#34;&gt;&#39; -f4)&#34;&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#scan-a-physical-page-in-linux&#34;&gt;Scan a physical page in Linux.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Install &lt;code&gt;xsane&lt;/code&gt; and run it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#get-the-output-of-docker-ps-as-a-json&#34;&gt;Get the output of &lt;code&gt;docker ps&lt;/code&gt; as a json.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To get the complete json for reference.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ps&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--format&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;{{json .}}&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To get only the required columns in the output with tab separated version&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ps&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--format&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;{{json .}}&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;[.ID, .State, .Names, .Image]&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;To get &lt;a href=&#34;https://stackoverflow.com/questions/54075456/docker-ps-show-image-id-instead-of-name&#34;&gt;also the image&#39;s ID&lt;/a&gt; you can use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;inspect&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--format&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;{{json .}}&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ps&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-aq&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-r&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;[.Id, .Name, .Config.Image, .Image]&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#df-and-du-showing-different-results&#34;&gt;Df and du showing different results.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes on a linux machine you will notice that both &lt;code&gt;df&lt;/code&gt; command (display free disk space) and &lt;code&gt;du&lt;/code&gt; command (display disk usage statistics) report different output. Usually, &lt;code&gt;df&lt;/code&gt; will output a bigger disk usage than &lt;code&gt;du&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;du&lt;/code&gt; command estimates file space usage, and the &lt;code&gt;df&lt;/code&gt; command shows file system disk space usage.&lt;/p&gt; &lt;p&gt;There are many reasons why this could be happening:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#disk-mounted-over-data&#34;&gt;Disk mounted over data&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#used-deleted-files&#34;&gt;Used deleted files&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#clean-up-docker-data&#34;&gt;Clean up docker data.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To remove unused &lt;code&gt;docker&lt;/code&gt; data you can run &lt;code&gt;docker system prune -a&lt;/code&gt;. This will remove:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;All stopped containers&lt;/li&gt; &lt;li&gt;All networks not used by at least one container&lt;/li&gt; &lt;li&gt;All images without at least one container associated to them&lt;/li&gt; &lt;li&gt;All build cache&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Sometimes that&#39;s not enough, and your &lt;code&gt;/var/lib/docker&lt;/code&gt; directory still weights more than it should. In those cases:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Stop the &lt;code&gt;docker&lt;/code&gt; service.&lt;/li&gt; &lt;li&gt;Remove or move the data to another directory&lt;/li&gt; &lt;li&gt;Start the &lt;code&gt;docker&lt;/code&gt; service.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In order not to loose your persisted data, you need to configure your dockers to mount the data from a directory that&#39;s not within &lt;code&gt;/var/lib/docker&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#download-ts-streams&#34;&gt;Download TS streams.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Some sites give stream content with small &lt;code&gt;.ts&lt;/code&gt; files that you can&#39;t download directly. Instead open the developer tools, reload the page and search for a request with extension &lt;code&gt;.m3u8&lt;/code&gt;, that gives you the playlist of all the chunks of &lt;code&gt;.ts&lt;/code&gt; files. Once you have that url you can use &lt;code&gt;yt-dlp&lt;/code&gt; to download it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;qbittorrent&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/qbittorrent/&#34;&gt;qBittorrent&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce qBittorrent.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.qbittorrent.org/&#34;&gt;qBittorrent&lt;/a&gt; is &lt;a href=&#34;https://lyz-code.github.io/blue-book/torrents/&#34;&gt;my chosen&lt;/a&gt; client for &lt;a href=&#34;https://en.wikipedia.org/wiki/BitTorrent&#34;&gt;Bittorrent&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Some interesting sections added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/qbittorrent/#Migration-from-other-client&#34;&gt;Migration from other client&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/qbittorrent/#Python-interaction&#34;&gt;Python interaction&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/qbittorrent/#Monitorization&#34;&gt;Monitorization&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/qbittorrent/#Automatic-operation&#34;&gt;Automatic operation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;aleph&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/rtorrent/&#34;&gt;aleph&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Debug rtorrent docker problems.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Aleph.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alephdata/aleph&#34;&gt;Aleph&lt;/a&gt; is a tool for indexing large amounts of both documents (PDF, Word, HTML) and structured (CSV, XLS, SQL) data for easy browsing and search. It is built with investigative reporting as a primary use case. Aleph allows cross-referencing mentions of well-known entities (such as people and companies) against watchlists, e.g. from prior research or public datasets.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/aleph/#problems-accessing-redis-locally&#34;&gt;Problems accessing redis locally.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you&#39;re with the VPN connected, turn it off.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/aleph/#pdb-behaves-weird&#34;&gt;PDB behaves weird.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes you have two traces at the same time, so each time you run a PDB command it jumps from pdb trace. Quite confusing. Try to &lt;code&gt;c&lt;/code&gt; the one you don&#39;t want so that you&#39;re left with the one you want. Or put the &lt;code&gt;pdb&lt;/code&gt; trace in a conditional that only matches one of both threads.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;anki&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/anki/&#34;&gt;Anki&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Anki.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;Anki&lt;/a&gt; is a program which makes remembering things easy. Because it&#39;s a lot more efficient than traditional study methods, you can either greatly decrease your time spent studying, or greatly increase the amount you learn.&lt;/p&gt; &lt;p&gt;Anyone who needs to remember things in their daily life can benefit from Anki. Since it is content-agnostic and supports images, audio, videos and scientific markup (via LaTeX), the possibilities are endless.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/anki/#interacting-with-python&#34;&gt;Interacting with python.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Although there are some python libraries:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/kerrickstaley/genanki&#34;&gt;genanki&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://pypi.org/project/py-anki/&#34;&gt;py-anki&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I think the best way is to use &lt;a href=&#34;https://foosoft.net/projects/anki-connect/&#34;&gt;AnkiConnect&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The installation process is similar to other Anki plugins and can be accomplished in three steps:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Open the &lt;em&gt;Install Add-on&lt;/em&gt; dialog by selecting &lt;em&gt;Tools | Add-ons | Get Add-ons...&lt;/em&gt; in Anki.&lt;/li&gt; &lt;li&gt;Input &lt;code&gt;2055492159&lt;/code&gt; into the text box labeled &lt;em&gt;Code&lt;/em&gt; and press the &lt;em&gt;OK&lt;/em&gt; button to proceed.&lt;/li&gt; &lt;li&gt;Restart Anki when prompted to do so in order to complete the installation of Anki-Connect.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Anki must be kept running in the background in order for other applications to be able to use Anki-Connect. You can verify that Anki-Connect is running at any time by accessing &lt;code&gt;localhost:8765&lt;/code&gt; in your browser. If the server is running, you will see the message Anki-Connect displayed in your browser window.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/anki/#usage&#34;&gt;Use anki connect with python.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ferdium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ferdium/&#34;&gt;ferdium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce ferdium.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://ferdium.org&#34;&gt;Ferdium&lt;/a&gt; is a desktop application to have all your services in one place. It&#39;s similar to Rambox, Franz or Ferdi only that it&#39;s maintained by the community and respects your privacy.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;finnix&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/finnix/&#34;&gt;finnix&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce finnix.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.finnix.org/&#34;&gt;Finnix&lt;/a&gt; is a live Linux distribution specialized in the recovery, maintenance, testing of systems.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;github-cli&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gh/&#34;&gt;Github cli&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/gh/#trigger-a-workflow-run&#34;&gt;Trigger a workflow run.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To manually trigger a workflow you need to first configure it to allow &lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch&#34;&gt;&lt;code&gt;workflow_dispatch&lt;/code&gt; events&lt;/a&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workflow_dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Then you can trigger the workflow with &lt;code&gt;gh workflow run {{ workflow_name }}&lt;/code&gt;, where you can get the &lt;code&gt;workflow_name&lt;/code&gt; with &lt;code&gt;gh workflow list&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;goaccess&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/goaccess/&#34;&gt;goaccess&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce goaccess.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://goaccess.io/&#34;&gt;goaccess&lt;/a&gt; is a fast terminal-based log analyzer.&lt;/p&gt; &lt;p&gt;Its core idea is to quickly analyze and view web server statistics in real time without needing to use your browser (great if you want to do a quick analysis of your access log via SSH, or if you simply love working in the terminal).&lt;/p&gt; &lt;p&gt;While the terminal output is the default output, it has the capability to generate a complete, self-contained real-time HTML report (great for analytics, monitoring and data visualization), as well as a JSON, and CSV report.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;i3wm&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/i3wm/&#34;&gt;i3wm&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce i3wm.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://i3wm.org/&#34;&gt;i3&lt;/a&gt; is a tiling window manager.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/i3wm/#layout-saving&#34;&gt;Layout saving.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Layout saving/restoring allows you to load a JSON layout file so that you can have a base layout to start working with after powering on your computer.&lt;/p&gt; &lt;p&gt;First of all arrange the windows in the workspace, then you can save the layout of either a single workspace or an entire output:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;i3-save-tree&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--workspace&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;1: terminal&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;~/.i3/workspace-1.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;You need to open the created file and remove the comments that match the desired windows under the &lt;code&gt;swallows&lt;/code&gt; keys, so transform the next snippet:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;swallows&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//  &#34;class&#34;: &#34;^URxvt$&#34;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//  &#34;instance&#34;: &#34;^irssi$&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Into:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;swallows&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;class&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;^URxvt$&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&#34;instance&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;^irssi$&#34;&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Once is ready close all the windows of the workspace you want to restore (moving them away is not enough!).&lt;/p&gt; &lt;p&gt;Then on a terminal you can restore the layout with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;i3-msg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;workspace &#34;1: terminal&#34;; append_layout ~/.i3/workspace-1.json&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;admonition warning&#34;&gt; &lt;p class=&#34;admonition-title&#34;&gt;It&#39;s important that you don&#39;t use a relative path&lt;/p&gt; &lt;p&gt;Even if you&#39;re in &lt;code&gt;~/.i3/&lt;/code&gt; you have to use &lt;code&gt;i3-msg append_layout ~/.i3/workspace-1.json&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;p&gt;This command will create some fake windows (called placeholders) with the layout you had before, &lt;code&gt;i3&lt;/code&gt; will then wait for you to create the windows that match the selection criteria. Once they are, it will put them in their respective placeholders.&lt;/p&gt; &lt;p&gt;If you wish to create the layouts at startup you can add the next snippet to your i3 config.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;exec --no-startup-id &#34;i3-msg &#39;workspace \&#34;1: terminal\&#34;; append_layout ~/.i3/workspace-1.json&#39;&#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ffmpeg&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ffmpeg/&#34;&gt;ffmpeg&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/ffmpeg/#convert-vob-to-mkv&#34;&gt;Convert VOB to mkv.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Unify your VOBs &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;*.VOB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&amp;gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;output.vob
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Identify the streams&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ffmpeg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-analyzeduration&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;100M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-probesize&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;100M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-i&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;output.vob
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Select the streams that you are interested in, imagine that is 1, 3, 4, 5 and 6.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Encoding&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ffmpeg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-analyzeduration&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;100M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-probesize&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;100M&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-i&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;output.vob&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-map&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-map&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:3&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-map&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-map&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:5&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-map&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;:6&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-metadata:s:a:0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ita&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-metadata:s:a:0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Italian stereo&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-metadata:s:a:1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;eng&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-metadata:s:a:1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;English stereo&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-metadata:s:s:0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ita&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-metadata:s:s:0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Italian&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-metadata:s:s:1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;eng&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-metadata:s:s:1&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;English&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-codec:v&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libx264&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-crf&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-codec:a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;libmp3lame&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-qscale:a&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-codec:s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;copy&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;output.mkv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;khal&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/khal/&#34;&gt;Khal&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce khal.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://khal.readthedocs.io/en/latest/index.html&#34;&gt;&lt;code&gt;khal&lt;/code&gt;&lt;/a&gt; is a standards based Python CLI (console) calendar program, able to synchronize with &lt;a href=&#34;http://en.wikipedia.org/wiki/CalDAV&#34;&gt;CalDAV&lt;/a&gt; servers through &lt;a href=&#34;https://lyz-code.github.io/blue-book/vdirsyncer/&#34;&gt;&lt;code&gt;vdirsyncer&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Can read and write events/icalendars to vdir, so &lt;a href=&#34;https://lyz-code.github.io/blue-book/vdirsyncer/&#34;&gt;&lt;code&gt;vdirsyncer&lt;/code&gt;&lt;/a&gt; can be used to synchronize calendars with a variety of other programs, for example CalDAV servers.&lt;/li&gt; &lt;li&gt;Fast and easy way to add new events&lt;/li&gt; &lt;li&gt;&lt;code&gt;ikhal&lt;/code&gt; (interactive &lt;code&gt;khal&lt;/code&gt;) lets you browse and edit calendars and events.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Limitations:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Only rudimentary support for creating and editing recursion rules&lt;/li&gt; &lt;li&gt;You cannot edit the timezones of events&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/khal/#edit-the-events-in-a-more-pleasant-way&#34;&gt;Edit the events in a more pleasant way.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;ikhal&lt;/code&gt; event editor is not comfortable for me. I usually only change the title or the start date and in the default interface you need to press many keystrokes to make it happen.&lt;/p&gt; &lt;p&gt;A patch solution is to pass a custom script on the &lt;code&gt;EDITOR&lt;/code&gt; environmental variable. Assuming you have &lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/&#34;&gt;&lt;code&gt;questionary&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/ics/&#34;&gt;&lt;code&gt;ics&lt;/code&gt;&lt;/a&gt; installed you can save the next snippet into an &lt;code&gt;edit_event&lt;/code&gt; file in your &lt;code&gt;PATH&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Edit an ics calendar event.&#34;&#34;&#34;&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;questionary&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ics&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Calendar&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;r&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;calendar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Calendar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;calendar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timeline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;questionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Title: &#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;questionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&#34;Start: &#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hour&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zfill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zfill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;hour&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;:&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;minute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;:&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;w&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;writelines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;calendar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;serialize_iter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Now if you open &lt;code&gt;ikhal&lt;/code&gt; as &lt;code&gt;EDITOR=edit_event ikhal&lt;/code&gt;, whenever you edit one event you&#39;ll get a better interface. Add to your &lt;code&gt;.zshrc&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ikhal&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;EDITOR=edit_event ikhal&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The default keybinding for the edition is not very comfortable either, add the next snippet on your config:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[keybindings]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;external_edit&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;e&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;meta e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;luks&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/luks/luks/&#34;&gt;LUKS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/luks/luks/#break-a-luks-password&#34;&gt;Break a luks password.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can use &lt;a href=&#34;https://github.com/glv2/bruteforce-luks&#34;&gt;&lt;code&gt;bruteforce-luks&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pipx&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pipx/&#34;&gt;Pipx&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce pipx.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pypa.github.io/pipx/&#34;&gt;Pipx&lt;/a&gt; is a command line tool to install and run Python applications in isolated environments.&lt;/p&gt; &lt;p&gt;Very useful not to pollute your user or device python environments.&lt;/p&gt; &lt;p&gt;Install it with:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pipx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;profanity&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/profanity/&#34;&gt;Profanity&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce profanity.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://profanity-im.github.io/&#34;&gt;profanity&lt;/a&gt; is a console based XMPP client written in C using ncurses and libstrophe, inspired by Irssi.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;libreelec&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/libreelec/&#34;&gt;Libreelec&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce LibreElec.&lt;/p&gt; &lt;p&gt;LibreElec is the lightweight distribution to run Kodi&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;torrents&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/torrents/&#34;&gt;Torrents&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Compare the different torrent clients.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/BitTorrent&#34;&gt;BitTorrent&lt;/a&gt; is a communication protocol for peer-to-peer file sharing (P2P), which enables users to distribute data and electronic files over the Internet in a decentralized manner.&lt;/p&gt; &lt;p&gt;Each of us seeks something different for a torrent client, thus there is a wide set of software, you just need to find the one that&#39;s best for you. In my case I&#39;m searching for a client that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Scales well for many torrents&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Is robust&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Is maintained&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Is popular&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Is supported by the private trackers: Some torrent clients are banned by the tracker because they don&#39;t report correctly to the tracker when canceling/finishing a torrent session. If you use them then a few MB may not be counted towards the stats near the end, and torrents may still be listed in your profile for some time after you have closed the client. Each tracker has their list of allowed clients. Make sure to check them.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Also, clients in alpha or beta versions should be avoided.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Can be easily monitored&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Has a Python library or an API to interact with&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Has clear and enough logs&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Has RSS support&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Has a pleasant UI&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Supports categories&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Can unpack content once it&#39;s downloaded&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;No ads&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Easy to use behind a VPN with IP leakage protection.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Easy to deploy&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I don&#39;t need other features such as:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Preview content&lt;/li&gt; &lt;li&gt;Search in the torrent client&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The winner has been &lt;a href=&#34;https://lyz-code.github.io/blue-book/qbittorrent/&#34;&gt;qBittorrent&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vdirsyncer&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vdirsyncer/&#34;&gt;vdirsyncer&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce vdirsyncer.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://vdirsyncer.pimutils.org/en/stable/&#34;&gt;vdirsyncer&lt;/a&gt; is a Python command-line tool for synchronizing calendars and addressbooks between a variety of servers and the local filesystem. The most popular usecase is to synchronize a server with a local folder and use a set of other programs such as &lt;a href=&#34;https://lyz-code.github.io/blue-book/khal/&#34;&gt;&lt;code&gt;khal&lt;/code&gt;&lt;/a&gt; to change the local events and contacts. Vdirsyncer can then synchronize those changes back to the server.&lt;/p&gt; &lt;p&gt;However, &lt;code&gt;vdirsyncer&lt;/code&gt; is not limited to synchronizing between clients and servers. It can also be used to synchronize calendars and/or addressbooks between two servers directly.&lt;/p&gt; &lt;p&gt;It aims to be for calendars and contacts what OfflineIMAP is for emails.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/#delete-a-file-inside-vim&#34;&gt;Delete a file inside vim.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;call&lt;/span&gt; delete&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;expand&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;%&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;bdelete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vscodium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vscodium/&#34;&gt;VSCodium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce VSCodium.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/VSCodium/vscodium&#34;&gt;VSCodium&lt;/a&gt; are binary releases of VS Code without MS branding/telemetry/licensing.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;wallabag&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/wallabag/&#34;&gt;Wallabag&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce wallabag.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://doc.wallabag.org&#34;&gt;Wallabag&lt;/a&gt; is a self-hosted read-it-later application: it saves a web page by keeping content only. Elements like navigation or ads are deleted.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;wireshark&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/wireshark/&#34;&gt;Wireshark&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Wireshark, it&#39;s installation and basic usage.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.wireshark.org/&#34;&gt;Wireshark&lt;/a&gt; is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt; &lt;h4 id=&#34;android-tips&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/android_tips/&#34;&gt;Android Tips&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/android_tips/#extend-the-life-of-your-battery&#34;&gt;Extend the life of your battery.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://accubattery.zendesk.com/hc/en-us/articles/210224725-Charging-research-and-methodology&#34;&gt;Research&lt;/a&gt; has shown that keeping your battery charged between 0% and 80% can make your battery&#39;s lifespan last 2x longer than when you use a full battery cycle from 0-100%.&lt;/p&gt; &lt;p&gt;As a non root user you can &lt;a href=&#34;https://www.getdroidtips.com/custom-battery-charge-limit-android/&#34;&gt;install Accubattery&lt;/a&gt; (not in F-droid :( ) to get an alarm when the battery reaches 80% so that you can manually unplug it. Instead of leaving the mobile charge in the night and stay connected at 100% a lot of hours until you unplug, charge it throughout the day.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;grapheneos&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/grapheneos/&#34;&gt;GrapheneOS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce GrapheneOS.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://grapheneos.org/&#34;&gt;GrapheneOS&lt;/a&gt; is a private and secure mobile operating system with Android app compatibility. Developed as a non-profit open source project.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce GrapheneOS.&lt;/p&gt; &lt;p&gt;GrapheneOS is a private and secure mobile operating system with great functionality and usability. It starts from the strong baseline of the Android Open Source Project (AOSP) and takes great care to avoid increasing attack surface or hurting the strong security model. GrapheneOS makes substantial improvements to both privacy and security through many carefully designed features built to function against real adversaries. The project cares a lot about usability and app compatibility so those are taken into account for all of our features.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/grapheneos/#installation&#34;&gt;Installation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I was not able to follow the &lt;a href=&#34;https://grapheneos.org/install/web&#34;&gt;web&lt;/a&gt; instructions so I had to follow the &lt;a href=&#34;https://grapheneos.org/install/cli&#34;&gt;cli&lt;/a&gt; ones.&lt;/p&gt; &lt;p&gt;Whenever I run a &lt;code&gt;fastboot&lt;/code&gt; command it got stuck in &lt;code&gt;&amp;lt; waiting for devices &amp;gt;&lt;/code&gt;, so I added the next rules on the &lt;code&gt;udev&lt;/code&gt; configuration at &lt;code&gt;/etc/udev/rules.d/51-android.rules&lt;/code&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SUBSYSTEM==&#34;usb&#34;, ATTR{idVendor}==&#34;18d1&#34;, ATTR{idProduct}==&#34;4ee7&#34;, MODE=&#34;0600&#34;, OWNER=&#34;myuser&#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The &lt;code&gt;idProduct&lt;/code&gt; and &lt;code&gt;idVendor&lt;/code&gt; were deduced from &lt;code&gt;lsusb&lt;/code&gt;. Then after a restart everything worked fine.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;Writing&lt;/h3&gt; &lt;h4 id=&#34;forking-this-garden&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/forking_this_wiki/&#34;&gt;Forking this garden&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Update forking instructions.&lt;/p&gt; &lt;p&gt;I recommend against forking the repository via Github. If you do that, you&#39;ll have all the history of my repository, which will make your repository more heavy than it should (as I have a lot of images), and it will make it hard for me to make pull requests to your digital garden.&lt;/p&gt; &lt;p&gt;Furthermore, you&#39;ll always see a message in your repo similar to &lt;code&gt;This branch is 909 commits ahead, 1030 commits behind lyz-code:master.&lt;/code&gt; like you can see in &lt;a href=&#34;https://github.com/m0wer/memento&#34;&gt;this fork&lt;/a&gt;. Also if you don&#39;t want to keep all the content I&#39;ve made so far and want to start from scratch then the only thing that is useful for you is the skeleton I&#39;ve made, and I don&#39;t need any attribution or credit for that :P.&lt;/p&gt; &lt;p&gt;If on the other hand you do want to keep all my content, then wouldn&#39;t it be better to just make contributions to this repository instead?&lt;/p&gt; &lt;p&gt;Therefore the best way to give credit and attribution is by building your garden (the more we are writing the merrier :) ), and then if you want to spread the word that my garden exists within your content then that would be awesome.&lt;/p&gt; &lt;p&gt;If you end up building your own, remember to add yourself to the &lt;a href=&#34;https://github.com/lyz-code/best-of-digital-gardens&#34;&gt;digital garden&#39;s list&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;cooking&#34;&gt;Cooking&lt;/h3&gt; &lt;h4 id=&#34;cooking-software&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking_software/&#34;&gt;Cooking software&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Analysis of existing recipe manager software.&lt;/p&gt; &lt;p&gt;List the expected features from the recipe manager and add links of the software found after an analysis of the state of the art, it&#39;s still a work in progress&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Finish the state of the art analysis.&lt;/p&gt; &lt;p&gt;Review Cooklang, KookBook, RecipeSage, Mealie and Chowdown&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;aerial-silk&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/aerial_silk/&#34;&gt;Aerial Silk&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Aerial Silk, some warmups and some figures.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Aerial_silk&#34;&gt;Aerial Silk&lt;/a&gt; is a type of performance in which one or more artists perform aerial acrobatics while hanging from a fabric. The fabric may be hung as two pieces, or a single piece, folded to make a loop, classified as hammock silks. Performers climb the suspended fabric without the use of safety lines and rely only on their training and skill to ensure safety. They use the fabric to wrap, suspend, drop, swing, and spiral their bodies into and out of various positions. Aerial silks may be used to fly through the air, striking poses and figures while flying. Some performers use dried or spray rosin on their hands and feet to increase the friction and grip on the fabric.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;meditation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/meditation/&#34;&gt;Meditation&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/meditation/#references&#34;&gt;Add NonCompete recommendations.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://invidious.osi.kr/watch?v=xSHXHHblin0&#34;&gt;His meditation for anti-capitalists video&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The &lt;a href=&#34;https://www.goodreads.com/en/book/show/25942786-the-mind-illuminated&#34;&gt;The Mind Illuminated: A Complete Meditation Guide Integrating Buddhist Wisdom and Brain Science by Culadasa (John Yates)&lt;/a&gt; book.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;maker&#34;&gt;Maker&lt;/h3&gt; &lt;h4 id=&#34;redox&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/redox/&#34;&gt;Redox&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Redox.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mattdibi/redox-keyboard&#34;&gt;Redox&lt;/a&gt; is an awesome Do It Yourself mechanical keyboard&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Installation instructions.&lt;/p&gt; &lt;p&gt;First flash:&lt;/p&gt; &lt;p&gt;Download the hex from the via website&lt;/p&gt; &lt;p&gt;Try to flash it many times reseting the promicros.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;avrdude&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-b&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;57600&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-p&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;m32u4&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-P&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/dev/ttyACM0&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-c&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;avr109&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-D&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-U&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;flash:w:redox_rev1_base_via.hex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Once the write has finished install via:&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/the-via/releases/releases&#34;&gt;https://github.com/the-via/releases/releases&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Reboot the computer&lt;/p&gt; &lt;p&gt;Launch it with &lt;code&gt;via-nativia&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;video-gaming&#34;&gt;Video Gaming&lt;/h3&gt; &lt;h4 id=&#34;king-arthur-gold&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/kag/&#34;&gt;King Arthur Gold&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce King Arthur Gold.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://kag2d.com/en/&#34;&gt;King Arthur Gold&lt;/a&gt;, also known as KAG, is a free Medieval Build n&#39;Kill Multiplayer Game with Destructible Environments.&lt;/p&gt; &lt;p&gt;Construct freeform forts as a medieval Builder, fight in sword duels as a Knight or snipe with your bow as an Archer. KAG blends the cooperative aspects of Lost Vikings, mashes them with the full destructibility of Worms and the visual style and action of Metal Slug, brought to you by the creators of Soldat.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/kag/#builder-guides&#34;&gt;Builder guides.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://deynarde.github.io/kag-builder-guide&#34;&gt;Turtlebutt and Bunnie&lt;/a&gt; guide is awesome.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;age-of-empires&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/age_of_empires/&#34;&gt;Age of Empires&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Age of Empires videogame.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/age_of_empires/#basic-opening&#34;&gt;How to do the basic opening&lt;/a&gt;: What to do when to pass to the feudal age in 8 minutes 30 seconds&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/age_of_empires/#Micromanagements&#34;&gt;How to micromanage&lt;/a&gt; different processes such as sheep, deer, boar hunting, house building, lumberjacking&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;board-gaming&#34;&gt;Board Gaming&lt;/h3&gt; &lt;h4 id=&#34;regicide&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/regicide/&#34;&gt;Regicide&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/regicide/#player-modifiers&#34;&gt;Player modifiers extension.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At the start of the game players can decide their suit, they will get a bonus on the played cards of their suit, and a penalization on the opposite suit. The opposite suits are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;♠ opposite of ♥&lt;/li&gt; &lt;li&gt;♣ opposite of ♦&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The bonus depends on the level of the enemy being:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;J: +1 or -1&lt;/li&gt; &lt;li&gt;Q: +2 or -2&lt;/li&gt; &lt;li&gt;K: +3 or -3&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sudokus&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sudokus/&#34;&gt;Sudokus&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the sudoku game.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Sudoku&#34;&gt;Sudoku&lt;/a&gt; is a logic-based, combinatorial number-placement puzzle. In classic Sudoku, the objective is to fill a 9 × 9 grid with digits so that each column, each row, and each of the nine 3 × 3 subgrids that compose the grid (also called &#34;boxes&#34;, &#34;blocks&#34;, or &#34;regions&#34;) contain all of the digits from 1 to 9. The puzzle setter provides a partially completed grid, which for a well-posed puzzle has a single solution.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;book-binding&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/book_binding/&#34;&gt;Book Binding&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce book binding.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Bookbinding&#34;&gt;Book binding&lt;/a&gt; is the process of physically assembling a book of codex format from an ordered stack of paper sheets that are folded together into sections called signatures or sometimes left as a stack of individual sheets. Several signatures are then bound together along one edge with a thick needle and sturdy thread.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;science&#34;&gt;Science&lt;/h2&gt; &lt;h3 id=&#34;data-analysis&#34;&gt;Data Analysis&lt;/h3&gt; &lt;h4 id=&#34;recommender-systems&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/data_analysis/recommender_systems/recommender_systems/&#34;&gt;Recommender Systems&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/data_analysis/recommender_systems/recommender_systems/#interesting-resources&#34;&gt;Add book recommender.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://bookwyrm.social&#34;&gt;Bookwyrm&lt;/a&gt; looks to be a promising source to build book recommender systems.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Reorganization: Reorder the blue book navigation panel.&lt;/li&gt; &lt;li&gt;New: Sum up all the VueJS documentation.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Troubleshoot Failed to resolve component: X.&lt;/p&gt; &lt;p&gt;If you&#39;ve already imported the component with &lt;code&gt;import X from &#39;./X.vue&lt;/code&gt; you may have forgotten to add the component to the &lt;code&gt;components&lt;/code&gt; property of the module:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;export&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Inbox&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;X&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Reorder the programming languages under a Languages section.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Bear with me or Bare with me.&lt;/p&gt; &lt;p&gt;&#34;Bear with me&#34; is the correct form.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct argument to use pipes in terminals.&lt;/p&gt; &lt;p&gt;You don&#39;t use &lt;code&gt;check=True&lt;/code&gt; but &lt;code&gt;shell=True&lt;/code&gt;, thanks &lt;a href=&#34;https://github.com/pawamoy&#34;&gt;pawamoy&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update http versions to &lt;code&gt;HTTP/2.0&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;It seems that the correct protocol is HTTP/2.0 now: &lt;a href=&#34;https://github.com/prometheus/blackbox_exporter/issues/658&#34;&gt;https://github.com/prometheus/blackbox_exporter/issues/658&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Alder tree.&lt;/p&gt; &lt;p&gt;&lt;img alt=&#34; &#34; src=&#34;../../img/Alder-3.jpg&#34;/&gt;&lt;/p&gt; &lt;p&gt;Alders are trees comprising the genus Alnus in the birch family Betulaceae (like the &lt;a href=&#34;#birch&#34;&gt;birch&lt;/a&gt;). The genus parts are &#34;al&#34; which means &#34;close by&#34; and &#34;lan&#34; which means &#34;side of the river&#34;, so they are trees that grow close to rivers or creeks.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Give more details of the beech tree.&lt;/p&gt; &lt;p&gt;&lt;img alt=&#34; &#34; src=&#34;../../img/beech-4.jpg&#34;/&gt; The leaves of beech trees are elliptic, a little pointy at the end, flat, and with a short petiole. They are big and wide leaves ranging from 4-9 cm long. Very abundant, they have a light green colour with a darker tone and glossy on the upper side.&lt;/p&gt; &lt;p&gt;The fruit is a small, sharply three-angled nut 10-15 mm long, borne singly or in pairs in soft-spined husks 1.5-2.5 cm long, known as cupules. The husk can have a variety of spine- to scale-like appendages, the character of which is, in addition to leaf shape, one of the primary ways beeches are differentiated. The nuts are edible, though bitter (though not nearly as bitter as acorns) with a high tannin content, and are called beechnuts or beechmast.&lt;/p&gt; &lt;p&gt;They are big trees easily going between 30 and 45 meters. It looks very different if its isolated or being part of a forest. The first one the branches grow from the middle of the trunk and are horizontal, in the second, the branches go up and start over the half of the trunk. The principal root is very powerful, with very strong secondary roots, developing lateral superficial roots.&lt;/p&gt; &lt;p&gt;&lt;img alt=&#34; &#34; src=&#34;../../img/beech-bark.jpg&#34;/&gt;&lt;/p&gt; &lt;p&gt;The trunk is right with a grayish-cinder bark, smooth until it&#39;s old, usually covered by moss an lichen. Smaller branches are zigzagging with reddish-brown pointy buds.&lt;/p&gt; &lt;p&gt;The canopy is big, dense, rounded and semi spheric, giving a lot of shadow.&lt;/p&gt; &lt;p&gt;It grows slow in the first years, being the most active between the tenth and twelve year, reaching it&#39;s maximum height when it&#39;s twenty five, although it lives around three hundred years.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Give more details of the birch tree.&lt;/p&gt; &lt;p&gt;The simple leaves are rhomboidal, between 3 and 6 cm, singly or doubly serrate except at the base, feather-veined, petiolate and stipulate. Although they are alternate, many leaves spawn from each side of the branch, making some think that they are not alternate. They often appear in pairs, but these pairs are really borne on spur-like, two-leaved, lateral branchlets.&lt;/p&gt; &lt;p&gt;The canopy is rounded and irregular giving few shadow.&lt;/p&gt; &lt;p&gt;The fruit is a small samara, although the wings may be obscure in some species. They differ from the alders in that the female catkins are not woody and disintegrate at maturity, falling apart to release the seeds, unlike the woody, cone-like female alder catkins.&lt;/p&gt; &lt;p&gt;The bark of all birches is characteristically smooth and white, although in older ones the lower part is usually cracked and takes blackish brown colours. It&#39;s marked with long, horizontal lenticels, and often separates into thin, papery plates, especially upon the paper birch.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: How to tell apart the different trees.&lt;/p&gt; &lt;p&gt;Alder vs Beech:&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Property&lt;/th&gt; &lt;th&gt;Beech&lt;/th&gt; &lt;th&gt;Alder&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Leaf border&lt;/td&gt; &lt;td&gt;flat&lt;/td&gt; &lt;td&gt;sparsely toothed&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Leaf form&lt;/td&gt; &lt;td&gt;elliptic&lt;/td&gt; &lt;td&gt;rounded&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Same colour both sides&lt;/td&gt; &lt;td&gt;no (darker and glossy up)&lt;/td&gt; &lt;td&gt;yes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Sticky leafs&lt;/td&gt; &lt;td&gt;no&lt;/td&gt; &lt;td&gt;yes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Size&lt;/td&gt; &lt;td&gt;30-45m&lt;/td&gt; &lt;td&gt;10-12m (in Europe)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Knots on the roots with fungi&lt;/td&gt; &lt;td&gt;no&lt;/td&gt; &lt;td&gt;yes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Where they grow&lt;/td&gt; &lt;td&gt;everywhere&lt;/td&gt; &lt;td&gt;close to rivers or creeks&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;Alder vs Birch:&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Property&lt;/th&gt; &lt;th&gt;Birch&lt;/th&gt; &lt;th&gt;Alder&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Leaf border&lt;/td&gt; &lt;td&gt;heavy toothed&lt;/td&gt; &lt;td&gt;sparsely toothed&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Leaf form&lt;/td&gt; &lt;td&gt;rhomboidal&lt;/td&gt; &lt;td&gt;rounded&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Sticky leafs&lt;/td&gt; &lt;td&gt;no&lt;/td&gt; &lt;td&gt;yes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Where they grow&lt;/td&gt; &lt;td&gt;very close to each other&lt;/td&gt; &lt;td&gt;close to rivers or creeks&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;p&gt;Beech vs Birch:&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Property&lt;/th&gt; &lt;th&gt;Beech&lt;/th&gt; &lt;th&gt;Birch&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;Leaf border&lt;/td&gt; &lt;td&gt;flat&lt;/td&gt; &lt;td&gt;heavy toothed&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Leaf form&lt;/td&gt; &lt;td&gt;elliptic&lt;/td&gt; &lt;td&gt;rhomboidal&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Size&lt;/td&gt; &lt;td&gt;30-45m&lt;/td&gt; &lt;td&gt;10-15m (in Europe)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Same colour both sides&lt;/td&gt; &lt;td&gt;no (darker and glossy up)&lt;/td&gt; &lt;td&gt;yes&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Where they grow&lt;/td&gt; &lt;td&gt;everywhere&lt;/td&gt; &lt;td&gt;very close to each other&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/li&gt; &lt;/ul&gt; &lt;aside class=&#34;md-source-file&#34;&gt; &lt;span class=&#34;md-source-file__fact&#34;&gt; &lt;span class=&#34;md-icon&#34; title=&#34;Last update&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M21 13.1c-.1 0-.3.1-.4.2l-1 1 2.1 2.1 1-1c.2-.2.2-.6 0-.8l-1.3-1.3c-.1-.1-.2-.2-.4-.2m-1.9 1.8-6.1 6V23h2.1l6.1-6.1zM12.5 7v5.2l4 2.4-1 1L11 13V7zM11 21.9c-5.1-.5-9-4.8-9-9.9C2 6.5 6.5 2 12 2c5.3 0 9.6 4.1 10 9.3-.3-.1-.6-.2-1-.2s-.7.1-1 .2C19.6 7.2 16.2 4 12 4c-4.4 0-8 3.6-8 8 0 4.1 3.1 7.5 7.1 7.9l-.1.2z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/span&gt; &lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-timeago&#34;&gt;&lt;span class=&#34;timeago&#34; datetime=&#34;2024-11-27T15:36:58+00:00&#34; locale=&#34;en&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-iso_date&#34;&gt;2024-11-27&lt;/span&gt; &lt;/span&gt; &lt;/aside&gt; &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2022/</link>
      <pubDate>2024-11-27 15:36:58+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/yearly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2022/</guid>
      
    </item>
    
    <item><title>2021</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt;  &lt;h2 id=&#34;introduction&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Simplify the landing page text.&lt;/li&gt; &lt;li&gt;Reorganization: Merge the Meta article into the index.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;projects&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/&#34;&gt;Projects&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#mkdocs-newsletter&#34;&gt;Add mkdocs-newsletter as a dormant plant.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;MkDocs plugin to show the changes of documentation repositories in a user friendly format, at the same time that it&#39;s easy for the authors to maintain.&lt;/p&gt; &lt;p&gt;It creates daily, weekly, monthly and yearly newsletter articles with the changes of each period. Those pages, stored under the &lt;code&gt;Newsletters&lt;/code&gt; section, are filled with the changes extracted from the commit messages of the git history. The changes are grouped by categories, subcategories and then by file using the order of the site&#39;s navigation structure. RSS feeds are also created for each newsletter type, so it&#39;s easy for people to keep updated with the evolution of the site.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Update and reorganize projects.&lt;/p&gt; &lt;p&gt;Following the &lt;a href=&#34;https://lyz-code.github.io/blue-book/digital_garden/&#34;&gt;digital garden&lt;/a&gt; metaphor&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#seeds&#34;&gt;Merge the wish_list article into the projects.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Add seed to follow the updates of software.&lt;/li&gt; &lt;li&gt;New: Add seed to automatically update the dockers of maintained services.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain the updates on the repository-orm project.&lt;/p&gt; &lt;p&gt;In the latest version &lt;code&gt;0.2.0&lt;/code&gt;, we added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for the &lt;a href=&#34;https://lyz-code.github.io/repository-orm/tinydb_repository/&#34;&gt;TinyDB repository&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Support for regular expressions in the &lt;code&gt;search&lt;/code&gt; method.&lt;/li&gt; &lt;li&gt;Easier repository loading with &lt;code&gt;load_repository&lt;/code&gt; function.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add a link to the meilisearch &lt;a href=&#34;https://blog.meilisearch.com/&#34;&gt;blog&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Create the quantified self project.&lt;/p&gt; &lt;p&gt;With links to the two starting points &lt;a href=&#34;https://beepb00p.xyz/hpi.html&#34;&gt;HPI&lt;/a&gt; and &lt;a href=&#34;https://github.com/bionic-dev/bionic&#34;&gt;bionic&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#automate-email-management&#34;&gt;Sketch how to automate repetitive tasks prompted by email events.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Most of the emails I receive require repetitive actions that can be automated, I&#39;ve stumbled upon &lt;a href=&#34;https://notmuchmail.org/&#34;&gt;notmuchmail&lt;/a&gt;, which looks very promising. A friend suggested to use &lt;a href=&#34;https://afew.readthedocs.io/en/latest/&#34;&gt;afew&lt;/a&gt; for tagging, and I&#39;d probably use &lt;a href=&#34;https://github.com/pazz/alot&#34;&gt;alot&lt;/a&gt; to interact with the system (and finally be able to use email from the cli).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#quantified-self&#34;&gt;Add interesting interface.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For the interface &lt;a href=&#34;https://github.com/adri/memex&#34;&gt;adri&#39;s memex&lt;/a&gt; looks awesome! It&#39;s inspired in the Andrew Louis &lt;a href=&#34;https://www.youtube.com/watch?v=DFWxvQn4cf8&amp;amp;t=1616s&#34;&gt;talk Building a Memex&lt;/a&gt; whose &lt;a href=&#34;https://hyfen.net/memex/&#34;&gt;blog posts&lt;/a&gt; seems to be a gold mine.&lt;/p&gt; &lt;p&gt;Also look at &lt;a href=&#34;https://github.com/hpi/hpi&#34;&gt;hpi&#39;s compilation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#improve-the-way-of-launching-applications-with-i3wm&#34;&gt;Sketch how to improve the launching of applications with i3wm.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In the past I tried installing &lt;a href=&#34;https://github.com/davatorium/rofi&#34;&gt;rofi&lt;/a&gt; without success, I should try again. If the default features are not enough, check &lt;a href=&#34;https://github.com/adi1090x/rofi&#34;&gt;adi1090x&#39;s custom resources&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#repository-orm&#34;&gt;Show the changes of repository-orm 0.3.1.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;+* Add &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; methods to the repositories. +* Make entity &lt;code&gt;id_&lt;/code&gt; definition optional. +* add &lt;code&gt;_model_name&lt;/code&gt; attribute to entities.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#quantified-self&#34;&gt;Add woop awesome quantified self resources to the research list.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#migrate-software-bug-tracker-to-a-vendor-free-one&#34;&gt;Add project to migrate software bug tracker to a vendor free one like &lt;code&gt;git-bug&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#improve-the-notification-management-in-linux&#34;&gt;Improve the notification management in Linux.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Create new seed project to be able to group and silence the notifications under a custom logic. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If I want to focus on a task, only show the most important ones.&lt;/li&gt; &lt;li&gt;Only show alerts once every X minutes. Or define that I want to receive them the first 10 minutes of every hour.&lt;/li&gt; &lt;li&gt;If I&#39;m not working, silence all work alerts.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#improve-the-hard-drive-monitor-system&#34;&gt;Improve the hard drive monitor system.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Create new seed project to use something like &lt;a href=&#34;https://github.com/AnalogJ/scrutiny&#34;&gt;scrutiny&lt;/a&gt; (there&#39;s a &lt;a href=&#34;https://docs.linuxserver.io/images/docker-scrutiny&#34;&gt;linuxserver image&lt;/a&gt;) to collect and display the information. For alerts, use one of their &lt;a href=&#34;https://github.com/AnalogJ/scrutiny#notifications&#34;&gt;supported providers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#aggregate-all-notifications&#34;&gt;Aggregate all notifications.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Instead of reading the email, github, gitlab, discourse, reddit notifications, aggregate all in one place and show them to the user in a nice command line interface.&lt;/p&gt; &lt;p&gt;For the aggregator server, my first choice would be &lt;a href=&#34;https://gotify.net/&#34;&gt;gotify&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#faker-optional&#34;&gt;Add faker-optional to the dormant plant projects.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#other&#34;&gt;Add seedling project to create factoryboy factories from pydantic models automatically.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#inbox-management&#34;&gt;Explain the idea of how to improve the record of ideas, tasks,.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: Add git-bug as an interesting distributed issue tracker.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#improve-the-reliability-of-the-open-science-collections&#34;&gt;Add the Improve the reliability of the Open Science collections project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The current &lt;a href=&#34;https://lyz-code.github.io/blue-book/free_knowledge/&#34;&gt;free knowledge efforts&lt;/a&gt;: are based on the health of a collection of torrents. This project aims to create a command line tool or service that makes it easier to automate the seeding of ill torrents.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#monitor-and-notify-on-disk-prices&#34;&gt;Add the Monitor and notify on disk prices project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://diskprices.com/&#34;&gt;Diskprices.com&lt;/a&gt; sorts the prices of the disks on the different amazon sites based on many filters. It will be interesting to have a service that monitors the data on this site and alerts the user once there is a deal that matches its criteria.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#automating-computer-file-management&#34;&gt;Move the automation of computer file management project to the projects page.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Reorganization: Move the dying projects below the seeds as they are less important.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#self-hosted-map&#34;&gt;Introduce seedling self-hosted map project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I love maps, as well as traveling and hiking. This project aims to create a web interface that let&#39;s me interact with the data gathered throughout my life. I&#39;d like to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Browse the waypoints and routes that I&#39;ve done.&lt;/li&gt; &lt;li&gt;Create routes and export the gpx.&lt;/li&gt; &lt;li&gt;Be able to search through the data&lt;/li&gt; &lt;li&gt;Plan trips&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#switch-to-a-better-browser&#34;&gt;Introduce the seed project to.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#life&#34;&gt;Add the Life seedling project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Life is a real time sandbox role game where you play as yourself surviving in today&#39;s world.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#bruty&#34;&gt;Add bruty to the dormant plant projects.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lyz-code/bruty&#34;&gt;bruty&lt;/a&gt; is a Python program to bruteforce dynamic web applications with Selenium.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add rsarai hq to interesting sources for lifelogging.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#pynbox&#34;&gt;Introduce pynbox the inbox management tool.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/pynbox&#34;&gt;Pynbox&lt;/a&gt; is a tool to improve the management of ideas, tasks, references, suggestions when I&#39;m not in front of the computer. Right now I&#39;ve got Markor for Android to register these quicknotes, but the reality is that I don&#39;t act upon them, so it&#39;s just a log of tasks that never get done, and ideas, references and suggestions that aren&#39;t registered in my knowledge or media management systems.&lt;/p&gt; &lt;p&gt;On the computer there are also cases of tasks that are not worth registering in the task management system, or ideas that I get at a moment but don&#39;t have time to process at the moment.&lt;/p&gt; &lt;p&gt;The idea then is to automatically sync the Android quicknote with syncthing, and have a special format for the file that allows &lt;a href=&#34;https://lyz-code.github.io/pynbox&#34;&gt;&lt;code&gt;pynbox&lt;/code&gt;&lt;/a&gt; to extract the elements from that file to the &#34;inbox system&#34;. For example: + &lt;/p&gt; &lt;p&gt;Gets introduced in the &#34;inbox system&#34; as a task, a TV suggestion and an idea.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce nyxt as a solution for a better browser.&lt;/p&gt; &lt;p&gt;I&#39;ve just stumbled upon &lt;a href=&#34;https://nyxt.atlas.engineer/&#34;&gt;nyxt&lt;/a&gt; (&lt;a href=&#34;https://github.com/atlas-engineer/nyxt&#34;&gt;code&lt;/a&gt;), and it looks superb.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#shared-accounting&#34;&gt;Introduce the shared accounting seed project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I use &lt;a href=&#34;https://lyz-code.github.io/blue-book/beancount/&#34;&gt;beancount&lt;/a&gt; for my personal accounting, I&#39;d like to have a system that integrates more less easily with beancount and let&#39;s do a shared accounting with other people, for example in trips. I&#39;ve used &lt;a href=&#34;https://settleup.io/&#34;&gt;settle up&lt;/a&gt; in the past but it requires access to their servers, and an account linked to google, facebook or one you register in their servers.&lt;/p&gt; &lt;p&gt;I&#39;ve looked at &lt;a href=&#34;https://github.com/nymanjens/facto&#34;&gt;facto&lt;/a&gt; but it uses a logic that doesn&#39;t apply to my case, it does a heavy use on a common account, instead +of minimizing the transactions between the people. I also tried &lt;a href=&#34;https://github.com/bertvandepoel/tabby#installation&#34;&gt;tabby&lt;/a&gt;, even though they still &lt;a href=&#34;https://github.com/bertvandepoel/tabby/issues/13&#34;&gt;don&#39;t support Docker&lt;/a&gt;, but it doesn&#39;t suit my case either :(.&lt;/p&gt; &lt;p&gt;Until a new solution shows up, I&#39;ll go with &lt;a href=&#34;https://github.com/koelleChristian/trickytripper&#34;&gt;Tricky Tripper&lt;/a&gt; available in F-Droid, and manage the expenses myself and periodically send the html reports to the rest of the group.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add quickwit as an interesting database solution for personal knowledge search engine.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#automate-email-management&#34;&gt;Promote the automation of email management project to seedling.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#pomodoro-command-line&#34;&gt;Introduce the pomodoro command line seed project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Command line to help with the &lt;a href=&#34;life_planning.md#pomodoro&#34;&gt;pomodoro workflow&lt;/a&gt;, besides the basic stuff it will interact with the task manager, &lt;a href=&#34;https://lyz-code.github.io/blue-book/activitywatch/&#34;&gt;activitywatch&lt;/a&gt; and the notifications system.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#create-an-ordered-list-of-digital-gardens&#34;&gt;Introduce the ordered list of digital gardens project.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;a href=&#34;https://github.com/best-of-lists/best-of&#34;&gt;best-of-lists&lt;/a&gt; to create an awesome list of digital gardens.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Clean up deprecated projects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/#self-host-a-routing-web-application&#34;&gt;Add seed to self host a routing web application.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Host and play around with &lt;a href=&#34;https://github.com/abrensch/brouter&#34;&gt;brouter&lt;/a&gt; and &lt;a href=&#34;https://github.com/nrenner/brouter-web&#34;&gt;brouter-web&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;activism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/anonymous_feedback/&#34;&gt;Activism&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the anonymous feedback tool to improve diversity, equity and inclusion in an organization.&lt;/p&gt; &lt;p&gt;Anonymous Feedback is a communication tool where people share feedback to teammates or other organizational members while protecting their identities.&lt;/p&gt; &lt;p&gt;Until the safe space is built where direct feedback is viable, anonymous feedback gives these employees a mechanism to raise their concerns, practice their feedback-giving skills, test the waters, and understand how people perceive their constructive (and sometimes critical) opinions, thus building the needed trust.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Define Diversity, Equity and Inclusion.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Diversity&lt;/em&gt; is the representation and acknowledgement of the multitudes of identities, experiences, and ways of moving through the world. This includes—but is not limited to—ability, age, citizenship status, criminal record and/or incarceration, educational attainment, ethnicity, gender, geographical location, language, nationality, political affiliation, religion, race, sexuality, socioeconomic status, and veteran status. Further, we recognize that each individual&#39;s experience is informed by intersections across multiple identities.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Equity&lt;/em&gt; seeks to ensure respect and equal opportunity for all, using all resources and tools to elevate the voices of under-represented and/or disadvantaged groups.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Inclusion&lt;/em&gt; is fostering an environment in which people of all identities are welcome, valued, and supported. An inclusive organization solicits, listens to, learns from, and acts on the contributions of all its stakeholders.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Anti-transphobia.&lt;/p&gt; &lt;p&gt;Anti-transphobia being reductionist is the opposition to the collection of ideas and phenomena that encompass a range of negative attitudes, feelings or actions towards transgender people or transness in general. Transphobia can include fear, aversion, hatred, violence, anger, or discomfort felt or expressed towards people who do not conform to social gender expectations. It is often expressed alongside homophobic views and hence is often considered an aspect of homophobia.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/antitransphobia/#terf&#34;&gt;Introduce arguments against terf ideology.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/TERF&#34;&gt;TERF&lt;/a&gt; is an acronym for &lt;em&gt;trans-exclusionary radical feminist&lt;/em&gt;. The term originally applied to the minority of feminists that expressed transphobic sentiments such as the rejection of the assertion that trans women are women, the exclusion of trans women from women&#39;s spaces, and opposition to transgender rights legislation. The meaning has since expanded to refer more broadly to people with trans-exclusionary views who may have no involvement with radical feminism.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;antifascism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascism/&#34;&gt;Antifascism&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce antifascism.&lt;/p&gt; &lt;p&gt;Antifascism is a method of politics, a locus of individual and group self-indentification, it&#39;s a transnational movement that adapted preexisting socialist, anarchist, and communist currents to a sudden need to react to the fascist menace (&lt;a href=&#34;#references&#34;&gt;Mark p. 11&lt;/a&gt;). It&#39;s based on the idea that &lt;a href=&#34;#how-to-identify-fascism&#34;&gt;any oppression form&lt;/a&gt; can&#39;t be allowed, and should be actively fought with whatever means are necessary.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;antifascist-actions&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascist_actions/&#34;&gt;Antifascist Actions&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/antifascist_actions/#a-fake-company-and-five-million-recycled-flyers&#34;&gt;A fake company and five million recycled flyers.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A group of artists belonging to the &lt;a href=&#34;https://politicalbeauty.com/&#34;&gt;Center for political beauty&lt;/a&gt; created a fake company &lt;a href=&#34;https://www.flyerservice-hahn.de/&#34;&gt;Flyerservice Hahn&lt;/a&gt; and convinced more than 80 regional sections of the far right party AfD to hire them to deliver their electoral propaganda.&lt;/p&gt; &lt;p&gt;They gathered five million flyers, with a total weight of 72 tons. They justify that they wouldn&#39;t be able to lie to the people, so they did nothing in the broader sense of the word. They declared that they are the &lt;a href=&#34;https://www.youtube.com/watch?v=qcBVq-PtrpY&#34;&gt;&#34;world wide leader in the non-delivery of nazi propaganda&#34;&lt;/a&gt;. At the start of the electoral campaign, they went to the AfD stands, and they let their members to give them flyers the throw them to the closest bin. &#34;It&#39;s something that any citizen can freely do, we have only industrialized the process&#34;.&lt;/p&gt; &lt;p&gt;They&#39;ve done a &lt;a href=&#34;https://afd-muell.de/&#34;&gt;crowdfunding&lt;/a&gt; to fund the legal process that may result.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;feminism&#34;&gt;Feminism&lt;/h3&gt; &lt;h4 id=&#34;privileges&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/feminism/privileges/&#34;&gt;Privileges&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Feminist analysis of privileges and rights.&lt;/p&gt; &lt;p&gt;Privileges are a group of special structural benefits, social advantages, that a group holds over another. So they are elements that should be removed from our lives.&lt;/p&gt; &lt;p&gt;Some of the topics included are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;What&#39;s the difference between privilege and right&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/feminism/privileges/#what-can-we-do-to-fight-the-privileges&#34;&gt;What can we do to fight the privileges?&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;free-knowledge&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/free_knowledge/&#34;&gt;Free Knowledge&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce how to contribute to the free knowledge initiative.&lt;/p&gt; &lt;p&gt;One of the early principles of the internet has been to make knowledge free to everyone. &lt;a href=&#34;https://en.wikipedia.org/wiki/Alexandra_Elbakyan&#34;&gt;Alexandra Elbakyan&lt;/a&gt; of &lt;a href=&#34;https://sci-hub.do/&#34;&gt;Sci-Hub&lt;/a&gt;, bookwarrior of &lt;a href=&#34;https://libgen.fun/&#34;&gt;Library Genesis&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Aaron_Swartz&#34;&gt;Aaron Swartz&lt;/a&gt;, and countless unnamed others have fought to free science from the grips of for-profit publishers. Today, they do it working in hiding, alone, without acknowledgment, in fear of imprisonment, and even now wiretapped by the FBI. They sacrifice everything for one vision: Open Science.&lt;/p&gt; &lt;p&gt;If you want to know how to contribute, check the &lt;a href=&#34;https://lyz-code.github.io/blue-book/free_knowledge/&#34;&gt;article&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/life_management/&#34;&gt;Life Management&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Reorganization: Split the life automation article into life management and process automation.&lt;/p&gt; &lt;p&gt;I understand life management as the act of analyzing yourself and your interactions with the world to define processes and automations that shape the way to efficiently achieve your goals.&lt;/p&gt; &lt;p&gt;I understand process automation as the act of analyzing yourself and your interactions with the world to find the way to reduce the time or willpower spent on your life processes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;time-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/&#34;&gt;Time Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the time management concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Time_management&#34;&gt;Time management&lt;/a&gt; is the process of planning and exercising conscious control of time spent on specific activities, especially to increase effectiveness, efficiency, and productivity. It involves a juggling act of various demands upon a person relating to work, social life, family, hobbies, personal interests, and commitments with the finiteness of time. Using time effectively gives the person &#34;choice&#34; on spending or managing activities at their own time and expediency.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Start analyzing the ways to reduce the time spent doing unproductive tasks.&lt;/p&gt; &lt;p&gt;By &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#minimize-the-context-switches&#34;&gt;minimizing the context switches&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#interruption-management&#34;&gt;managing the interruptions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#tool-management&#34;&gt;Explain how to improve your efficiency by better using your everyday tools.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add two more ways to avoid loosing time in unproductive tasks.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#avoid-lost-time-doing-nothing&#34;&gt;Avoid lost time doing nothing&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#fix-your-environment&#34;&gt;Fix your environment&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#meetings&#34;&gt;Explain how to manage meetings efficiently.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#improve-your-state&#34;&gt;Explain how to improve efficiency by taking care of yourself.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/time_management/#don&#39;t-wait,-switch-task&#34;&gt;Explain how to prevent blocks by efficiently switching mental processes.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;task-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/action_management/&#34;&gt;Task Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the task management concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Task_management&#34;&gt;Task management&lt;/a&gt; is the process of managing a task through its life cycle. It involves planning, testing, tracking, and reporting. Task management can help either individual achieve goals, or groups of individuals collaborate and share knowledge for the accomplishment of collective goals.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Introduce the main task management tools.&lt;/p&gt; &lt;p&gt;The &lt;a href=&#34;https://lyz-code.github.io/blue-book/action_management/#inbox&#34;&gt;inbox&lt;/a&gt; does not refer only to your e-mail inbox. It is a broader concept that includes all the elements you have collected in different ways: tasks you have to do, ideas you have thought of, notes, bills, business cards, etc…&lt;/p&gt; &lt;p&gt;The &lt;a href=&#34;https://lyz-code.github.io/blue-book/action_management/#task-manager&#34;&gt;task manager&lt;/a&gt; tool to make your interaction with the tasks easier. You can start with the &lt;a href=&#34;https://lyz-code.github.io/blue-book/action_management/#the-simplest-task-manager&#34;&gt;simplest task manager&lt;/a&gt;, a markdown file in your computer with a list of tasks to do. Annotate only the actionable tasks that you need to do today, otherwise it can quickly grow to be unmanageable.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add the benefits when you do task management well, and the side effects if you do it wrong.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Improvement: Add a small guide on how to introduce yourself into task management.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;task-management-workflows&#34;&gt;&lt;a href=&#34;life_planning.md&#34;&gt;Task Management Workflows&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the main task management workflows.&lt;/p&gt; &lt;p&gt;Task management can be done at different levels. All of them help you in different ways to reduce the mental load, each also gives you extra benefits that can&#39;t be gained by the others. Going from lowest to highest abstraction level we have:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Pomodoro.&lt;/li&gt; &lt;li&gt;Task plan.&lt;/li&gt; &lt;li&gt;Day plan.&lt;/li&gt; &lt;li&gt;Week plan.&lt;/li&gt; &lt;li&gt;Month plan.&lt;/li&gt; &lt;li&gt;Semester plan.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the commit I&#39;ve detailed the &lt;a href=&#34;life_planning.md#pomodoro&#34;&gt;Pomodoro technique&lt;/a&gt; and the &lt;a href=&#34;life_planning.md#task-plan&#34;&gt;task&lt;/a&gt;, &lt;a href=&#34;life_planning.md#day-plan&#34;&gt;day&lt;/a&gt; and &lt;a href=&#34;life_planning.md#week-plan&#34;&gt;week&lt;/a&gt; plans.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;life_planning.md#hype-flow-versus-a-defined-plan&#34;&gt;Explain the difference of surfing the hype flow versus following a defined plan.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;interruption-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/interruption_management/&#34;&gt;Interruption Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the interruption management concept.&lt;/p&gt; &lt;p&gt;Interruption management is the &lt;a href=&#34;https://lyz-code.github.io/blue-book/life_management/&#34;&gt;life management&lt;/a&gt; area that gathers the processes to minimize the time and willpower toll consumed by interruptions.&lt;/p&gt; &lt;p&gt;The article proposes a way to analyze your existent interruptions and define how can you improve your interaction with them. I&#39;ve applied it both to my &lt;a href=&#34;https://lyz-code.github.io/blue-book/work_interruption_analysis/&#34;&gt;work&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/personal_interruption_analysis/&#34;&gt;personal&lt;/a&gt; interruptions.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/interruption_management/#workflow&#34;&gt;Explain what to do once you have the interruption analysis.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;work-interruption-analysis&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/work_interruption_analysis/&#34;&gt;Work Interruption Analysis&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Improvement: Add analysis of instant message interruptions.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;personal-interruption-analysis&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/personal_interruption_analysis/&#34;&gt;Personal Interruption Analysis&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Improvement: Add analysis of instant message interruptions.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;money-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/money_management/&#34;&gt;Money Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Reorganization: Move the accounting automation to money management.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;email-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/email_management/&#34;&gt;Email Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how I configure and interact with email efficiently.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;email-automation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/email_automation/&#34;&gt;Email Automation&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how setup an infrastructure to automate.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;music-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/music_management/&#34;&gt;Music Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce how I manage my music library.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;musicbrainz&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/musicbrainz/&#34;&gt;MusicBrainz&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to contribute to MusicBrainz.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://musicbrainz.org&#34;&gt;MusicBrainz&lt;/a&gt; is an open music encyclopedia that collects music metadata and makes it available to the public.&lt;/p&gt; &lt;p&gt;MusicBrainz aims to be:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The ultimate source of music information by allowing anyone to contribute and releasing the data under open licenses.&lt;/li&gt; &lt;li&gt;The universal lingua franca for music by providing a reliable and unambiguous form of music identification, enabling both people and machines to have meaningful conversations about music.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Like Wikipedia, MusicBrainz is maintained by a global community of users and we want everyone — including you — to &lt;a href=&#34;https://musicbrainz.org/doc/How_to_Contribute&#34;&gt;participate and contribute&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;book-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/book_management/&#34;&gt;Book Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the book management concept.&lt;/p&gt; &lt;p&gt;Book management is the set of systems and processes to get and categorize books so it&#39;s easy to browse and discover new content. It involves the next actions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Automatically index and download metadata of new books.&lt;/li&gt; &lt;li&gt;Notify the user when a new book is added.&lt;/li&gt; &lt;li&gt;Monitor the books of an author, and get them once they are released.&lt;/li&gt; &lt;li&gt;Send books to the e-reader.&lt;/li&gt; &lt;li&gt;A nice interface to browse the existent library, with the possibility of filtering by author, genre, years, tags or series.&lt;/li&gt; &lt;li&gt;An interface to preview or read the items.&lt;/li&gt; &lt;li&gt;An interface to rate and review library items.&lt;/li&gt; &lt;li&gt;An interface to discover new content based on the ratings and item metadata.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I haven&#39;t yet found a single piece of software that fulfills all these needs, in the article I tell you about &lt;a href=&#34;https://readarr.com/&#34;&gt;Readarr&lt;/a&gt;, &lt;a href=&#34;https://github.com/janeczku/calibre-web&#34;&gt;Calibre-web&lt;/a&gt;, [calibre]((&lt;a href=&#34;https://manual.calibre-ebook.com/&#34;&gt;https://manual.calibre-ebook.com/&lt;/a&gt;), &lt;a href=&#34;https://getpolarized.io/&#34;&gt;Polar bookself&lt;/a&gt;, &lt;a href=&#34;http://www.gcstar.org/&#34;&gt;GCStar&lt;/a&gt;, and how they interact with each other.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add link to the calibre-web kobo integration project.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;map-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/map_management/&#34;&gt;Map Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How I manage maps in my life.&lt;/p&gt; &lt;p&gt;For navigating on the go, I strongly recommend &lt;a href=&#34;https://lyz-code.github.io/blue-book/osmand/&#34;&gt;OSMand+&lt;/a&gt;, for browsing maps in the browser, use &lt;a href=&#34;https://osm.org&#34;&gt;OpenStreetMaps&lt;/a&gt; or &lt;a href=&#34;https://www.cyclosm.org&#34;&gt;CyclOSM&lt;/a&gt; if you want to move by bike.&lt;/p&gt; &lt;p&gt;To plan routes, you can use &lt;a href=&#34;https://brouter.de/brouter-web&#34;&gt;brouter.de&lt;/a&gt;, it works perfectly for bikes. For hiking is awesome too, it shows you a lot of data needed to plan your tracks (check the settings on the right). If you want to invest a little more time, you can even set your &lt;a href=&#34;https://github.com/poutnikl/Brouter-profiles/wiki/Hiking-profiles&#34;&gt;personalize profiles&lt;/a&gt;, so that the routing algorithm prioritizes the routes to your desires. It&#39;s based on &lt;a href=&#34;https://github.com/abrensch/brouter&#34;&gt;brouter&lt;/a&gt; and both can be &lt;a href=&#34;https://github.com/nrenner/brouter-web&#34;&gt;self-hosted&lt;/a&gt;, although &lt;a href=&#34;https://github.com/abrensch/brouter/issues/359&#34;&gt;brouter does not yet use Docker&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;instant-messages-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/instant_messages_management/&#34;&gt;Instant Messages Management&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how I configure and interact with chat applications efficiently.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;process-automation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/process_automation/&#34;&gt;Process Automation&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Improvement: Add xkcd comics that gather the essence and pitfalls of process automation.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;virtual-assistant&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/virtual_assistant/&#34;&gt;Virtual Assistant&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce project with kalliope.&lt;/li&gt; &lt;li&gt;New: Explain the Speech-To-Text open source solutions.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;sleep&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/&#34;&gt;Sleep&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/#the-sleep-cycle&#34;&gt;Explain the sleep cycle.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Humans cycle through two types of sleep in a regular pattern throughout the night with a period of 90 minutes. They were called non-rapid eye movement (NREM) and rapid eye movement (REM).&lt;/p&gt; &lt;p&gt;I answer the questions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;What is the period of the REM/NREM cycle?&lt;/li&gt; &lt;li&gt;What happens to your body in REM and NREM phases?&lt;/li&gt; &lt;li&gt;How does the ratio of REM/NREM changes throughout the night? with a possible explanation.&lt;/li&gt; &lt;li&gt;Why sleeping 6 hours can make you loose up to 90% of your REM or NREM phases?&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/#sleeping-time-and-sense-distortions&#34;&gt;Explain sleeping time and sense distortions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Answer the questions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Why time feels longer in our dreams?&lt;/li&gt; &lt;li&gt;How do we loose awareness of the outside world when sleeping?&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;teeth&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/teeth/&#34;&gt;Teeth&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to take care of your teeth.&lt;/p&gt; &lt;p&gt;A full guide on why should you take care of your teeth, the description on how the basic oral diseases work, why and how to brush your teeth, floss and usage of mouthwash&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Recommend a regular clean instead of a deep clean.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;deep-cleaning&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/teeth_deep_cleaning/&#34;&gt;Deep cleaning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain what a deep cleaning is and when should you do it.&lt;/p&gt; &lt;p&gt;Analyze the reasons why would you need to do this procedure, how it works, when you need to do it, side effects and scientific evidences of it&#39;s effectiveness.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;fitness-tracker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fitness_band/&#34;&gt;Fitness Tracker&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the fitness band in your life automation.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Activity_tracker&#34;&gt;Fitness tracker&lt;/a&gt; or activity trackers are devices or applications for monitoring and tracking fitness-related metrics such as distance walked or run, calorie consumption, and in some cases heartbeat. It is a type of wearable computer.&lt;/p&gt; &lt;p&gt;Explain also why it&#39;s interesting&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Discovery of wasp-os and Colmi P8.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/daniel-thompson/wasp-os&#34;&gt;wasp-os&lt;/a&gt; is an open source firmware for smart watches that are based on the nRF52 family of microcontrollers. Fully supported by &lt;a href=&#34;https://lyz-code.github.io/blue-book/gadgetbridge/&#34;&gt;gadgetbridge&lt;/a&gt;, Wasp-os features full heart rate monitoring and step counting support together with multiple clock faces, a stopwatch, an alarm clock, a countdown timer, a calculator and lots of other games and utilities. All of this, and still with access to the MicroPython REPL for interactive tweaking, development and testing.&lt;/p&gt; &lt;p&gt;One of the supported devices, the &lt;a href=&#34;https://wasp-os.readthedocs.io/en/latest/install.html#colmi-p8&#34;&gt;Colmi P8&lt;/a&gt;, looks really good.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;amazfit-band-5&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/amazfit_band_5/&#34;&gt;Amazfit Band 5&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add insights on sleep detection.&lt;/p&gt; &lt;p&gt;The sleep tracking using Gadgetbridge is not &lt;a href=&#34;https://codeberg.org/Freeyourgadget/Gadgetbridge/wiki/Huami-Deep-Sleep-Detection&#34;&gt;good at all&lt;/a&gt;. After two nights, the band has not been able to detect when I woke in the middle of the night, or when I really woke up, as I usually stay in the bed for a time before standing up. I&#39;ll try with the proprietary application soon and compare results.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to upgrade the firmware.&lt;/p&gt; &lt;p&gt;Gadgetbridge people have a &lt;a href=&#34;https://codeberg.org/Freeyourgadget/Gadgetbridge/wiki/Amazfit-Band-5-Firmware-Update&#34;&gt;guide on how to upgrade the firmware&lt;/a&gt;, you need to get the firmware from the &lt;a href=&#34;https://geekdoing.com/threads/amazfit-band-5-original-firmwares-resources-fonts.2331/&#34;&gt;geek doing forum&lt;/a&gt; though, so it is interesting to create an account and watch the post.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add insights on sleep tracking.&lt;/p&gt; &lt;p&gt;You can&#39;t use the Withings sleep analyzer without their app (as expected), maybe the &lt;a href=&#34;https://github.com/karlicoss/HPI/blob/master/my/emfit/__init__.py&#34;&gt;Emfit QS&lt;/a&gt; is the way to go.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vuejs/&#34;&gt;Coding&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Vue.js.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://vuejs.org&#34;&gt;Vue.js&lt;/a&gt; is a progressive framework for building user interfaces.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;generic-coding-practices&#34;&gt;Generic Coding Practices&lt;/h3&gt; &lt;h4 id=&#34;program-versioning&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/&#34;&gt;Program Versioning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Define how to use versioning in software.&lt;/p&gt; &lt;p&gt;A &lt;strong&gt;long&lt;/strong&gt; article on how to use versioning both as a developer and as a consumer. It includes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#deciding-what-version-system-to-use-for-your-programs&#34;&gt;Deciding what version system to use for your programs&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#how-to-evolve-your-code-version&#34;&gt;How to evolve your code version&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#deciding-how-to-manage-the-versions-of-your-dependencies&#34;&gt;Deciding how to manage the versions of your dependencies&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;A huge rant on &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#upper-version-pinning&#34;&gt;Upper version pinning&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#lower-version-pinning&#34;&gt;When to use lower version pinning&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#automatically-upgrade-and-test-your-dependencies&#34;&gt;How to automatically upgrade and test your dependencies&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#monitor-your-dependencies-evolution&#34;&gt;Monitor your dependencies evolution&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;keep-a-changelog&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/semantic_versioning/&#34;&gt;Keep a Changelog&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Changelog practice.&lt;/p&gt; &lt;p&gt;A changelog is a file which contains a curated, chronologically ordered list of notable changes for each version of a project.&lt;/p&gt; &lt;p&gt;It&#39;s purpose is to make it easier for users and contributors to see precisely what notable changes have been made between each release (or version) of the project.&lt;/p&gt; &lt;p&gt;In the article we added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/changelog/#changelog-guidelines&#34;&gt;Guidelines&lt;/a&gt; on how to build good changelogs&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/changelog/#how-to-reduce-the-effort-required-to-maintain-a-changelog&#34;&gt;How to reduce the effort required to maintain a changelog&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Semantic Versioning.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; is a way to define your program&#39;s version based on the type of changes you&#39;ve introduced. It&#39;s defined as a three-number string (separated with a period) in the format of &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Also included in the article is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/semantic_versioning/#when-to-do-a-major-release&#34;&gt;When to do a major release&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/semantic_versioning/#semantic-versioning-system-problems&#34;&gt;Semantic versioning system problems&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;calendar-versioning&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/documentation/&#34;&gt;Calendar Versioning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Start explaining how to write good documentation for a software project.&lt;/p&gt; &lt;p&gt;It doesn&#39;t matter how good your program is, because if its documentation is not good enough, people will not use it.&lt;/p&gt; &lt;p&gt;People working with software need different kinds of documentation at different times, in different circumstances, so good software documentation needs them all. In this first iteration, I define the five kinds of documentation, and give the ideas to write good introduction and get started sections.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Calendar Versioning.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://calver.org/&#34;&gt;Calendar Versioning&lt;/a&gt; is a versioning convention based on your project&#39;s release calendar, instead of arbitrary numbers.&lt;/p&gt; &lt;p&gt;CalVer suggests version number to be in format of: &lt;code&gt;YEAR.MONTH.sequence&lt;/code&gt;. For example, &lt;code&gt;20.1&lt;/code&gt; indicates a release in 2020 January, while &lt;code&gt;20.5.2&lt;/code&gt; indicates a release that occurred in 2020 May, while the &lt;code&gt;2&lt;/code&gt; indicates this is the third release of the month.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to check if a loop ends completely.&lt;/li&gt; &lt;li&gt;New: Explain how to merge lists and dictionaries.&lt;/li&gt; &lt;li&gt;New: Explain how to create your own exceptions.&lt;/li&gt; &lt;li&gt;New: Add python landing page.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add aiomultiprocess to the list of libraries to test.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/omnilib/aiomultiprocess&#34;&gt;aiomultiprocess&lt;/a&gt;: Presents a simple interface, while running a full AsyncIO event loop on each child process, enabling levels of concurrency never before seen in a Python application. Each child process can execute multiple coroutines at once, limited only by the workload and number of cores available.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python/#how-to-write-good-documentation&#34;&gt;Add interesting links on how to write good documentation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I would like to refactor &lt;a href=&#34;https://documentation.divio.com/introduction/&#34;&gt;divio&#39;s&lt;/a&gt; and &lt;a href=&#34;https://v3.vuejs.org/guide/contributing/writing-guide.html#principles&#34;&gt;Vue&#39;s&lt;/a&gt; guidelines and apply it to my projects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add FastAPI docs as a model to study and follow.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add apprise to the interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/caronc/apprise&#34;&gt;apprise&lt;/a&gt;: Allows you to send a notification to almost all of the most popular notification services available to us today such as: Linux, Telegram, Discord, Slack, Amazon SNS, Gotify, etc. Look at &lt;a href=&#34;https://github.com/caronc/apprise#supported-notifications&#34;&gt;all the supported notifications&lt;/a&gt; &lt;code&gt;(¬º-°)¬&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add kivi and kivimd to the interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://kivy.org/&#34;&gt;kivi&lt;/a&gt; is used to create android/Linux/iOS/Windows applications with python. Use it with &lt;a href=&#34;https://github.com/kivymd/KivyMD&#34;&gt;kivimd&lt;/a&gt; to make it beautiful, check &lt;a href=&#34;https://github.com/HeaTTheatR/Articles&#34;&gt;the examples&lt;/a&gt; and the &lt;a href=&#34;https://kivymd.readthedocs.io/en/latest/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add parso library to interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/davidhalter/parso&#34;&gt;parso&lt;/a&gt; is a library to parse Python code.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add textual as interesting library to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/willmcgugan/textual&#34;&gt;textual&lt;/a&gt;: Textual is a TUI (Text User Interface) framework for Python using Rich as a renderer.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add schedule to interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dbader/schedule&#34;&gt;schedule&lt;/a&gt; is a Python job scheduling for humans. Run Python functions (or any other callable) periodically using a friendly syntax.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add tryceratops to interesting linters to try.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guilatrova/tryceratops&#34;&gt;tryceratops&lt;/a&gt; is a linter of exceptions.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic-field-types&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/&#34;&gt;Pydantic Field Types&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the asyncio library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://docs.python.org/3/library/asyncio.html&#34;&gt;asyncio&lt;/a&gt; is a library to write concurrent code using the async/await syntax.&lt;/p&gt; &lt;p&gt;asyncio is used as a foundation for multiple Python asynchronous frameworks that provide high-performance network and web-servers, database connection libraries, distributed task queues, etc.&lt;/p&gt; &lt;p&gt;asyncio is often a perfect fit for IO-bound and high-level structured network code.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/asyncio/#limit-concurrency&#34;&gt;Limit concurrency.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use &lt;a href=&#34;https://docs.python.org/3/library/asyncio-sync.html#semaphores&#34;&gt;&lt;code&gt;asyncio.Semaphore&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;sem&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asyncio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Semaphore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# work with shared resource&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic_types/#using-constrained-strings-in-list-attributes&#34;&gt;Using constrained strings in list attributes.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Field&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Regex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pydantic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ConstrainedStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;^[0-9a-z_]*$&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pydantic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Regex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;regex&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;abc&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;123&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;asdf&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]})&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pipenv&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/requests_mock/&#34;&gt;Pipenv&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to set cookies and headers in responses.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the AWS SDK library and explain how to test it.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://boto3.amazonaws.com/v1/documentation/api/latest/index.html&#34;&gt;Boto3&lt;/a&gt; is the AWS SDK for Python to create, configure, and manage AWS services, such as Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Simple Storage Service (Amazon S3). The SDK provides an object-oriented API as well as low-level access to AWS services.&lt;/p&gt; &lt;p&gt;For &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#testing&#34;&gt;testing&lt;/a&gt;, try to use &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#moto&#34;&gt;moto&lt;/a&gt;, using the &lt;a href=&#34;https://botocore.amazonaws.com/v1/documentation/api/latest/reference/stubber.html&#34;&gt;Botocore&#39;s stubber&lt;/a&gt; as fallback option.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to test ec2, route53, s3, and rds resources.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to test vpc and auto scaling group resources.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to extract the instance when testing autoscaling groups.&lt;/p&gt; &lt;p&gt;Also track the &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#issues&#34;&gt;issue to add support to launch templates&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#test-security-groups&#34;&gt;Explain how to test security groups.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#test-route53&#34;&gt;Add note that pagination is not yet supported when testing route53.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve &lt;a href=&#34;https://github.com/spulec/moto/issues/3879&#34;&gt;opened an issue&lt;/a&gt; to solve it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#test-iam-users&#34;&gt;Explain how to test IAM users and groups.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Improvement: Monitor motor issue with the &lt;code&gt;cn-north-1&lt;/code&gt; rds and autoscaling endpoints.&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/prompt_toolkit_fullscreen_applications/#testing&#34;&gt;Testing full screen applications.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/prompt_toolkit_fullscreen_applications/#pass-more-than-one-key&#34;&gt;Pass more than one key.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;To map an action to two key presses use &lt;code&gt;kb.add(&#39;g&#39;, &#39;g&#39;)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/prompt_toolkit_fullscreen_applications/#styles&#34;&gt;Add note on how to debug the styles of the components.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Set the style to &lt;code&gt;bg:#dc322f&lt;/code&gt; and it will be highlighted in red.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/prompt_toolkit_fullscreen_applications/#conditional-containers&#34;&gt;How to use Conditional Containers.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;prompt_toolkit.layout&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ConditionalContainer&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;prompt_toolkit.filters.utils&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to_filter&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;show_header&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ConditionalContainer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Label&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;This is an optional text&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_filter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show_header&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the pipenv package manager.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pypa/pipenv&#34;&gt;Pipenv&lt;/a&gt; is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;poetry&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/&#34;&gt;Poetry&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to ignore a linter error and a type error.&lt;/p&gt; &lt;p&gt;With &lt;code&gt;# type: ignore # noqa: W0212&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#allow-any-subclass&#34;&gt;Explain how to define the type hints of functions and methods that use subclasses.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&#39;s a complex topic that has taken me many months to get it right :).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#type-hints-of-generators&#34;&gt;Explain how to write type hints for generator functions.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to log in using pass.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pass&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;show&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;dockerhub&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;login&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--username&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;foo&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--password-stdin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how not to store the credentials in plaintext.&lt;/p&gt; &lt;p&gt;It doesn&#39;t work, don&#39;t go this painful road and assume that docker is broken.&lt;/p&gt; &lt;p&gt;The official steps are horrible, and once you&#39;ve spent two hours debugging them, you &lt;a href=&#34;https://github.com/docker/docker-credential-helpers/issues/154&#34;&gt;won&#39;t be able to push or pull images with your user&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to change the command line help description.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/docker/#how-to-keep-containers-updated&#34;&gt;Explain how to use watchtower to keep docker containers updated.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With &lt;a href=&#34;https://containrrr.dev/watchtower/&#34;&gt;watchtower&lt;/a&gt; you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to run the watchtower checks immediately.&lt;/p&gt; &lt;p&gt;With the &lt;code&gt;--run-once&lt;/code&gt; flag&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/#invoke-other-commands-from-a-command&#34;&gt;Invoke other commands from a command.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This is a pattern that is generally discouraged with Click, but possible nonetheless. For this, you can use the &lt;code&gt;Context.invoke()&lt;/code&gt; or &lt;code&gt;Context.forward()&lt;/code&gt; methods.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#define-a-typevar-with-restrictions&#34;&gt;Define a TypeVar with restrictions.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TypeVar&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;AnyStr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TypeVar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;AnyStr&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/#use-a-constrained-typevar-in-the-definition-of-a-class-attributes&#34;&gt;Use a constrained TypeVar in the definition of a class attributes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you try to use a &lt;code&gt;TypeVar&lt;/code&gt; in the definition of a class attribute:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Model a computer file.&#34;&#34;&#34;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AnyStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# mypy error!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/&#34;&gt;mypy&lt;/a&gt; will complain with &lt;code&gt;Type variable AnyStr is unbound [valid-type]&lt;/code&gt;, to solve it, you need to make the class inherit from the &lt;code&gt;Generic[AnyStr]&lt;/code&gt;.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;File&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Generic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AnyStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]):&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Model a computer file.&#34;&#34;&#34;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AnyStr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Deeply introduce Poetry, a python package manager.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry&#34;&gt;Poetry&lt;/a&gt; is a command line program that helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_poetry/#debugging-why-a-package-is-not-updated-to-the-latest-version&#34;&gt;Debugging why a package is not updated to the latest version.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_poetry/#checking-what-package-is-using-a-dependency&#34;&gt;Checking what package is using a dependency.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_poetry/#configuration&#34;&gt;Try to use &lt;code&gt;pass&lt;/code&gt; as a keyring backend to store the PYPI token.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Warn against upper version pinning.&lt;/p&gt; &lt;p&gt;The main problem is that &lt;code&gt;poetry add&lt;/code&gt; does &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#upper-version-pinning&#34;&gt;upper pinning of dependencies&lt;/a&gt; by default, which is a &lt;strong&gt;really bad idea&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dash&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_logging/&#34;&gt;Dash&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to log python program exceptions better than to a file.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;logging&lt;/code&gt; to write write exceptions and breadcrumbs to a file might not be the best solution because unless you look at it directly most errors will pass unnoticed.&lt;/p&gt; &lt;p&gt;To actively monitor and react to code exceptions use an application monitoring platform like &lt;a href=&#34;https://sentry.io/welcome/&#34;&gt;sentry&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In the article I explain what are the advantages of using this solution and do a comparison between Sentry and &lt;a href=&#34;https://glitchtip.com&#34;&gt;GlitchTip&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/dash/#testing&#34;&gt;Testing Dash applications.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;dash.testing&lt;/code&gt; provides some off-the-rack pytest fixtures and a minimal set of testing APIs with our internal crafted best practices at the integration level. The commit includes a simple example and some guides on how to test Dash application.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_sh/#testing&#34;&gt;Test programs that use &lt;code&gt;sh&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;sh&lt;/code&gt; can be patched in your tests the typical way, with &lt;code&gt;unittest.mock.patch()&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;unittest.mock&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;patch&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sh&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_something&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;

&lt;span class=&#34;nd&#34;&gt;@patch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;sh.pwd&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_something&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;return_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;/&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_something&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;/&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;code-styling&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_code_styling/&#34;&gt;Code Styling&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Don&#39;t use try-except to initialize dictionaries.&lt;/p&gt; &lt;p&gt;Instead of:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;KeyError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setdefault&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the awesome, life saving library &lt;code&gt;pydantic_factories&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Goldziher/pydantic-factories&#34;&gt;Pydantic factories&lt;/a&gt; is a library offers powerful mock data generation capabilities for pydantic based models and dataclasses. It automatically creates &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;FactoryBoy&lt;/a&gt; factories from a &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;pydantic&lt;/a&gt; model.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Union&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UUID4&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pydantic_factories&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ModelFactory&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UUID4&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;hobbies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Union&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;float&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;birthday&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Union&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;PersonFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ModelFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;__model__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Person&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PersonFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Moved the semantic versioning commit guidelines to the semver article.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;deepdiff&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/deepdiff/&#34;&gt;DeepDiff&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Remove murmur from the installation steps.&lt;/p&gt; &lt;p&gt;It seems it&#39;s the default for the new versions&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add warning that regular expressions are not yet supported.&lt;/p&gt; &lt;p&gt;Until &lt;a href=&#34;https://github.com/seperman/deepdiff/pull/239&#34;&gt;#239&lt;/a&gt; is merged, the official library doesn&#39;t support searching for regular expressions. You can use &lt;a href=&#34;https://github.com/lyz-code/deepdiff&#34;&gt;my fork&lt;/a&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Remove advice to use my fork instead.&lt;/p&gt; &lt;p&gt;The original one has already merged my &lt;a href=&#34;https://github.com/seperman/deepdiff/pull/239&#34;&gt;PR&lt;/a&gt; &lt;code&gt;＼\ ٩( ᐛ )و /／&lt;/code&gt;. Beware though as the &lt;code&gt;regexp&lt;/code&gt; are not enabled by default (against my will). You need to use the &lt;code&gt;use_regexp=True&lt;/code&gt; as an argument to &lt;code&gt;grep&lt;/code&gt; or &lt;code&gt;DeepSearch&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;properties&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;Properties&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to generate your own attributes.&lt;/p&gt; &lt;p&gt;We earlier used lazy_attribute but if you want to use Faker inside the attribute definition, you&#39;re going to have a bad time. The new solution uses the creation of custom Fake providers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/#word-from-enum-choices&#34;&gt;Explain how to use &lt;code&gt;Enum&lt;/code&gt; with factoryboy.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/#automatically-generate-a-factory-from-a-pydantic-model&#34;&gt;Automatically generate a factory from a pydantic model.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sadly &lt;a href=&#34;https://github.com/FactoryBoy/factory_boy/issues/869&#34;&gt;it&#39;s not yet supported&lt;/a&gt;, &lt;a href=&#34;https://github.com/FactoryBoy/factory_boy/issues/836&#34;&gt;it will at some point though&lt;/a&gt;. If you&#39;re interested in following this path, you can start with &lt;a href=&#34;https://gist.github.com/mgaitan/dcbe08bf44a5af696f2af752624ac11b&#34;&gt;mgaitan snippet&lt;/a&gt; for dataclasses.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Give an overview on Python&#39;s @property decorator.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;package-management&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/&#34;&gt;Package Management&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to create your own provider.&lt;/p&gt; &lt;p&gt;Useful to generate custom objects for testing purposes.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/#create-optional-data&#34;&gt;Explain how to create &lt;code&gt;Optional&lt;/code&gt; data.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/faker-optional/&#34;&gt;&lt;code&gt;faker-optional&lt;/code&gt;&lt;/a&gt; is a custom faker provider that acts as a wrapper over other Faker providers to return their value or &lt;code&gt;None&lt;/code&gt;. Useful to create data of type &lt;code&gt;Optional[Any]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/#create-a-random-string-with-a-defined-format&#34;&gt;Create a random string with a defined format.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;faker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pystr_format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;id-#######{{random_letter}}&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&#39;id-6443059M&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/#create-an-ip-address&#34;&gt;Create an IP address.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;faker&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipv4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want a CIDR, use &lt;code&gt;network=True&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Compare Poetry, Pipenv and PDM package management tools.&lt;/p&gt; &lt;p&gt;Pipenv has broad support. It is an official project of the Python Packaging Authority, alongside pip. It&#39;s also supported by the Heroku Python buildpack, which is useful for anyone with Heroku or Dokku-based deployment strategies.&lt;/p&gt; &lt;p&gt;Poetry is a one-stop shop for dependency management and package management. It simplifies creating a package, managing its dependencies, and publishing it. Compared to Pipenv, Poetry&#39;s separate add and install commands are more explicit, and it&#39;s faster for everything except for a full dependency install.&lt;/p&gt; &lt;p&gt;I liked Poetry most, and in the end I didn&#39;t analyze &lt;code&gt;pdm&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_package_management/#solver&#34;&gt;Describe what a dependency solver does.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;A Solver tries to find a working set of dependencies that all agree with each other. By looking back in time, it’s happy to solve very old versions of packages if newer ones are supposed to be incompatible. This can be helpful, but is slow, and also means you can easily get a very ancient set of packages when you thought you were getting the latest versions.&lt;/p&gt; &lt;p&gt;In the section we compare Pip&#39;s and Poetry&#39;s solver.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_package_management/#poetry&#34;&gt;Add downsides of Poetry.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It does upper version capping by default, which is becoming &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#upper-version-pinning&#34;&gt;a big problem&lt;/a&gt; in the Python environment.&lt;/p&gt; &lt;p&gt;This is specially useless when you add dependencies that follow &lt;a href=&#34;https://lyz-code.github.io/blue-book/calendar_versioning/&#34;&gt;CalVer&lt;/a&gt;. &lt;code&gt;poetry add&lt;/code&gt; packaging will still do &lt;code&gt;^21&lt;/code&gt; for the version it adds. You shouldn’t be capping versions, but you really shouldn’t be capping CalVer.&lt;/p&gt; &lt;p&gt;It&#39;s equally troublesome that it upper pins &lt;a href=&#34;https://lyz-code.github.io/blue-book/versioning/#pinning-the-python-version-is-special&#34;&gt;the python version&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;fastapi&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/&#34;&gt;FastAPI&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce FastAPI the pydantic friendly python framework to build APIs.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt; is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Sum up the basic documentation.&lt;/p&gt; &lt;p&gt;Explain how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#sending-data-to-the-server&#34;&gt;Sending data to the server&lt;/a&gt;: Through &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#path-parameters&#34;&gt;path parameters&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#query-parameters&#34;&gt;query parameters&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#body-requests&#34;&gt;body requests&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#handling-errors&#34;&gt;Handle errors&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#updating-data&#34;&gt;Update data&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#openapi-configuration&#34;&gt;Configure OpenAPI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#testing&#34;&gt;Test FastAPI applications&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And add a lot of &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#interesting-features-to-explore&#34;&gt;more interesting features&lt;/a&gt; I&#39;ve discovered.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#logging-to-sentry&#34;&gt;Explain how to log exceptions to sentry.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#sending-data-to-the-client&#34;&gt;Explain how to send raw data to the client.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With the &lt;a href=&#34;https://fastapi.tiangolo.com/advanced/response-directly/#returning-a-custom-response&#34;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#configuration&#34;&gt;Explain how to configure the application.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#inject-testing-configuration&#34;&gt;Explain how to inject a testing configuration in the tests.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#deploy-with-docker&#34;&gt;Explain how to deploy it using Docker.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#logging&#34;&gt;Explain how to show logging messages in the logs.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#create-redirections&#34;&gt;Explain how to make redirections with fastapi.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#run-a-fastapi-server-in-the-background-for-testing-purposes&#34;&gt;Explain how to run a FastAPI server in the background for testing purposes.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Improvement: Add link to the Awesome FastAPI page.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;plugin-system&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_plugin_system/&#34;&gt;Plugin System&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add beets system as a first approach.&lt;/p&gt; &lt;p&gt;When building Python applications, it&#39;s good to develop the core of your program, and allow extension via plugins.&lt;/p&gt; &lt;p&gt;I still don&#39;t know how to do it, but &lt;a href=&#34;https://beets.readthedocs.io/en/stable/dev/plugins.html&#34;&gt;Beets plugin system&lt;/a&gt; looks awesome for a first start.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;flask-restplus&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/flask_restplus/&#34;&gt;Flask Restplus&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Flask-RESTPlus library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://flask-restplus.readthedocs.io/en/stable/&#34;&gt;Flask-RESTPlus&lt;/a&gt; is an extension for Flask that adds support for quickly building REST APIs, but I&#39;d use &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/&#34;&gt;FastAPI&lt;/a&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;optimization&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_optimization/&#34;&gt;Optimization&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python_optimization/#tips&#34;&gt;Add tips on how to optimize your python command line tools.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;#minimize-the-relative-import-statements-on-command-line-tools&#34;&gt;Minimize the relative import statements on command line tools&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;When developing a library, it&#39;s common to expose the main objects into the package &lt;code&gt;__init__.py&lt;/code&gt; under the variable &lt;code&gt;__all__&lt;/code&gt;. The problem with command line programs is that each time you run the command it will load those objects, which can mean an increase of 0.5s or even a second for each command, which is unacceptable. * &lt;a href=&#34;#dont-dynamically-install-the-package&#34;&gt;Don&#39;t dynamically install the package&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;If you install the package with &lt;code&gt;pip install -e .&lt;/code&gt; you will see an increase on the load time of ~0.2s. It is useful to develop the package, but when you use it, do so from a virtualenv that installs it directly without the &lt;code&gt;-e&lt;/code&gt; flag.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gitpython&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/&#34;&gt;GitPython&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://gitpython.readthedocs.io&#34;&gt;GitPython&lt;/a&gt; is a python library used to interact with git repositories, high-level like git-porcelain, or low-level like git-plumbing.&lt;/p&gt; &lt;p&gt;It provides abstractions of git objects for easy access of repository data, and additionally allows you to access the git repository more directly using either a pure python implementation, or the faster, but more resource intensive git command implementation.&lt;/p&gt; &lt;p&gt;Explain how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Initialize or load repositories.&lt;/li&gt; &lt;li&gt;Make commits.&lt;/li&gt; &lt;li&gt;Interact with the history.&lt;/li&gt; &lt;li&gt;Test applications that use it.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to get the working directory of a repo.&lt;/p&gt; &lt;p&gt;Using the &lt;code&gt;working_dir&lt;/code&gt; attribute.&lt;/p&gt; &lt;p&gt;perf(python_snippets#Group a list of dictionaries by a specific key) Explain how to group a list of dictionaries by a specific key&lt;/p&gt; &lt;p&gt;With &lt;code&gt;itertools.groupby&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/#clone-a-repository&#34;&gt;Clone a repository.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Repo&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;Repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clone_from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;git_url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/#create-a-branch&#34;&gt;Create a branch.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;new_branch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create_head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;new_branch&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;active_branch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_branch&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# It&#39;s not checked out yet&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reference&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new_branch&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_detached&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/#get-the-latest-commit-of-a-repository&#34;&gt;Get the latest commit of a repository.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hexsha&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#excluding-code-from-coverage&#34;&gt;Explain how to exclude code from the coverage report.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add &lt;code&gt;# pragma: no cover&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#running-tests-in-parallel&#34;&gt;Explain how to run tests in parallel.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;pytest-xdist&lt;/code&gt; makes it possible to run the tests in parallel, useful when the test suit is large or when the tests are slow.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;pytest-xdist
pytest&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-n&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;auto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#setting-a-timeout-for-your-tests&#34;&gt;Explain how to set a timeout for your tests.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using &lt;a href=&#34;https://pypi.org/project/pytest-timeout/&#34;&gt;pytest-timeout&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#rerun-tests-that-fail-sometimes&#34;&gt;Explain how to rerun tests that fail sometimes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With &lt;a href=&#34;https://pypi.org/project/pytest-rerunfailures/&#34;&gt;pytest-rerunfailures&lt;/a&gt; that is a plugin for pytest that re-runs tests to eliminate intermittent failures. Using this plugin is generally a bad idea, it would be best to solve the reason why your code is not reliable. It&#39;s useful when you rely on non robust third party software in a way that you can&#39;t solve, or if the error is not in your code but in the testing code, and again you are not able to fix it.&lt;/p&gt; &lt;p&gt;feat(python_snippets#Create combination of elements in groups of two): Explain how to create combination of elements in groups of two&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;itertools&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;combinations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;ABC&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;C&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#excluding-code-from-coverage&#34;&gt;Exclude the &lt;code&gt;if TYPE_CHECKING&lt;/code&gt; code from the coverage.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want &lt;a href=&#34;https://github.com/nedbat/coveragepy/issues/831&#34;&gt;other code to be excluded&lt;/a&gt;, for example the statements inside the &lt;code&gt;if TYPE_CHECKING:&lt;/code&gt; add to your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.coverage.report]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;exclude_lines&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Have to re-enable the standard pragma&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;pragma: no cover&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# Type checking can not be tested&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#39;if TYPE_CHECKING:&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce goodconf the pyndantic YAML friendly configuration management.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lincolnloop/goodconf/&#34;&gt;goodconf&lt;/a&gt; is a thin wrapper over Pydantic&#39;s settings management. Allows you to define configuration variables and load them from environment or JSON/YAML file. Also generates initial configuration files and documentation for your defined configuration.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#capture-deprecation-warnings&#34;&gt;Capture deprecation warnings.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Python and its ecosystem does not have an assumption of strict SemVer, and has a tradition of providing deprecation warnings. If you have good CI, you should be able to catch warnings even before your users see them. Try the following pytest configuration:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.pytest.ini_options]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;filterwarnings&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&#34;error&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;This will turn warnings into errors and allow your CI to break before users break.&lt;/p&gt; &lt;p&gt;Other sections added are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#ensuring-code-triggers-a-deprecation-warning&#34;&gt;Ensuring code triggers a deprecation warning&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#asserting-warnings-with-the-warns-function&#34;&gt;Asserting warnings with the warns function&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#recording-warnings&#34;&gt;Recording warnings&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/&#34;&gt;Python Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Explain how to show the message in custom exceptions.&lt;/li&gt; &lt;li&gt;New: Explain how to import a module or object from within a python program.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add today&#39;s learned python tricks.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-systems-timezone-and-use-it-in-datetime&#34;&gt;Get system&#39;s timezone and use it in datetime&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#capitalize-a-sentence&#34;&gt;Capitalize a sentence&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-last-monday-datetime&#34;&gt;Get the last monday datetime&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use Jinja2.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://jinja.palletsprojects.com&#34;&gt;Jinja2&lt;/a&gt; is a modern and designer-friendly templating language for Python, modelled after Django’s templates. It is fast, widely used and secure with the optional sandboxed template execution environment.&lt;/p&gt; &lt;p&gt;Add installation, usage and basic and advanced template guidelines.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add date management snippets.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-week-number-of-a-datetime&#34;&gt;Get the week number of a datetime&lt;/a&gt;: &lt;code&gt;datetime.datetime(2010, 6, 16).isocalendar()[1]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-monday-of-a-week-number&#34;&gt;Get the Monday of a week number&lt;/a&gt;:&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;2013-W26&#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strptime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-1&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;%Y-W%W-%w&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-month-name-from-a-number&#34;&gt;Get the month name from a number&lt;/a&gt;:&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;calendar&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calendar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&#39;March&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; * &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-ordinal-from-number&#34;&gt;Get ordinal from number&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;int_to_ordinal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#39;&#39;&#39;Convert an integer into its ordinal representation.&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    make_ordinal(0)   =&amp;gt; &#39;0th&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(3)   =&amp;gt; &#39;3rd&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(122) =&amp;gt; &#39;122nd&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(213) =&amp;gt; &#39;213th&#39;&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Args:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        number: Number to convert&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Returns:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        ordinal representation of the number&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#39;&#39;&#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;st&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;nd&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;rd&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add file management snippets.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#remove-the-extension-of-a-file&#34;&gt;Remove the extension of a file&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#iterate-over-the-files-of-a-directory&#34;&gt;Iterate over the files of a directory&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#create-directory&#34;&gt;Create directory&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#touch-a-file&#34;&gt;Touch a file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-first-day-of-next-month&#34;&gt;Get the first day of next month.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#check-directories-and-files&#34;&gt;Explain how to test directories and files.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#install-a-python-dependency-from-a-git-repository&#34;&gt;Explain how to install dependencies from git repositories.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With &lt;a href=&#34;https://stackoverflow.com/questions/16584552/how-to-state-in-requirements-txt-a-direct-github-source&#34;&gt;pip you can&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;git+git://github.com/path/to/repository@master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want &lt;a href=&#34;https://stackoverflow.com/questions/32688688/how-to-write-setup-py-to-include-a-git-repository-as-a-dependency/54794506#54794506&#34;&gt;to hard code it in your &lt;code&gt;setup.py&lt;/code&gt;&lt;/a&gt;, you need to:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;install_requires&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
  &lt;span class=&#34;s1&#34;&gt;&#39;some-pkg @ git+ssh://git@github.com/someorgname/pkg-repo-name@v1.1#egg=some-pkg&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to create PyPI valid packages with direct dependencies.&lt;/p&gt; &lt;p&gt;It looks like PyPI don&#39;t want pip to reach out to URLs outside their site when installing from PyPI. So you can&#39;t define the direct dependencies in the &lt;code&gt;install_requires&lt;/code&gt;. Instead you need to install them in a &lt;code&gt;PostInstall&lt;/code&gt; custom script. Ugly as hell.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#install-a-python-dependency-from-a-git-repository&#34;&gt;Add warning about the method to use direct dependencies.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Last time I used this solution, when I added the library on a &lt;code&gt;setup.py&lt;/code&gt; the direct dependencies weren&#39;t installed :S&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#convert-html-to-readable-plaintext&#34;&gt;Explain how to convert html code to readable plaintext.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;html2text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;html2text&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;foobar.html&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html2text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html2text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#parse-a-datetime-from-a-string&#34;&gt;Explain how to parse a datetime from a string.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;dateutil&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;parser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Aug 28 1999 12:00AM&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# datetime.datetime(1999, 8, 28, 0, 0)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#find-a-static-file-of-a-python-module&#34;&gt;Explain how to find a static file of a python module.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pkg_resources&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;file_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pkg_resources&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;resource_filename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;my_package&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;assets/config.yaml&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#delete-a-file&#34;&gt;Explain how to delete a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;demofile.txt&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#measure-elapsed-time-between-lines-of-code&#34;&gt;Explain how to measure elapsed time between lines of code.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;time&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;hello&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#when-to-use-isinstance-and-when-to-use-type&#34;&gt;Document when to use &lt;code&gt;isinstance&lt;/code&gt; and when to use &lt;code&gt;type&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;isinstance&lt;/code&gt; takes into account inheritance, while &lt;code&gt;type&lt;/code&gt; doesn&#39;t. So if you want to make sure you&#39;re dealing with a specific class, and not any of it&#39;s parents or subclasses, use &lt;code&gt;type(obj) == class&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#check-if-a-dictionary-is-a-subset-of-another&#34;&gt;Check if a dictionary is a subset of another.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have two dictionaries &lt;code&gt;big = {&#39;a&#39;: 1, &#39;b&#39;: 2, &#39;c&#39;:3}&lt;/code&gt; and &lt;code&gt;small = {&#39;c&#39;: 3, &#39;a&#39;: 1}&lt;/code&gt;, and want to check whether &lt;code&gt;small&lt;/code&gt; is a subset of &lt;code&gt;big&lt;/code&gt;, use the next snippet:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;small&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;big&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;items&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#group-or-sort-a-list-of-dictionaries-or-objects-by-a-specific-key&#34;&gt;Group or sort a list of dictionaries or objects by a specific key.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Improve previous method with the concepts learned from the &lt;a href=&#34;https://docs.python.org/3/howto/sorting.html#sorting-basics&#34;&gt;official docs&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Particularly improve the sorting by multiple keys with the next function:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;multisort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;specs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;reversed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;specs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attrgetter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xs&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multisort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;student_objects&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;grade&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;age&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;dave&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;jane&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;B&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;john&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;A&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#install-default-directories-and-files-for-a-command-line-program&#34;&gt;Install default directories and files for a command line program.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve been trying for a long time to configure &lt;code&gt;setup.py&lt;/code&gt; to run the required steps to configure the required directories and files when doing &lt;code&gt;pip install&lt;/code&gt; without success.&lt;/p&gt; &lt;p&gt;Finally, I decided that the program itself should create the data once the &lt;code&gt;FileNotFoundError&lt;/code&gt; exception is found. That way, you don&#39;t penalize the load time because if the file or directory exists, that code is not run.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#locate-element-in-list&#34;&gt;Locate element in list.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#transpose-a-list-of-lists&#34;&gt;Transpose a list of lists.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;zip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#check-the-type-of-a-list-of-strings&#34;&gt;Check the type of a list of strings.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_is_list_of_lists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;&#34;&#34;&#34;Check if data is a list of strings.&#34;&#34;&#34;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isinstance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elem&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#replace-all-characters-of-a-string-with-another-character&#34;&gt;Replace all characters of a string with another character.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;mystring&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;_&#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mystring&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#make-a-flat-list-of-lists-with-a-list-comprehension&#34;&gt;Make a flat list of lists with a list comprehension.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There is no nice way to do it :(. The best I&#39;ve found is:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;flat_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sublist&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sublist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#remove-a-substring-from-the-end-of-a-string&#34;&gt;Remove a substring from the end of a string.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;On Python 3.9 and newer you can use the &lt;code&gt;removeprefix&lt;/code&gt; and &lt;code&gt;removesuffix&lt;/code&gt; methods to remove an entire substring from either side of the string:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;abcdc.com&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;removesuffix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.com&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# Returns &#39;abcdc&#39;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;removeprefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;abcdc.&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Returns &#39;com&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;On Python 3.8 and older you can use &lt;code&gt;endswith&lt;/code&gt; and slicing:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;abcdc.com&#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endswith&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;.com&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#capture-the-stdout-of-a-function&#34;&gt;Capture the stdout of a function.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;io&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;contextlib&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redirect_stdout&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;StringIO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;redirect_stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;do_something&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;my_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getvalue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#make-temporal-directory&#34;&gt;Make temporal directory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;tempfile&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;dirpath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tempfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mkdtemp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#change-the-working-directory-of-a-test&#34;&gt;Change the working directory of a test.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;unittest&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;src.main&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_cwd&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;TestMain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unittest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TestCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test_get_cwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;src&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;testing get_cwd()&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;current_dir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_cwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertIsNotNone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertEqual&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;src&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#copy-a-directory&#34;&gt;Copy a directory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;shutil&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;shutil&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;copytree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;foo&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#change-the-working-directory-of-a-test&#34;&gt;Use fixture to change the working directory of a test.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The previous code didn&#39;t work, instead use the next fixture:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nd&#34;&gt;@pytest&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;change_test_dir&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;change_test_dir_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SubRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fspath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dirname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;chdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;invocation_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#ipv4-regular-expression&#34;&gt;IPv4 regular expression.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;regex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;(?&amp;lt;![-\.\d])(?:0{0,2}?[0-9]\.|1\d?\d?\.|2[0-5]?[0-5]?\.)&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{3}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
    &lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;(?:0{0,2}?[0-9]|1\d?\d?|2[0-5]?[0-5]?)(?![\.\d])&#34;^[0-9]{1,3}*$&#39;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#remove-the-elements-of-a-list-from-another&#34;&gt;Remove the elements of a list from another.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#change-the-logging-level-of-a-library&#34;&gt;Change the logging level of a library.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;sh_logger&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getLogger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;sh&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sh_logger&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logging&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WARN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-all-subdirectories-of-a-directory&#34;&gt;Get all subdirectories of a directory.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;walk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#move-a-file&#34;&gt;Move a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rename&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;path/to/current/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;path/to/new/destination/for/file.foo&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#copy-a-file&#34;&gt;Copy a file.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;shutil&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;shutil&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;copyfile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;src_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dest_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocstrings&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/docstrings/&#34;&gt;mkdocstrings&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: How to write good test docstrings.&lt;/p&gt; &lt;p&gt;Both &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/docstrings/#without-template&#34;&gt;without a template&lt;/a&gt; and using the &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/docstrings/#given-when-then&#34;&gt;Given When Then style&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;networkx&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/networkx/&#34;&gt;NetworkX&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://networkx.org/&#34;&gt;NetworkX&lt;/a&gt; is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pexpect&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pexpect/&#34;&gt;pexpect&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the pexpect python library.&lt;/p&gt; &lt;p&gt;A pure Python module for spawning child applications; controlling them; and responding to expected patterns in their output. Pexpect works like Don Libes’ Expect. Pexpect allows your script to spawn a child application and control it as if a human were typing commands.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/pexpect/#read-output-of-command&#34;&gt;Explain how to read the output of a command run by pexpect.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pexpect&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;child&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pexpect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;spawn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;ls&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;child&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;logfile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;child&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pexpect&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EOF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;prompt-toolkit&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/&#34;&gt;Prompt Toolkit&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the tui python library.&lt;/p&gt; &lt;p&gt;Useful to build text-based user interfaces, it allows the creation of intelligent prompts, dialogs, and full screen ncurses-like applications.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#full-screen-applications&#34;&gt;Basic concepts of building full screen applications with python prompt toolkit.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;prompt_toolkit&lt;/code&gt; can be used to create complex full screen terminal applications. Typically, an application consists of a layout (to describe the graphical part) and a set of key bindings.&lt;/p&gt; &lt;p&gt;In the section we cover:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#the-layout&#34;&gt;The layout&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#the-controls&#34;&gt;The controls&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#key-bindings&#34;&gt;How to use key bindings&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#styles&#34;&gt;How to apply styles&lt;/a&gt;&lt;/li&gt; &lt;li&gt;A difficult ordered list of &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/#examples&#34;&gt;examples&lt;/a&gt; to get a grasp of these concepts with simple working code.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to initialize attributes.&lt;/p&gt; &lt;p&gt;Use validators to initialize attributes&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Name the pros and cons of using the library.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to create bidirectional relationship between entities.&lt;/li&gt; &lt;li&gt;New: Warn on the lack of TypeDict support.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: How to solve the No name &#39;BaseModel&#39; in module &#39;pydantic&#39;.&lt;/p&gt; &lt;p&gt;It&#39;s still a patch, so I&#39;ve also monitored the relevant &lt;a href=&#34;https://lyz-code.github.io/blue-book/issues/#pydantic-errors&#34;&gt;issues&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Change parse_obj definition to find how to import pydantic models from dictionary.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#set-private-attributes&#34;&gt;Explain how to use private attributes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With the &lt;a href=&#34;https://pydantic-docs.helpmanual.io/usage/models/#private-model-attributes&#34;&gt;&lt;code&gt;PrivateAttr&lt;/code&gt;&lt;/a&gt; object.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#update-entity-attributes-with-a-dictionary&#34;&gt;Explain how to update entity attributes with a dictionary.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can create a new object with the new data using the &lt;code&gt;update&lt;/code&gt; argument of the &lt;code&gt;copy&lt;/code&gt; entity method.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#copy-produces-copy-that-modifies-the-original&#34;&gt;Copy produces copy that modifies the original.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;When copying a model, changing the value of an attribute on the copy updates the value of the attribute on the original. This only happens if &lt;code&gt;deep != True&lt;/code&gt;. To fix it use: &lt;code&gt;model.copy(deep=True)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#define-fields-to-exclude-from-exporting-at-config-level&#34;&gt;Define fields to exclude from exporting at config level.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Eagerly waiting for the release of the version 1.9 because you can &lt;a href=&#34;https://github.com/samuelcolvin/pydantic/issues/660&#34;&gt;define the fields to exclude in the &lt;code&gt;Config&lt;/code&gt; of the model&lt;/a&gt; using something like:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Transaction&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BaseModel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fields&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;value&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&#39;alias&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;Amount&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&#39;exclude&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;user&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&#39;exclude&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;username&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;password&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;s1&#34;&gt;&#39;id&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;s1&#34;&gt;&#39;dump_alias&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;external_id&#39;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;The release it&#39;s taking its time because &lt;a href=&#34;https://github.com/samuelcolvin/pydantic/discussions/3228&#34;&gt;the developer&#39;s gremlin and salaried work are sucking his time off&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#field-customization&#34;&gt;Field customization.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Optionally, the &lt;code&gt;Field&lt;/code&gt; function can be used to provide extra information about the field and validations. Such as the &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and many others&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pypika&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pypika/&#34;&gt;Pypika&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to insert, update, select data.&lt;/li&gt; &lt;li&gt;New: Explain how to join tables.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-mysql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/sql/sql/&#34;&gt;Python Mysql&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Give examples on joins for each relationship type.&lt;/li&gt; &lt;li&gt;New: Explain how to interact with MySQL databases with Python.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the syntax of the left joins.&lt;/p&gt; &lt;p&gt;Instead of using &lt;code&gt;ON users.id == addresses.user_id&lt;/code&gt;, use &lt;code&gt;ON users.id = addresses.user_id&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;questionary&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/&#34;&gt;questionary&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce tui python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://questionary.readthedocs.io&#34;&gt;questionary&lt;/a&gt; is a Python library for effortlessly building pretty command line interfaces. It makes it very easy to query your user for input.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the link to the examples.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/#conditionally-skip-questions&#34;&gt;Conditionally skip questions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Sometimes it is helpful to be able to skip a question based on a condition. To avoid the need for an if around the question, you can pass the condition when you create the question:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;questionary&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;DISABLED&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;questionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;confirm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Are you amazed?&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;skip_if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DISABLED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/#don&#39;t-highlight-the-selected-option-by-default&#34;&gt;Don&#39;t highlight the selected option by default.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you don&#39;t want to highlight the default choice in the &lt;code&gt;select&lt;/code&gt; question use the next style:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;questionary&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Style&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&#34;Question title: &#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;choices&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;b&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;c&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;a&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;selected&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;noreverse&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]),&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ask&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rich&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/&#34;&gt;rich&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python cli builder library and it&#39;s progress bar.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/willmcgugan/rich&#34;&gt;Rich&lt;/a&gt; is a Python library for rich text and beautiful formatting in the terminal.&lt;/p&gt; &lt;p&gt;Check out the beautiful progress bar:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;install&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rich
python&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-m&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;rich.progress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/#tables&#34;&gt;Explain how to build pretty tables with rich.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.console&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.table&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Table&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Star Wars Movies&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Released&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;justify&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;right&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;cyan&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;no_wrap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Title&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;magenta&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_column&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Box Office&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;justify&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;right&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;green&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Dec 20, 2019&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Star Wars: The Rise of Skywalker&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;$952,110,690&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;May 25, 2018&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Solo: A Star Wars Story&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;$393,151,347&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Dec 15, 2017&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Star Wars Ep. V111: The Last Jedi&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;$1,332,539,889&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add_row&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Dec 16, 2016&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;Rogue One: A Star Wars Story&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;$1,332,439,889&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;console&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/#rich-text&#34;&gt;Explain how to print pretty text with rich.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.console&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;rich.text&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;console&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assemble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;Hello&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;bold magenta&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34; World!&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ruamel-yaml&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/ruamel_yaml/&#34;&gt;Ruamel YAML&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Suggest to use ruyaml instead of ruamel.yaml.&lt;/p&gt; &lt;p&gt;As it&#39;s maintained by the community and versioned with git.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;selenium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/&#34;&gt;Selenium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use selenium with python.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#set-timeout-of-a-response&#34;&gt;Explain how to Set timeout of a response.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;driver&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_page_load_timeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/selenium/#chromedriver-hangs-up-unexpectedly&#34;&gt;Explain how to fix when Chromedriver hangs up unexpectedly.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;DBUS_SESSION_BUS_ADDRESS&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;/dev/null&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sqlite3&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/&#34;&gt;sqlite3&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/#regexp&#34;&gt;Explain how to implement the REGEXP operator with Python.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;requests&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/requests/&#34;&gt;Requests&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the requests python library.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rq&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/rq/&#34;&gt;Rq&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add note to test arq.&lt;/p&gt; &lt;p&gt;arq is a similar library that can be better.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;tenacity&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/tenacity/&#34;&gt;Tenacity&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Tenacity python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jd/tenacity&#34;&gt;Tenacity&lt;/a&gt; is an Apache 2.0 licensed general-purpose retrying library, written in Python, to simplify the task of adding retry behavior to just about anything.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;tinydb&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/tinydb/&#34;&gt;TinyDB&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/tinydb/#serializing-custom-data&#34;&gt;Explain how to serialize datetime objects.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sqlite&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/&#34;&gt;SQLite&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Solve the autoincrementation not working bug.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/#regexp&#34;&gt;Explain how to configure sqlite to be able to use the REGEXP operator.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&#39;s not enabled by default.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add rqlite as an interesting distributed solution of.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/#get-the-columns-of-a-database&#34;&gt;Get the columns of a database.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PRAGMA table_info(table_name);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;promql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/&#34;&gt;Promql&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/promql/promql/#generating-range-vectors-from-return-values-in-prometheus-queries&#34;&gt;Generating range vectors from return values in Prometheus queries.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;javascript&#34;&gt;Javascript&lt;/h3&gt; &lt;h4 id=&#34;mermaidjs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mermaidjs/&#34;&gt;MermaidJS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the diagram library and how to make flowchart diagrams.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://mermaid-js.github.io&#34;&gt;MermaidJS&lt;/a&gt; is a Javascript library that lets you create diagrams using text and code.&lt;/p&gt; &lt;p&gt;It can render the &lt;a href=&#34;https://mermaid-js.github.io/mermaid/#/?id=diagrams-that-mermaid-can-render&#34;&gt;next diagram types&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Flowchart&lt;/li&gt; &lt;li&gt;Sequence.&lt;/li&gt; &lt;li&gt;Gantt&lt;/li&gt; &lt;li&gt;Class&lt;/li&gt; &lt;li&gt;Git graph&lt;/li&gt; &lt;li&gt;Entity Relationship&lt;/li&gt; &lt;li&gt;User journey&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;issues&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/issues/&#34;&gt;Issues&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the issue tracking document.&lt;/p&gt; &lt;p&gt;I haven&#39;t found a tool to monitor the context it made me track certain software issues, so I get lost when updates come. Until a tool shows up, I&#39;ll use the good old markdown to keep track of them.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add today&#39;s issues.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Gadgetbridge improvements&lt;/li&gt; &lt;li&gt;Ombi improvements&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Monitor today&#39;s issues.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mkdocs migration to 7.x is giving errors with the search bar and repo stats.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Track python dependency errors.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Correction: Gitdb has updated smmap.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Jellyfin 10.7.1 broke the login page.&lt;/p&gt; &lt;p&gt;Don&#39;t upgrade till it&#39;s solved, as the rollback is not easy.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Jellyfin login page problem after upgrade to 10.7.X is solved.&lt;/p&gt; &lt;p&gt;Surprisingly the instructions in &lt;a href=&#34;https://github.com/jellyfin/jellyfin/issues/5489&#34;&gt;#5489&lt;/a&gt; solved it.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;stop&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin.service
mv&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;,.bak&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;start&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin.service

&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Go&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;JF&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;URL,&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;asked&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;to&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;log&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;even&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;though&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;there&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;are&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;no&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;Users&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;in&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;the&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;JF&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;DB&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;now&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;

systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;stop&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin.service
mv&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;.bak,&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;start&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/devops/&#34;&gt;DevOps&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Comment on the DevOps pitfalls and update the learn path.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;helmfile&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/&#34;&gt;Helmfile&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#keep-charts-updated&#34;&gt;Improve the helmfile chart update process.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Updating charts with &lt;code&gt;helmfile&lt;/code&gt; is easy as long as you don&#39;t use environments, you run &lt;code&gt;helmfile deps&lt;/code&gt;, then &lt;code&gt;helmfile diff&lt;/code&gt; and finally &lt;code&gt;helmfile apply&lt;/code&gt;. The tricky business comes when you want to use environments to reuse your helmfile code and don&#39;t repeat yourself. I&#39;ve updated the process to include this case.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#multi-environment-project-structure&#34;&gt;Document the directory and files structure for multi-environment projects.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#using-helmfile-environments&#34;&gt;Document how to use helmfile environments to follow DRY.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#avoiding-code-repetition&#34;&gt;Document how to avoiding code repetition.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Besides environments, &lt;code&gt;helmfile&lt;/code&gt; gives other useful tricks to prevent the illness of code repetition, such as &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#using-release-templates&#34;&gt;using release templates&lt;/a&gt;, or &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#layering-the-state&#34;&gt;layering the state&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/#managing-dependencies&#34;&gt;Document how to manage dependencies between the charts, to be able to use concurrency.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Helmfile support concurrency with the option &lt;code&gt;--concurrency=N&lt;/code&gt; so we can take advantage of it and improve our deployment speed, but to ensure it works as expected we have to define the dependencies among charts. For example, if an application needs a database, it has to be deployed before hand.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Use environment name instead of get values.&lt;/p&gt; &lt;p&gt;Instead of &lt;code&gt;.Environment.Name&lt;/code&gt;, in theory you could have used &lt;code&gt;.Vars | get &#34;environment&#34;&lt;/code&gt;, which could have prevented the variables and secrets of the default environment will need to be called &lt;code&gt;default_values.yaml&lt;/code&gt;, and &lt;code&gt;default_secrets.yaml&lt;/code&gt;, which is misleading. But you can&#39;t use &lt;code&gt;.Values&lt;/code&gt; in the &lt;code&gt;helmfile.yaml&lt;/code&gt; as it&#39;s not loaded when the file is parsed, and you get an error. A solution would be to &lt;a href=&#34;https://github.com/roboll/helmfile/blob/8594944f6374454e6ddea61d04b201133798cd95/docs/writing-helmfile.md#layering-state-template-files&#34;&gt;layer the helmfile state files&lt;/a&gt; but I wasn&#39;t able to make it work.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: How to install a chart only in one environment.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nt&#34;&gt;environments&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;production&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;

&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;releases&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;newrelic-agent&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;installed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;eq .Environment.Name &#34;production&#34; | toYaml&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;}}&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# snip&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add note that templates can&#39;t be used inside the secrets.&lt;/p&gt; &lt;p&gt;See &lt;a href=&#34;https://github.com/jkroepke/helm-secrets/issues/126&#34;&gt;this issue&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;terraform&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/&#34;&gt;Terraform&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce terraform and how to handle RDS secrets.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Terraform_(software)&#34;&gt;Terraform&lt;/a&gt; is an open-source infrastructure as code software tool created by HashiCorp. It enables users to define and provision a datacenter infrastructure using an awful high-level configuration language known as Hashicorp Configuration Language (HCL), or optionally JSON. Terraform supports a number of cloud infrastructure providers such as Amazon Web Services, IBM Cloud , Google Cloud Platform, DigitalOcean, Linode, Microsoft Azure, Oracle Cloud Infrastructure, OVH, or VMware vSphere as well as OpenNebula and OpenStack.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#ignore-the-change-of-an-attribute&#34;&gt;Explain how to ignore the change of an attribute.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;aws_instance&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;example&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;  # ...&lt;/span&gt;

&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;lifecycle&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;ignore_changes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;      # Ignore changes to tags, e.g. because a management agent&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;      # updates these based on some ruleset managed elsewhere.&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#define-the-default-value-of-an-variable-that-contains-an-object-as-empty&#34;&gt;Explain how to define the default value of an variable that contains an object as empty.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;variable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;database&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                 &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;number&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;instance_type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;storage_type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;engine&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;engine_version&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;parameter_group_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;multi_az&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;null&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#do-a-conditional-if-a-variable-is-not-null&#34;&gt;Explain how to do a conditional if a variable is not null.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kr&#34;&gt;resource&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;&#34;aws_db_instance&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;&#34;instance&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;var.database&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#conditionals&#34;&gt;How to do elif conditionals in terraform.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;nb&#34;&gt;locals&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;na&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;${ condition ? value : (elif-condition ? elif-value : else-value)}&#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/terraform/#debugging&#34;&gt;How to enable debug traces.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can set the &lt;code&gt;TF_LOG&lt;/code&gt; environmental variable to one of the log levels &lt;code&gt;TRACE&lt;/code&gt;, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt; or &lt;code&gt;ERROR&lt;/code&gt; to change the verbosity of the logs.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;helm-secrets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helm/helm_secrets/&#34;&gt;Helm Secrets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Update the repository url.&lt;/p&gt; &lt;p&gt;The last fork is dead, long live the &lt;a href=&#34;https://github.com/jkroepke/helm-secrets&#34;&gt;fork&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: How to install the plugin.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;helm-git&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/helm_git/&#34;&gt;Helm Git&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Suggest version 0.8.0 until issue is solved.&lt;/p&gt; &lt;p&gt;Newer versions have a &lt;a href=&#34;https://github.com/aslafy-z/helm-git/issues/131&#34;&gt;bug&lt;/a&gt; that makes impossible to use helm_git with a repository that contains just one chart in the root of the git repository.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update installation method.&lt;/p&gt; &lt;p&gt;In the last version 0.11.1, the issue that forced us to use the version 0.8.0 was solved&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-solutions&#34;&gt;Infrastructure Solutions&lt;/h3&gt; &lt;h4 id=&#34;kubernetes&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes/#tools-to-test&#34;&gt;Add Velero as interesting tool.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://velero.io/&#34;&gt;Velero&lt;/a&gt; is a tool to backup and migrate Kubernetes resources and persistent volumes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;architecture&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_architecture/&#34;&gt;Architecture&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_architecture/#number-of-clusters&#34;&gt;Give suggestions on how to choose the number of kubernetes clusters to use.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can run a given set of workloads either on few large clusters (with many workloads in each cluster) or on many clusters (with few workloads in each cluster).&lt;/p&gt; &lt;p&gt;Here&#39;s a table that summarizes the pros and cons of various approaches:&lt;/p&gt; &lt;p&gt;&lt;img alt=&#34; &#34; src=&#34;../../img/number_k8s_clusters.svg&#34;/&gt; &lt;em&gt;Figure: Possibilities of number of clusters from &lt;a href=&#34;https://learnk8s.io/how-many-clusters&#34;&gt;learnk8s.io article&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;jobs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_jobs/&#34;&gt;Jobs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Remove false positive alerts on failed jobs that succeeded.&lt;/p&gt; &lt;p&gt;A Kubernetes cronjob spawns jobs, if the first one fails, it will try to spawn a new one. If the second succeeds, the cronjob status should be success, but with the rule we had before, a successful job with failed past jobs will still raise an alert.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_jobs/#rerunning-failed-jobs&#34;&gt;Explain how to rerun failed cronjobs.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have a job that has failed after the 6 default retries, it will show up in your monitorization forever, to fix it, you can manually trigger the job.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;get&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;job&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;your-job&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-o&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;json&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;del(.spec.selector)&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jq&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;del(.spec.template.metadata.labels)&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;replace&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;--force&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-f&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes_jobs/#manually-creating-a-job-from-a-cronjob&#34;&gt;Manually creating a job from a cronjob.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kubectl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;create&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;job&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;job_name&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-n&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;namespace&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;--from&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;cronjobs/&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;cronjob_name&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/ci/&#34;&gt;Continuous Integration&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to troubleshoot the error: pathspec master did not match any file.&lt;/p&gt; &lt;p&gt;Remove all git hooks with &lt;code&gt;rm -r .git/hooks&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;flakehell&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/bandit/&#34;&gt;Flakehell&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to ignore errors.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Update the git repository.&lt;/p&gt; &lt;p&gt;The existent repository has been archived in favor of &lt;a href=&#34;https://github.com/flakeheaven/flakeheaven&#34;&gt;this one&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to patch the extended_default_ignore error for versions &amp;gt; 3.9.0.&lt;/p&gt; &lt;p&gt;Add to your your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.flakeheaven]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;extended_default_ignore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# add this&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/flakeheaven/#troubleshooting&#34;&gt;Troubleshoot the &#39;Namespace&#39; object has no attribute &#39;extended_default_ignore&#39; error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add to your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;[tool.flakeheaven]&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;extended_default_ignore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/flakeheaven/#issues&#34;&gt;Latest version is broken.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It returns an &lt;a href=&#34;https://github.com/flakeheaven/flakeheaven/issues/22&#34;&gt;ImportError: cannot import name &#39;MergedConfigParser&#39; from &#39;flake8.options.config&#39;&lt;/a&gt;, wait for the issue to be solved before upgrading.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pyment&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pyment/&#34;&gt;Pyment&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Pyment.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dadadel/pyment&#34;&gt;Pyment&lt;/a&gt; is a python3 program to automatically create, update or convert docstrings in existing Python files, managing several styles.&lt;/p&gt; &lt;p&gt;As of 2021-11-17, the program is not production ready yet for me, I&#39;ve tested it in one of my projects and found some bugs that needed to be fixed before it&#39;s usable. Despite the number of stars, it looks like the development pace has dropped dramatically, so it needs our help to get better :).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dependency-managers&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/pip_tools/&#34;&gt;Dependency managers&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Sync the virtualenv libraries with the requirements files.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;python&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;piptools&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sync&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requirements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requirements&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Use &lt;code&gt;-c&lt;/code&gt; instead of &lt;code&gt;-r&lt;/code&gt; in the nested requirement files.&lt;/p&gt; &lt;p&gt;To avoid duplication of version pins.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate in favour of Poetry.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cruft&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/&#34;&gt;cruft&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/#issues&#34;&gt;Monitor the issue to save the cruft config in &lt;code&gt;pyproject.toml&lt;/code&gt;.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;monitoring-comparison&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/monitoring_comparison/&#34;&gt;Monitoring Comparison&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Compare Nagios and Prometheus as monitoring.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Improve the comparison.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;State that nagios is not easy to configure. If you&#39;re used to it it is, otherwise it&#39;s not.&lt;/li&gt; &lt;li&gt;Add that grafana has a huge community building graphs.&lt;/li&gt; &lt;li&gt;Mention Thanos as the long term storage solution for Prometheus.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Add the insights of a nagios power user.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Update open source and community analysis with nagios exchange.&lt;/li&gt; &lt;li&gt;Correct nagios community analysis with its trajectory&lt;/li&gt; &lt;li&gt;Correct the analysis of the high availability of nagios&lt;/li&gt; &lt;li&gt;Add the option to host the script exporter in a dedicated server&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;prometheus-install&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus_installation/&#34;&gt;Prometheus Install&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Add warning that helm 2 support is dropped.&lt;/p&gt; &lt;p&gt;If you want to use the helm chart above 11.1.7 you need to use helm 3.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus_installation/#upgrading-notes&#34;&gt;Add upgrading notes from 10.x -&amp;gt; 11.1.7.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;admonition warning&#34;&gt; &lt;p class=&#34;admonition-title&#34;&gt;Don&#39;t upgrade to 12.x if you&#39;re still using Helm 2.&lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;elasticsearch-exporter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/elasticsearch_exporter/&#34;&gt;Elasticsearch Exporter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the prometheus elasticsearch exporter.&lt;/p&gt; &lt;p&gt;The &lt;a href=&#34;https://github.com/prometheus-community/elasticsearch_exporter&#34;&gt;elasticsearch exporter&lt;/a&gt; allows monitoring &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/&#34;&gt;Elasticsearch&lt;/a&gt; clusters with &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;Prometheus&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Explain how to install it, configure the grafana dashboards and the alerts.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add more elasticsearch alerts.&lt;/p&gt; &lt;p&gt;Measure the search latency, search rate and create alerts on the garbage collector, json parser and circuit breaker errors&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add alert on low number of healthy master nodes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;scrum&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/&#34;&gt;Scrum&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the scrum framework.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Scrum_%28software_development%29&#34;&gt;Scrum&lt;/a&gt; is an &lt;a href=&#34;https://en.wikipedia.org/wiki/Agile_software_development&#34;&gt;agile&lt;/a&gt; framework for developing, delivering, and sustaining complex products, with an initial emphasis on software development, although it has been used in other fields such as personal task management. It is designed for teams of ten or fewer members, who break their work into goals that can be completed within time-boxed iterations, called sprints, no longer than one month and most commonly two weeks. The Scrum Team track progress in 15-minute time-boxed daily meetings, called daily scrums. At the end of the sprint, the team holds sprint review, to demonstrate the work done, a sprint retrospective to improve continuously, and a sprint planning to prepare next sprint&#39;s tasks.&lt;/p&gt; &lt;p&gt;In the article I explain:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I use to do &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#the-meetings&#34;&gt;the meetings&lt;/a&gt;: &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#daily-meetings&#34;&gt;Daily&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#refinement-meetings&#34;&gt;Refinement&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#retro-meetings&#34;&gt;Retros&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#review-meetings&#34;&gt;Reviews&lt;/a&gt; and &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#planning-meetings&#34;&gt;Plannings&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;The relevant &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#the-roles&#34;&gt;roles&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Some &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#definitions&#34;&gt;definitions&lt;/a&gt;, such as definition of done and definition of ready.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;software-architecture&#34;&gt;Software Architecture&lt;/h2&gt; &lt;h3 id=&#34;domain-driven-design&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/domain_driven_design/&#34;&gt;Domain Driven Design&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Add warning when migrating old code.&lt;/p&gt; &lt;p&gt;You may be tempted to migrate all your old code to this architecture once you fall in love with it. Truth being told, it&#39;s the best way to learn how to use it, but it&#39;s time expensive too! &lt;a href=&#34;https://github.com/lyz-code/clinv/pull/40&#34;&gt;The last refactor&lt;/a&gt; I did required a change of 60% of the code. The upside is that I reduced the total lines of code a 25%.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;architecture-decision-record&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/adr/&#34;&gt;Architecture Decision Record&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Architecture Decision Records.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/joelparkerhenderson/architecture_decision_record&#34;&gt;ADR&lt;/a&gt; are short text documents that captures an important architectural decision made along with its context and consequences.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/adr/#adr-template&#34;&gt;Update the ADR template with the week learnings.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add the Proposals and Date sections&lt;/li&gt; &lt;li&gt;Explain the possible Status states.&lt;/li&gt; &lt;li&gt;Add an &lt;a href=&#34;https://github.com/SirVer/ultisnips&#34;&gt;Ultisnip&lt;/a&gt; vim snippet.&lt;/li&gt; &lt;li&gt;Explain how I&#39;ve used it to create &lt;a href=&#34;https://github.com/lyz-code/mkdocs-newsletter&#34;&gt;mkdocs-newsletter&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to show relationship between ADRs.&lt;/p&gt; &lt;p&gt;Suggest a &lt;a href=&#34;https://lyz-code.github.io/blue-book/mermaidjs/&#34;&gt;mermaidjs&lt;/a&gt; diagram to show the state of the project ADRs.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/tahoe/&#34;&gt;Linux&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Tahoe-LAFS.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Tahoe-LAFS&#34;&gt;Tahoe-LAFS&lt;/a&gt; is a free and open, secure, decentralized, fault-tolerant, distributed data store and distributed file system.&lt;/p&gt; &lt;p&gt;Tahoe-LAFS is a system that helps you to store files. You run a client program on your computer, which talks to one or more storage servers on other computers. When you tell your client to store a file, it will encrypt that file, encode it into multiple pieces, then spread those pieces out among multiple servers. The pieces are all encrypted and protected against modifications. Later, when you ask your client to retrieve the file, it will find the necessary pieces, make sure they haven’t been corrupted, reassemble them, and decrypt the result.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;linux-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/&#34;&gt;Linux Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#split-a-file-into-many-with-equal-number-of-lines&#34;&gt;Explain how to split a file into many with equal number of lines.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;split&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-l&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;200000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#identify-what-a-string-or-file-contains&#34;&gt;Explain how to identify what a string or file contains.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using &lt;a href=&#34;https://github.com/bee-san/pyWhat&#34;&gt;pywhat&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#allocate-space-for-a-virtual-filesystem&#34;&gt;Explain how to allocate space for a virtual filesystem.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fallocate&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-l&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;20G&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/path/to/file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux_snippets/#bypass-client-ssl-certificate-with-cli-tool&#34;&gt;Document how to bypass client SSL certificate with a cli tool.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Websites that require clients to authorize with an TLS certificate are difficult to interact with through command line tools that don&#39;t support this feature.&lt;/p&gt; &lt;p&gt;To solve it, we can use a transparent proxy that does the exchange for us.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;afew&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim_tabs/&#34;&gt;afew&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use tabs, buffers and windows in vim.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce afew.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/afewmail/afew&#34;&gt;afew&lt;/a&gt; is an &lt;a href=&#34;http://notmuchmail.org/initial_tagging/&#34;&gt;initial tagging script&lt;/a&gt; for &lt;a href=&#34;https://lyz-code.github.io/blue-book/notmuch/&#34;&gt;notmuch mail&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Its basic task is to provide automatic tagging each time new mail is registered with &lt;code&gt;notmuch&lt;/code&gt;. In a classic setup, you might call it after &lt;code&gt;notmuch new&lt;/code&gt; in an offlineimap post sync hook.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;alot&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/&#34;&gt;alot&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/#issues&#34;&gt;Follow the issue to add elipsis instead of ... in vim-abolish.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Forget to use abolish to insert the elipsis symbol.&lt;/p&gt; &lt;p&gt;Tpope said that it&#39;s not going to happen.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce vim-easymotion.&lt;/p&gt; &lt;p&gt;EasyMotion provides a much simpler way to use some motions in vim. It takes the &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; out of &lt;code&gt;&amp;lt;number&amp;gt;w&lt;/code&gt; or &lt;code&gt;&amp;lt;number&amp;gt;f{char}&lt;/code&gt; by highlighting all possible choices and allowing you to press one key to jump directly to the target.&lt;/p&gt; &lt;p&gt;When one of the available motions is triggered, all visible text preceding or following the cursor is faded, and motion targets are highlighted.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Move vim-test to the plugins page.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Typo.&lt;/p&gt; &lt;p&gt;There was a missing comma in the list.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/#vim-easymotion&#34;&gt;Explain how to configure the vim-easymotion movement keys.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce alot.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pazz/alot&#34;&gt;alot&lt;/a&gt; is a terminal-based mail user agent based on the &lt;a href=&#34;https://lyz-code.github.io/blue-book/notmuch/&#34;&gt;notmuch mail indexer&lt;/a&gt;. It is written in python using the urwid toolkit and features a modular and command prompt driven interface to provide a full MUA experience.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;activitywatch&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/activitywatch/&#34;&gt;ActivityWatch&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce ActivityWatch tracking software.&lt;/p&gt; &lt;p&gt;It&#39;s a web application that can be installed both in Linux and Android that automatically tracks where you spend the time on.&lt;/p&gt; &lt;p&gt;Super interesting for life logging and automating stuff. Until I save some time to react on the data, I&#39;ll just gather it and see how to aggregate it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add week insights.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/ActivityWatch/aw-watcher-web/issues/20&#34;&gt;The browser watcher is not very accurate&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;The vim editor watcher doesn&#39;t add &lt;a href=&#34;https://github.com/ActivityWatch/aw-watcher-vim/issues/19&#34;&gt;git branch information&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Syncing data between devices &lt;a href=&#34;https://github.com/ActivityWatch/activitywatch/issues/35&#34;&gt;is not yet supported&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;beancount&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/beancount/&#34;&gt;beancount&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the cli double entry accounting program.&lt;/li&gt; &lt;li&gt;New: Add links on how to use as a library.&lt;/li&gt; &lt;li&gt;Correction: Correct the git repository link.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;beets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/beets/&#34;&gt;Beets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Beets the music management library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://beets.io/&#34;&gt;Beets&lt;/a&gt; is a music management library used to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a set of tools for manipulating and accessing your music.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dunst&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dunst/&#34;&gt;dunst&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce dunst.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://dunst-project.org/&#34;&gt;Dunst&lt;/a&gt; is a lightweight replacement for the notification daemons provided by most desktop environments. It’s very customizable, isn’t dependent on any toolkits, and therefore fits into those window manager centric setups we all love to customize to perfection.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dynamic-dns&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/dynamicdns/&#34;&gt;Dynamic DNS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the Dynamic DNS concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Dynamic_DNS&#34;&gt;Dynamic DNS (DDNS)&lt;/a&gt; is a method of automatically updating a name server in the Domain Name Server (DNS), often in real time, with the active DDNS configuration of its configured hostnames, addresses or other information.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;elasticsearch&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/&#34;&gt;elasticsearch&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to reindex an index.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to restore only some indices.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-X&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;POST&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;{{ url }}/_snapshot/{{ backup_path }}/{{ snapshot_name }}/_restore?pretty&#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-H&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;Content-Type: application/json&#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-d&lt;span class=&#34;s1&#34;&gt;&#39;&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;  &#34;indices&#34;: &#34;{{ index_to_restore }}&#34;,&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;}&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#fix-circuit-breakers-triggers&#34;&gt;Explain how to fix Circuit breakers triggers.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct the way of closing an index.&lt;/p&gt; &lt;p&gt;Use a POST instead of a GET&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#knn-sizing&#34;&gt;Explain how to calculate the amount of memory required to do KNN operations.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#knn-warmup&#34;&gt;Explain how to do KNN warmup to speed up the queries.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/#deal-with-the-aws-timeout-service&#34;&gt;Explain how to deal with the AWS service timeout.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gajim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gajim/&#34;&gt;Gajim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce gajim.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://gajim.org/&#34;&gt;Gajim&lt;/a&gt; is the best Linux XMPP client in terms of end-to-end encryption support as it&#39;s able to speak OMEMO.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;github-cli&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gh/&#34;&gt;Github cli&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Basic usage of gh.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cli/cli&#34;&gt;&lt;code&gt;gh&lt;/code&gt;&lt;/a&gt; is GitHub’s official command line tool.&lt;/p&gt; &lt;p&gt;It can be used to speed up common operations done with github, such as opening PRs, merging them or checking the checks of the PRs&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;graylog&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/graylog/&#34;&gt;Graylog&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Graylog.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.graylog.org/&#34;&gt;Graylog&lt;/a&gt; is a log management tool. The commit includes some tips like how to send a test message to check an input.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;haproxy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/haproxy/&#34;&gt;HAProxy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add interesting guidelines on &lt;a href=&#34;https://github.com/jvehent/haproxy-aws&#34;&gt;how to configure HAProxy in AWS&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;hard-drive-health&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/hard_drive_health/&#34;&gt;Hard drive health&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Taking care of your hard drives.&lt;/p&gt; &lt;p&gt;Hard drives die, so we must be ready for that to happen. There are several solutions, such as using &lt;a href=&#34;https://en.wikipedia.org/wiki/RAID&#34;&gt;RAID&lt;/a&gt; to minimize the impact of a disk loss, but even then, we should monitor the &lt;a href=&#34;https://en.wikipedia.org/wiki/Bad_sector&#34;&gt;bad sectors&lt;/a&gt; to see when are our disks dying.&lt;/p&gt; &lt;p&gt;In the article we talk about &lt;a href=&#34;https://en.wikipedia.org/wiki/S.M.A.R.T.&#34;&gt;S.M.A.R.T&lt;/a&gt; and how to solve some hard drive problems.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;hushboard&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/husboard/&#34;&gt;Hushboard&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Husboard.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://kryogenix.org/code/hushboard/&#34;&gt;Hushboard&lt;/a&gt; is an utility that mutes your microphone while you’re typing.&lt;/p&gt; &lt;p&gt;(Thanks &lt;a href=&#34;https://m0wer.github.io/memento/computer_science/gnu_linux/hushboard/&#34;&gt;M0wer&lt;/a&gt;!)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;jellyfin&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/&#34;&gt;Jellyfin&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the media system and monitor interesting issues.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://jellyfin.org/&#34;&gt;Jellyfin&lt;/a&gt; is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby&#39;s 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to fix the stuck at login page issue.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;stop&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin.service
mv&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;,.bak&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;start&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin.service
systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;stop&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin.service
mv&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;.bak,&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;start&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to fix the Intel Hardware transcoding.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-it&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;/bin/bash
wget&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;https://repo.jellyfin.org/releases/server/ubuntu/versions/jellyfin-ffmpeg/4.3.2-1/jellyfin-ffmpeg_4.3.2-1-focal_amd64.deb
dpkg&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-i&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;jellyfin-ffmpeg_4.3.2-1-focal_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#wrong-image-covers&#34;&gt;Explain how to fix the wrong image covers.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Remove all the &lt;code&gt;jpg&lt;/code&gt; files of the directory and then fetch again the data from your favourite media management software.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#issues&#34;&gt;Track the issue of trailers not working.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#green-bars-in-the-reproduction&#34;&gt;Explain how to fix the green bars in the reproduction.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#stuck-at-login-page&#34;&gt;Fix the stuck at login page error.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you use &lt;a href=&#34;https://github.com/hrfee/jfa-go&#34;&gt;jfa-go&lt;/a&gt; for the invites, you may &lt;a href=&#34;https://github.com/hrfee/jfa-go/issues/101&#34;&gt;need to regenerate all the user profiles&lt;/a&gt;, so that the problem is not introduced again.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/jellyfin/#issues&#34;&gt;Track subtitles get delayed from the video on some devices issue.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ffmpeg&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ffmpeg/&#34;&gt;ffmpeg&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the program and multiple of it&#39;s uses.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt; is a complete, cross-platform solution to record, convert and stream audio and video.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;kitty&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/kitty/&#34;&gt;Kitty&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce kitty the terminal emulator.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://sw.kovidgoyal.net/&#34;&gt;kitty&lt;/a&gt; is a fast, feature-rich, GPU based terminal emulator written in C and Python with nice features for the keyboard driven humans like me.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/kitty/#scrollback-when-ssh-into-a-machine-doesn&#39;t-work&#34;&gt;Scrollback when ssh into a machine doesn&#39;t work.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This happens because the kitty terminfo files are not available on the server. You can ssh in using the following command which will automatically copy the terminfo files to the server:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kitty&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;+kitten&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;ssh&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;myserver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Enable infinite scrollback history.&lt;/p&gt; &lt;p&gt;To make the history scrollback infinite add the next lines:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;scrollback_lines -1
scrollback_pager_history_size 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/kitty/#reasons-to-migrate-from-urxvt-to-kitty&#34;&gt;Reasons to migrate from urxvt to kitty.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It doesn&#39;t fuck up your terminal colors.&lt;/li&gt; &lt;li&gt;You can use &lt;a href=&#34;https://lyz-code.github.io/blue-book/peek/&#34;&gt;peek&lt;/a&gt; to record your screen.&lt;/li&gt; &lt;li&gt;Easier to extend.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;luks&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/luks/luks/&#34;&gt;LUKS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/luks/luks/#change-a-key&#34;&gt;Explain how to change a LUKS key.&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cryptsetup&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;luksChangeKey&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;luks_device&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;-s&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to develop your own plugins.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Document the Navigation object and the on_nav event.&lt;/p&gt; &lt;p&gt;Useful if you develop MkDocs plugins, it holds the information to build the navigation of the site.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Describe navigation objects used in plugins.&lt;/p&gt; &lt;p&gt;Explain how to use the &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#page&#34;&gt;Page&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#section&#34;&gt;Section&lt;/a&gt;, and &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#sectionpage&#34;&gt;SectionPage&lt;/a&gt; objects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: You need to edit the nav in the on_nav and not in the on_files event.&lt;/p&gt; &lt;p&gt;Even though it seems more easy to create the nav structure in the &lt;a href=&#34;#on_files&#34;&gt;&lt;code&gt;on_files&lt;/code&gt;&lt;/a&gt; event, by editing the &lt;code&gt;nav&lt;/code&gt; dictionary of the &lt;code&gt;config&lt;/code&gt; object, there is no way of returning the &lt;code&gt;config&lt;/code&gt; object in that event, so we&#39;re forced to do it in this event.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#adding-new-files&#34;&gt;Explain how to add files through a plugin.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Long story short, use the &lt;code&gt;on_config&lt;/code&gt; event instead of &lt;code&gt;on_files&lt;/code&gt; and &lt;code&gt;on_nav&lt;/code&gt; if you need to add files and want to change the navigation menu.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use MermaidJS diagrams.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to test mkdocs plugins.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#material-theme-customizations&#34;&gt;Explain additions of version 7.1.0 of the material theme.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#color-palette-toggle&#34;&gt;Dark-light mode switch&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#back-to-top-button&#34;&gt;Back to top button&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mopidy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mopidy/&#34;&gt;Mopidy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the music server.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mopidy/mopidy&#34;&gt;Mopidy&lt;/a&gt; is an extensible music server written in Python, that plays perfectly with &lt;a href=&#34;https://lyz-code.github.io/blue-book/beets/&#34;&gt;beets&lt;/a&gt; and the MPD ecosystem.&lt;/p&gt; &lt;p&gt;The awesome documentation, being Python based, the extension system, JSON-RPC, and JavaScript APIs make Mopidy a perfect base for your projects.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;oracle-database&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/oracle_database/&#34;&gt;Oracle Database&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to build an oracle database docker while feeling dirty inside.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;peek&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/peek/&#34;&gt;Peek&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Peek the screen recorder.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/phw/peek&#34;&gt;Peek&lt;/a&gt; is a simple animated GIF screen recorder with an easy to use interface.&lt;/p&gt; &lt;p&gt;If you try to use it with i3, you&#39;re going to have a bad time, you&#39;d &lt;a href=&#34;https://github.com/phw/peek#on-i3-the-recording-area-is-all-black-how-can-i-record-anything&#34;&gt;need to install&lt;/a&gt; &lt;a href=&#34;https://github.com/chjj/compton&#34;&gt;Compton&lt;/a&gt;, and then the elements &lt;a href=&#34;https://github.com/phw/peek#why-cant-i-interact-with-the-ui-elements-inside-the-recording-area&#34;&gt;may not even be clickable&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Add note that it works with kitty.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;syncthing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/syncthing/&#34;&gt;Syncthing&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Mention privacy configurations.&lt;/p&gt; &lt;p&gt;Disable the &lt;a href=&#34;https://docs.syncthing.net/users/security.html#global-discovery&#34;&gt;Global Discovery&lt;/a&gt; and &lt;a href=&#34;https://docs.syncthing.net/users/security.html#relay-connections&#34;&gt;Relaying connections&lt;/a&gt; options.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/syncthing/#syncthing-over-tor&#34;&gt;Investigate if Syncthing can be used over Tor.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I haven&#39;t found a reliable and safe way to do it, but I&#39;ve set a path to follow if you&#39;re interested.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Configure Vim to set the upstream by default when git pushing.&lt;/li&gt; &lt;li&gt;New: Add vim landing page.&lt;/li&gt; &lt;li&gt;Reorganization: Refactor the vim_automation article into vim and vim_plugins.&lt;/li&gt; &lt;li&gt;Correction: Correct vim snippet to remember the folds when saving a file.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt; &lt;h4 id=&#34;cone&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cone/&#34;&gt;cone&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the mobile double entry accounting application.&lt;/li&gt; &lt;li&gt;Correction: Correct the description of the transaction to be beancount compatible.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;gadgetbridge&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gadgetbridge/&#34;&gt;GadgetBridge&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add more guidelines to reverse engineer the band protocol.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;osmand&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/osmand/&#34;&gt;OsmAnd&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce OsmAnd.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://osmand.net&#34;&gt;OsmAnd&lt;/a&gt; is a mobile application for global map viewing and navigating based on &lt;a href=&#34;https://osm.org&#34;&gt;OpenStreetMaps&lt;/a&gt;. Perfect if you&#39;re looking for a privacy focused, community maintained open source alternative to google maps.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;signal&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/signal/&#34;&gt;Signal&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the messaging app and how to decrypt the backups.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/&#34;&gt;Writing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Try vim-pencil without success, but love mdnav.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chmp/mdnav&#34;&gt;mdnav&lt;/a&gt; opens links to urls or files when pressing &lt;code&gt;enter&lt;/code&gt; in normal mode over a markdown link, similar to &lt;code&gt;gx&lt;/code&gt; but more powerful. I specially like the ability of following &lt;code&gt;[self referencing link][]&lt;/code&gt; links, that allows storing the links at the bottom.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/#im-good-or-im-well&#34;&gt;Explain when to use I&#39;m good or I&#39;m well.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use I&#39;m well when referring to being ill, use I&#39;m good for the rest.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;grammar-and-orthography&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/build_your_own_wiki/&#34;&gt;Grammar and Orthography&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to enable clickable navigation sections in your mkdocs repository.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/oprypin&#34;&gt;oprypin&lt;/a&gt; has solved it with the &lt;a href=&#34;https://github.com/oprypin/mkdocs-section-index&#34;&gt;mkdocs-section-index&lt;/a&gt; plugin.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Expand the introduction and add Dave&#39;s suggested link.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#where-to-add-your-pronouns&#34;&gt;Explain where to add your pronouns.&lt;/a&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Hi, I’m Lyz (he/him), I&#39;m writing to tell you…&lt;/p&gt; &lt;/blockquote&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#when-to-capitalize-after-a-question-mark&#34;&gt;Explain when to capitalize after a question mark.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If the sentence ends after the question mark you should capitalize, if it doesn&#39;t end, you shouldn&#39;t have used the question mark, since it ends a sentence.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add textstat tests.&lt;/p&gt; &lt;p&gt;To analyze the text readability&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#how-to-use-the-singular-they&#34;&gt;Explain how to use the singular &lt;code&gt;they&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain when to write won&#39;t or wont.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Won&#39;t is the correct way to contract will not.&lt;/li&gt; &lt;li&gt;Wont is a synonym of &#34;a habit&#34;. For example, &#34;He went for a morning jog, as was his wont&#34;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#use-collocations&#34;&gt;Explain what collocations are and how to avoid the word very.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Collocation refers to a natural combination of words that are closely affiliated with each other. They make it easier to avoid overused or ambiguous words like &#34;very&#34;, &#34;nice&#34;, or &#34;beautiful&#34;, by using a pair of words that fit the context better and that have a more precise meaning.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#stop-saying-i-know&#34;&gt;Explain what can you use instead of I know.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Using &#34;I know&#34; may not be the best way to show the other person that you&#39;ve got the information. You can take the chance to use other words that additionally gives more context on how you stand with the information you&#39;ve received, thus improving the communication and creating a bond.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#use-of-z-or-s-in-some-words&#34;&gt;Explain the use of z or s in some words.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It looks like American english uses &lt;code&gt;z&lt;/code&gt; while British uses &lt;code&gt;s&lt;/code&gt;, some examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://writingexplained.org/organisation-vs-organization-difference&#34;&gt;Organizations vs organisation&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://english.stackexchange.com/questions/282621/authorization-vs-authorisation-im-in-some-real-dilemma&#34;&gt;Authorization vs authorisation&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://grammarist.com/spelling/customise-customize/&#34;&gt;Customized vs customised&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Both forms are correct, so choose the one that suits your liking.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;forking-this-garden&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/&#34;&gt;Forking this garden&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/#writing-style-books&#34;&gt;Analyze interesting books on writing style.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The elements of style by William Strunk Jr and E.B White&lt;/li&gt; &lt;li&gt;On writing well by William Zinsser&lt;/li&gt; &lt;li&gt;Bird by bird by Anne Lamott&lt;/li&gt; &lt;li&gt;On writing by Stephen King&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/#how-to-end-a-letter&#34;&gt;Explain how to end a letter.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use Sincerely in doubt and Best if you have more confidence. Add a comma after the sign-off and &lt;em&gt;never&lt;/em&gt; use Cheers (it&#39;s what I&#39;ve been doing all my life &lt;code&gt;(◞‸◟；)&lt;/code&gt; ).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to fork the blue book.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;digital-gardens&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/digital_garden/&#34;&gt;Digital Gardens&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the digital garden concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://joelhooks.com/digital-garden&#34;&gt;Digital Garden&lt;/a&gt; is a method of storing and maintaining knowledge in an maintainable, scalable and searchable way. They are also known as second brains.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;cooking&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking/&#34;&gt;Cooking&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the cooking art.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;cooking-basics&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking_basics/&#34;&gt;Cooking Basics&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking_basics/#boiling-an-egg&#34;&gt;Refactor the perfect technique to boil an egg.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/cooking_basics/#boil-chickpeas-when-you&#39;ve-forgotten-to-soak-them&#34;&gt;Explain how to boil chickpeas when you&#39;ve forgotten to soak them.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add a level teaspoon of baking soda to the pot and cook them as usual&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;pilates&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pilates/&#34;&gt;Pilates&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the art.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pilates&#34;&gt;Pilates&lt;/a&gt; is a physical fitness system based on controlled movements putting emphasis on alignment, breathing, developing a strong core, and improving coordination and balance. The core (or powerhouse), consisting of the muscles of the abdomen, low back, and hips, is thought to be the key to a person&#39;s stability.&lt;/p&gt; &lt;p&gt;Pilates&#39; system allows for different exercises to be modified in range of difficulty from beginner to advanced or to any other level, and also in terms of the instructor and practitioner&#39;s specific goals and/or limitations. Intensity can be increased over time as the body adapts itself to the exercises.&lt;/p&gt; &lt;p&gt;You can think of yoga, but without the spiritual aspects.&lt;/p&gt; &lt;p&gt;Also added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It&#39;s principles&lt;/li&gt; &lt;li&gt;The &lt;a href=&#34;https://lyz-code.github.io/blue-book/pilates/#swing-from-table&#34;&gt;swing from table&lt;/a&gt; exercise.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;board-gaming&#34;&gt;Board Gaming&lt;/h3&gt; &lt;h4 id=&#34;regicide&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/regicide/&#34;&gt;Regicide&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the awesome Regicide card game.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.badgersfrommars.com/&#34;&gt;Regicide&lt;/a&gt; is a wonderful cooperative card game for 1 to 4 players. It&#39;s awesome how they&#39;ve built such a rich game dynamic with a normal deck of cards. Even if you can play it with any deck, I suggest to buy &lt;a href=&#34;https://www.badgersfrommars.com/buy-regicide&#34;&gt;the deck they sell&lt;/a&gt; because their cards are magnificent and they deserve the money for their impressive game. Another thing I love about them is that even if you can&#39;t or don&#39;t want to pay for the game, they give the &lt;a href=&#34;https://www.badgersfrommars.com/assets/RegicideRulesA4.pdf?v=2&#34;&gt;rules for free&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you don&#39;t like reading the rules directly from their pdf (although it&#39;s quite short), they explain them in &lt;a href=&#34;https://www.badgersfrommars.com/regicide&#34;&gt;this video&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;I&#39;ve loved the game so much, that I&#39;ve created some variations of the rules to make each game more different and changeling.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;drawing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/drawing/&#34;&gt;Drawing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/drawing/#ellipses&#34;&gt;How to draw Ellipses.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Ellipses are the next basic shape we&#39;re going to study (after the lines). They are extremely important and notoriously annoying to draw. Important because we&#39;re going to be using ellipses in 2D space to represent circles that exist in 3D space.&lt;/p&gt; &lt;p&gt;In this section we:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Introduce the basic concepts surrounding the ellipses&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/drawing/#drawing-ellipses&#34;&gt;How to draw them&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;exercise-pool&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/exercise_pool/&#34;&gt;Exercise Pool&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/drawing/exercise_pool/#ellipses&#34;&gt;Add the Tables of ellipses drawing exercise.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This exercise is meant to get you used to drawing ellipses, in a variety of sizes, orientations and degrees. It also sets out a clear space each ellipse is meant to occupy, giving us a means to assess whether or not an ellipse was successful, or if there were visible mistakes (where it went outside of its allotted space, or ended up falling short). Practicing against set criteria, with a way to judge success/failure is an important element of learning. There&#39;s nothing wrong with failure - it&#39;s an opportunity to learn. Having a clearly defined task allows us to analyze those failures and make the most of them.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;origami&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/origami/&#34;&gt;Origami&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add mark1626 digital garden article on origamis.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;contact&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/contact/&#34;&gt;Contact&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Update the XMPP address.&lt;/p&gt; &lt;p&gt;Riseup has stopped giving support for XMPP :(&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Add remote work tips.&lt;/li&gt; &lt;li&gt;New: Introduce lazy loading implementation paradigm with python.&lt;/li&gt; &lt;li&gt;New: Explain how to lazy load pydantic objects.&lt;/li&gt; &lt;li&gt;New: Explain my accounting automation workflow.&lt;/li&gt; &lt;li&gt;New: Feature mkdocs-rss-plugin as a solution of publishing mkdocs updates as an RSS.&lt;/li&gt; &lt;li&gt;New: Add a git issue tracker and markdown formatter.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate mkdocs issues.&lt;/p&gt; &lt;p&gt;They&#39;ve been fixed in the last release&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Suggest organize to act on computer file changes.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://organize.readthedocs.io/en/latest/&#34;&gt;organize&lt;/a&gt; looks good for automating processes on files. Maybe it&#39;s interesting to run it with &lt;a href=&#34;https://askubuntu.com/a/819290&#34;&gt;inotifywait&lt;/a&gt; instead of with a &lt;a href=&#34;https://github.com/tfeldmann/organize/issues/18&#34;&gt;cron job&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Outrun.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Overv/outrun&#34;&gt;Outrun&lt;/a&gt; lets you execute a local command using the processing power of another Linux machine.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Broken links.&lt;/p&gt; &lt;p&gt;Removed the link to (everything_i_know.md) since it no longer exists. Updated some links that where broken due to a folder structure change.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to select a random choice from &lt;code&gt;Enum&lt;/code&gt; objects.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;pydantic&lt;/a&gt; uses &lt;code&gt;Enum&lt;/code&gt; objects to define &lt;a href=&#34;https://pydantic-docs.helpmanual.io/usage/types/#enums-and-choices&#34;&gt;the choices of fields&lt;/a&gt;, so we need them to create the factories of those objects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Improve the periodic tasks and application metrics monitoring.&lt;/p&gt; &lt;p&gt;Setup an &lt;a href=&#34;https://healthchecks.io/&#34;&gt;healthchecks&lt;/a&gt; instance with the &lt;a href=&#34;https://docs.linuxserver.io/images/docker-healthchecks&#34;&gt;linuxserver image&lt;/a&gt; to monitor cronjobs.&lt;/p&gt; &lt;p&gt;For the notifications either use the &lt;a href=&#34;https://healthchecks.io/docs/configuring_prometheus/&#34;&gt;prometheus metrics&lt;/a&gt; or an &lt;a href=&#34;https://github.com/healthchecks/healthchecks/issues/271&#34;&gt;apprise&lt;/a&gt; compatible system.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to check if an rsync command has gone well.&lt;/p&gt; &lt;p&gt;Run &lt;code&gt;diff -r --brief source/ dest/&lt;/code&gt;, and check that there is no output.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Reorder the sections of the site navigation menu.&lt;/p&gt; &lt;p&gt;Give more importance to Coding, Activism and Life Management, reducing the Software Architecture and Data Analysis sections.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the tool management section.&lt;/p&gt; &lt;p&gt;Most of the tasks or processes we do involve some kind of tool, the better you know how to use them, the better your efficiency will be. The more you use a tool, the more it&#39;s worth the investment of time to improve your usage of it.&lt;/p&gt; &lt;p&gt;Whenever I use a tool, I try to think if I could configure it or use it in a way that will make it easier or quicker. Don&#39;t go crazy and try to change everything. Go step by step, and once you&#39;ve internalized the improvement, implement the next.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Move the tasks tools from the task management article to their own.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;aside class=&#34;md-source-file&#34;&gt; &lt;span class=&#34;md-source-file__fact&#34;&gt; &lt;span class=&#34;md-icon&#34; title=&#34;Last update&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M21 13.1c-.1 0-.3.1-.4.2l-1 1 2.1 2.1 1-1c.2-.2.2-.6 0-.8l-1.3-1.3c-.1-.1-.2-.2-.4-.2m-1.9 1.8-6.1 6V23h2.1l6.1-6.1zM12.5 7v5.2l4 2.4-1 1L11 13V7zM11 21.9c-5.1-.5-9-4.8-9-9.9C2 6.5 6.5 2 12 2c5.3 0 9.6 4.1 10 9.3-.3-.1-.6-.2-1-.2s-.7.1-1 .2C19.6 7.2 16.2 4 12 4c-4.4 0-8 3.6-8 8 0 4.1 3.1 7.5 7.1 7.9l-.1.2z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/span&gt; &lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-timeago&#34;&gt;&lt;span class=&#34;timeago&#34; datetime=&#34;2024-11-27T15:36:58+00:00&#34; locale=&#34;en&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-iso_date&#34;&gt;2024-11-27&lt;/span&gt; &lt;/span&gt; &lt;/aside&gt; &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2021/</link>
      <pubDate>2024-11-27 15:36:58+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/yearly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2021/</guid>
      
    </item>
    
    <item><title>2020</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt;  &lt;h2 id=&#34;meta&#34;&gt;Meta&lt;/h2&gt; &lt;h3 id=&#34;projects&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/&#34;&gt;Projects&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Update information on active projects.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;helm&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helm/helm/&#34;&gt;Helm&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce helm-git to install charts directly from git repositories.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;helmfile&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/&#34;&gt;Helmfile&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Tell how to make long diffs usable.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-solutions&#34;&gt;Infrastructure Solutions&lt;/h3&gt; &lt;h4 id=&#34;kubernetes&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain jobs, cronjobs and how to monitor them with prometheus.&lt;/li&gt; &lt;li&gt;New: Explain how to debug cronjob logs.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;kubectl&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl/&#34;&gt;Kubectl&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add kubectl command cheatsheet.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/ci/&#34;&gt;Continuous Integration&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Reorganization: Split CI documents into their own pages.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;black&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/&#34;&gt;Black&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to reveal the type of an expression.&lt;/li&gt; &lt;li&gt;Improvement: Add git link.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Configure black to process long lines.&lt;/p&gt; &lt;p&gt;Use the &lt;code&gt;--experimental-string-procesing&lt;/code&gt; flag to process long lines.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the alex linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/alex/&#34;&gt;Alex&lt;/a&gt; helps you find gender favoring, polarizing, race related, religion inconsiderate, or other unequal phrasing in text.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to skip one line.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to fix the Module X has no attribute Y.&lt;/li&gt; &lt;li&gt;New: Explain how to prevent the formatter on some lines.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;yamlfix&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/flakeheaven/&#34;&gt;Yamlfix&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce flakeheaven python linter.&lt;/p&gt; &lt;p&gt;Flakehell is a &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/flake8/&#34;&gt;Flake8&lt;/a&gt; wrapper to make it cool.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Annotate the slowness of the bandit tests in pre-commit.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Add yamlfix formatter.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;markdownlint&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/markdownlint/&#34;&gt;Markdownlint&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the markdownlint linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/markdownlint/&#34;&gt;markdownlint&lt;/a&gt; is A linter for Markdown files.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;proselint&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/proselint/&#34;&gt;Proselint&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce proselint linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amperser/proselint/&#34;&gt;Proselint&lt;/a&gt; is another linter for prose.&lt;/p&gt; &lt;p&gt;feat(write-good) introduce the write-good linter&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/btford/write-good&#34;&gt;write-good&lt;/a&gt; is a naive linter for English prose.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cookiecutter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;cookiecutter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add cookiecutter template testing guidelines.&lt;/li&gt; &lt;li&gt;New: Explain how to remove unwanted directories.&lt;/li&gt; &lt;li&gt;New: Explain how to use a default configuration for all your templates.&lt;/li&gt; &lt;li&gt;Improvement: Add references on why is not easy to update cookiecutter templates.&lt;/li&gt; &lt;li&gt;New: Explain how to debug failing cookiecutter tests.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;cruft&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/&#34;&gt;cruft&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce cruft tool to manage cookiecutter templates.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://cruft.github.io/cruft/&#34;&gt;cruft&lt;/a&gt; allows you to maintain all the necessary boilerplate for packaging and building projects separate from the code you intentionally write. Fully compatible with existing &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;Cookiecutter&lt;/a&gt; templates.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;prometheus&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;Prometheus&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to find a metric name.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add statistical analysis on instance sizes using prometheus metrics.&lt;/p&gt; &lt;p&gt;Explain how to configure prometheus to automatically check if your instances are of the correct size and which are your bottlenecks.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to install with docker.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Reorganization: Move the installation of docker to prometheus install.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;node-exporter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/node_exporter/&#34;&gt;Node Exporter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Filter out stopped instances.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add cookiecutter documentation.&lt;/li&gt; &lt;li&gt;New: Add docker construction for a python project.&lt;/li&gt; &lt;li&gt;New: Add commit guidelines with commitizen.&lt;/li&gt; &lt;li&gt;Correction: Type hints of subclasses of abstract classes.&lt;/li&gt; &lt;li&gt;New: Introduce the python docstrings.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add python snippets article.&lt;/p&gt; &lt;p&gt;Includes the generation of OpenSSH keys with the cryptography library&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Correct typo in the generation of ssh keys.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Correction: Add email to the generated ssh snippet.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to make multiline code look clean.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;textwrap.dedent()&lt;/code&gt; to define variables that require multiline strings&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to play a file inside python.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to save a python object to a string using ruamel parser.&lt;/li&gt; &lt;li&gt;New: Explain how to do a deep copy of a dictionary.&lt;/li&gt; &lt;li&gt;New: Explain how to solve the R0201 pylint error.&lt;/li&gt; &lt;li&gt;New: Do an initial analysis on Python profiling.&lt;/li&gt; &lt;li&gt;New: Introduce some ideas on optimization of python code.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;alembic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/alembic/&#34;&gt;Alembic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Explain how to use alembic from a python scripts and not.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;click&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/&#34;&gt;Click&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to setup and test a click application.&lt;/li&gt; &lt;li&gt;New: Introduce click arguments.&lt;/li&gt; &lt;li&gt;New: Explain how to accept options from environmental variables and how to handle contexts.&lt;/li&gt; &lt;li&gt;Correction: Add note on capturing stderr and stdout with caplog instead of click methods.&lt;/li&gt; &lt;li&gt;New: Introduce the boolean options and variadic arguments.&lt;/li&gt; &lt;li&gt;New: Explain how to use a default command to a click group.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Improve arguments documentation.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add example on how to use variadic arguments.&lt;/li&gt; &lt;li&gt;Explain how to use File and Path click arguments&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to set the allowable values for an argument.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to hide a command from the --help output.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dash&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/dash/&#34;&gt;Dash&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce dash and dash-leaflet.&lt;/p&gt; &lt;p&gt;Explain how to initiate dash and how to create a map with dash-leaflet&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to interact with programs that ask for user input.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;type-hints&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/&#34;&gt;Type Hints&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Improve the definition of objects with multiple types with TypeVar.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use the TypedDict instead of Dict.&lt;/p&gt; &lt;p&gt;Useful if the different keys have different types&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;code-styling&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/deepdiff/&#34;&gt;Code Styling&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the deepdiff library.&lt;/li&gt; &lt;li&gt;New: Explain how to fix the Pylint R0201 error.&lt;/li&gt; &lt;li&gt;New: Explain why we can safely ignore W1203.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;factoryboy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;FactoryBoy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Add warning that generating your own attributes doesn&#39;t work anymore.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;faker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/&#34;&gt;Faker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to populate the faker fixture with random seeds.&lt;/li&gt; &lt;li&gt;Correction: Improve the way of generating random seed.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;folium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/folium/&#34;&gt;Folium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use folium, change tileset and load data.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Change the order of the layers.&lt;/p&gt; &lt;p&gt;Openstreetmaps is more clear than the IGN, so the waypoints are better seen&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain what fixtures are.&lt;/li&gt; &lt;li&gt;New: Tell how to use a fixture more than once in a function.&lt;/li&gt; &lt;li&gt;New: Document the capsys, caplog and tmpdir builtin fixtures.&lt;/li&gt; &lt;li&gt;New: Add freezegun fixture.&lt;/li&gt; &lt;li&gt;New: Explain how to save the fixtures into a separate file.&lt;/li&gt; &lt;li&gt;New: Explain the different parametrization options. Introduce the awesome pytest-cases.&lt;/li&gt; &lt;li&gt;New: Explain how to use marks to group the tests.&lt;/li&gt; &lt;li&gt;New: Explain how to test error raising with pytest.&lt;/li&gt; &lt;li&gt;Improvement: Solve W0621 Redefining name %r from outer scope (line %s) error.&lt;/li&gt; &lt;li&gt;New: Explain how to change the log level with the caplog.&lt;/li&gt; &lt;li&gt;Correction: Add link to the unpack_fixture section.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to better use with pytest.raises snippets.&lt;/p&gt; &lt;p&gt;To capture the message in a cleaner way&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocstrings&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/mkdocstrings/&#34;&gt;mkdocstrings&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the mkdocstrings library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pawamoy.github.io/mkdocstrings&#34;&gt;mkdocstrings&lt;/a&gt; is a library to automatically generate &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt; pages from the code docstrings.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;passpy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/passpy/&#34;&gt;Passpy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the passpy library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bfrascher/passpy&#34;&gt;passpy&lt;/a&gt; a platform independent library and cli that is compatible with &lt;a href=&#34;http://www.passwordstore.org/&#34;&gt;ZX2C4&#39;s pass&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce pydantic with it&#39;s models and types.&lt;/li&gt; &lt;li&gt;New: Explain how validators work.&lt;/li&gt; &lt;li&gt;New: Explain how to export the models.&lt;/li&gt; &lt;li&gt;New: Explain how to validate functions and use the mypy plugin.&lt;/li&gt; &lt;li&gt;New: Explain how to initialize empty iterables on attributes.&lt;/li&gt; &lt;li&gt;New: Explain how to solve the E0611 error.&lt;/li&gt; &lt;li&gt;Correction: Explain how to solve the E0611 error in code lines.&lt;/li&gt; &lt;li&gt;Correction: Correct pylint R0201 on pydantic models.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pypika&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pypika/&#34;&gt;Pypika&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce pypika.&lt;/li&gt; &lt;li&gt;New: Explain how to select, filter and delete data.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sqlite3&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/&#34;&gt;sqlite3&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the sqlite python library.&lt;/li&gt; &lt;li&gt;New: Explain how to get the columns of a sqlite3 query.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;talkey&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/talkey/&#34;&gt;Talkey&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce text to speech python library.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;yoyo&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/yoyo/&#34;&gt;Yoyo&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce yoyo database migration tool.&lt;/li&gt; &lt;li&gt;New: Explain how to do yoyo table relationships.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;json&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/json/json/&#34;&gt;JSON&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add json linters and fixers.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/sql/sql/&#34;&gt;SQL&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the sql data types.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sqlite&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/&#34;&gt;SQLite&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce sqlite and it&#39;s upsert feature.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;software-architecture&#34;&gt;Software Architecture&lt;/h2&gt; &lt;h3 id=&#34;domain-driven-design&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/domain_driven_design/&#34;&gt;Domain Driven Design&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to inject fake dependencies into e2e tests with click.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;repository-pattern&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/repository_pattern/&#34;&gt;Repository Pattern&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Warn about the definition of attributes created by the ORMs.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;Life Management&lt;/h2&gt; &lt;h3 id=&#34;strategy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/strategy/&#34;&gt;Strategy&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce strategy document.&lt;/p&gt; &lt;p&gt;Differentiate between strategic planning and strategic thinking&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;sleep&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/&#34;&gt;Sleep&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain the benefits of sleep, the consequences of lack of sleep and the physiological effects of sleep including the circadian rhythm and what is melatonin.&lt;/li&gt; &lt;li&gt;New: Explain sleep pressure, caffeine and the relationship with the circadian rhythm.&lt;/li&gt; &lt;li&gt;New: Explain the independence between circadian and sleep pressure.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;haproxy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/haproxy/&#34;&gt;HAProxy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce haproxy and how to do a reverse proxy with it.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Correct meditation navigation element.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;monica&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/monica/&#34;&gt;monica&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add monica installation.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add ale language server processor Vim plugin.&lt;/li&gt; &lt;li&gt;New: Add only part of files to the index to stage.&lt;/li&gt; &lt;li&gt;New: Create ALEToggleFixer command to enable/disable fixers.&lt;/li&gt; &lt;li&gt;New: Make fugitive commit workflow more user friendly.&lt;/li&gt; &lt;li&gt;Correction: Add movement mappings for the commit message window.&lt;/li&gt; &lt;li&gt;New: Explain how to use YouCompleteMe to complete prose.&lt;/li&gt; &lt;li&gt;Correction: Explain how to limit the autosuggestion results to one when writing prose.&lt;/li&gt; &lt;li&gt;New: Explain how to search synonyms inside vim.&lt;/li&gt; &lt;li&gt;Correction: Improve the environment to write commits with more bindings and restoring bindings once you close the message.&lt;/li&gt; &lt;li&gt;New: Explain how to manage python foldings.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;zfs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/&#34;&gt;ZFS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce zfs and some basic commands.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/&#34;&gt;Writing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add there is/are avoidance pattern.&lt;/li&gt; &lt;li&gt;New: Explain the guidelines and tools I use for writing.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;meditation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/meditation/&#34;&gt;Meditation&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Define meditation and it&#39;s types.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;video-gaming&#34;&gt;Video Gaming&lt;/h3&gt; &lt;h4 id=&#34;the-battle-for-wesnoth&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/wesnoth/&#34;&gt;The Battle for Wesnoth&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to play the loyalist civilization.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Add sh awesome library.&lt;/li&gt; &lt;li&gt;Correction: Fix broken links.&lt;/li&gt; &lt;li&gt;New: Add factoryboy factory usage.&lt;/li&gt; &lt;li&gt;New: Add the xy problem.&lt;/li&gt; &lt;li&gt;New: Add tinydb documentation.&lt;/li&gt; &lt;li&gt;New: Add prevent cookiecutter from processing some files docs.&lt;/li&gt; &lt;li&gt;New: Add first cutting shapes steps.&lt;/li&gt; &lt;li&gt;Correction: Improve the changelog generation with commitizen.&lt;/li&gt; &lt;li&gt;Correction: Remove unwanted gifs on rave dances.&lt;/li&gt; &lt;li&gt;New: Add kicking-running man and tap spin.&lt;/li&gt; &lt;li&gt;New: Prevent additional whitespaces when jinja condition is not met.&lt;/li&gt; &lt;li&gt;Correction: Correct the running man.&lt;/li&gt; &lt;li&gt;New: Add how to keep historical data on database table changes.&lt;/li&gt; &lt;li&gt;New: List all process swap space usage.&lt;/li&gt; &lt;li&gt;New: Introduce the click python library.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add more steps.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Quick tempo running man&lt;/li&gt; &lt;li&gt;Quick tempo T-Step&lt;/li&gt; &lt;li&gt;Francis T-Step&lt;/li&gt; &lt;li&gt;Sacco kicks&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add Francis spin and first version of dance routine.&lt;/p&gt; &lt;p&gt;Corrected how to reach the quick tempo running man.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: More guidelines on how to speed up the running man.&lt;/p&gt; &lt;p&gt;And refactor in different files&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add times for next steps to learn.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Added ash, birch and beech description.&lt;/li&gt; &lt;li&gt;New: Introduce wireguard.&lt;/li&gt; &lt;li&gt;New: Explain how to debug elasticsearch yellow state.&lt;/li&gt; &lt;li&gt;Correction: Update python ci docs.&lt;/li&gt; &lt;li&gt;New: Explain how to solve cyclic imports when using type hints.&lt;/li&gt; &lt;li&gt;New: Evaluate the different solutions to programmatically interact with databases.&lt;/li&gt; &lt;li&gt;Correction: Remove xkcd image.&lt;/li&gt; &lt;li&gt;Reorganization: Extract type hints to it&#39;s own file.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Bump material version to 6.0.2.&lt;/p&gt; &lt;p&gt;Also take the chance to move images directory to img&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct repository pattern images path.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Correction: Correct image paths.&lt;/li&gt; &lt;li&gt;Correction: Add note on the flexibility of query builders.&lt;/li&gt; &lt;li&gt;Correction: Remove type hints from python code styling.&lt;/li&gt; &lt;li&gt;New: Explain the use of Generic typing.&lt;/li&gt; &lt;li&gt;Correction: Correct domain driven design image path.&lt;/li&gt; &lt;li&gt;Correction: Remove broken links.&lt;/li&gt; &lt;li&gt;New: Explain how to make your python packages mypy compliant.&lt;/li&gt; &lt;li&gt;Correction: Explain how to remove all pip packages from a virtualenv.&lt;/li&gt; &lt;li&gt;Correction: Discourage the use of pip-tools in the CI.&lt;/li&gt; &lt;li&gt;Correction: Explain how to get started.&lt;/li&gt; &lt;li&gt;Correction: References between articles.&lt;/li&gt; &lt;li&gt;New: Explain how to fix W0707 mypy error.&lt;/li&gt; &lt;li&gt;New: Introduce wesnoth, and the northerners and rebels civilizations.&lt;/li&gt; &lt;li&gt;New: Explain how to use Wake on Lan.&lt;/li&gt; &lt;li&gt;New: Explain how to use TypeVar to specify children class.&lt;/li&gt; &lt;li&gt;New: Explain how to solve W0106 in list comprehensions.&lt;/li&gt; &lt;li&gt;New: Explain how to solve SIM105.&lt;/li&gt; &lt;/ul&gt; &lt;aside class=&#34;md-source-file&#34;&gt; &lt;span class=&#34;md-source-file__fact&#34;&gt; &lt;span class=&#34;md-icon&#34; title=&#34;Last update&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M21 13.1c-.1 0-.3.1-.4.2l-1 1 2.1 2.1 1-1c.2-.2.2-.6 0-.8l-1.3-1.3c-.1-.1-.2-.2-.4-.2m-1.9 1.8-6.1 6V23h2.1l6.1-6.1zM12.5 7v5.2l4 2.4-1 1L11 13V7zM11 21.9c-5.1-.5-9-4.8-9-9.9C2 6.5 6.5 2 12 2c5.3 0 9.6 4.1 10 9.3-.3-.1-.6-.2-1-.2s-.7.1-1 .2C19.6 7.2 16.2 4 12 4c-4.4 0-8 3.6-8 8 0 4.1 3.1 7.5 7.1 7.9l-.1.2z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/span&gt; &lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-timeago&#34;&gt;&lt;span class=&#34;timeago&#34; datetime=&#34;2024-11-27T15:36:58+00:00&#34; locale=&#34;en&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-iso_date&#34;&gt;2024-11-27&lt;/span&gt; &lt;/span&gt; &lt;/aside&gt; &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2020/</link>
      <pubDate>2024-11-27 15:36:58+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/yearly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2020/</guid>
      
    </item>
    
  </channel>
</rss>